data;handlers;hash;message
2007-07-19 21:07:03+00:00;1;99b21ff58ad2e2ba83172512d7f513a7c37e50c3;Created sympy-merge branch with basic structure of directories, core sources (with compatibility code removed) and refactored utils.py. Also changed sympy/__init__.py.
2007-07-19 21:07:03+00:00;4;99b21ff58ad2e2ba83172512d7f513a7c37e50c3;Created sympy-merge branch with basic structure of directories, core sources (with compatibility code removed) and refactored utils.py. Also changed sympy/__init__.py.
2007-07-19 21:07:03+00:00;1;99b21ff58ad2e2ba83172512d7f513a7c37e50c3;Created sympy-merge branch with basic structure of directories, core sources (with compatibility code removed) and refactored utils.py. Also changed sympy/__init__.py.
2007-07-19 21:07:03+00:00;1;99b21ff58ad2e2ba83172512d7f513a7c37e50c3;Created sympy-merge branch with basic structure of directories, core sources (with compatibility code removed) and refactored utils.py. Also changed sympy/__init__.py.
2007-07-22 12:30:04+00:00;1;5009295c6f76e95e13780361bc3e88d639463cdb;Merged matrices. Bug fix in resultant() (made it working for 'sparse' polynomials. Bug fix in coeff_list() (rewritten unification of monomials).
2007-07-24 17:26:05+00:00;1;4f4aca38b0416c8a7ec2491f737e7f966c158176;Added plotting module.
2007-07-24 17:26:05+00:00;1;4f4aca38b0416c8a7ec2491f737e7f966c158176;Added plotting module.
2007-07-24 17:26:05+00:00;1;4f4aca38b0416c8a7ec2491f737e7f966c158176;Added plotting module.
2007-07-24 17:26:05+00:00;1;4f4aca38b0416c8a7ec2491f737e7f966c158176;Added plotting module.
2007-07-24 17:26:05+00:00;5;4f4aca38b0416c8a7ec2491f737e7f966c158176;Added plotting module.
2007-07-24 17:26:05+00:00;1;4f4aca38b0416c8a7ec2491f737e7f966c158176;Added plotting module.
2007-07-24 20:00:05+00:00;1;6ab1bc6e76e6e25c7f4a0713136f056ff83cdfc9;Made geometry module working. Added preliminary support for trig inveses. Removed compatibility code from numbers.py. Fixed imports in specfun module.
2007-07-27 04:12:00+00:00;1;4d8538c3f08d7870aa39e595bf1573130c7bc812;implemented the tanh-sinh algorithm for numerical integration
2007-07-28 00:52:00+00:00;4;780ca591ad07d4c23613b6ef75176608f192d24f;Refactored sin, cos, tan. Added preliminary support for cot, sinh, cosh, tanh, coth. Merged old trigonometric tests with test_eval_apply.py. Added all new functions to ordering list.
2007-07-28 12:39:02+00:00;1;06c9d1b7267872b2fec84c9f1f2a149cc0a1705d;Polynomials: added forwarding of attributes to underlying sympy expr
2007-07-29 00:34:01+00:00;1;6be5d8309485f75ce42c6b66424114ec5d8ed35b;"- Reworked assumptions model slightly to be a little less strict in specifications
- Code included for issue 264 (commented out)
- Fixes for issue 266"
2007-07-29 00:34:01+00:00;1;6be5d8309485f75ce42c6b66424114ec5d8ed35b;"- Reworked assumptions model slightly to be a little less strict in specifications
- Code included for issue 264 (commented out)
- Fixes for issue 266"
2007-07-29 18:31:00+00:00;1;aab1a9978c5d3d19162bb7c7723665ff7d09d811;Rewrite/refactoring of plotting calculation and display code. Several examples and tests (commented out) still don't work because of issue 273.
2007-07-30 01:20:02+00:00;2;dfe55b87c2954b39ebb6c131f3120cdfa285bdc7;Added trigonometric and hyperbolic inverses and refactored other defined functions (simplified evaluation logic, added power series). New functions are work in progress so not all cases are properly tested, yet.
2007-07-31 00:43:05+00:00;1;5cbf1ec7cf868f2f6c0dab4100f0486b6417b229;Plotting: split tasks of calculating vertices and vertex colors for faster UI response. Added color and style arguments to functions. See examples.
2007-07-31 00:43:05+00:00;1;5cbf1ec7cf868f2f6c0dab4100f0486b6417b229;Plotting: split tasks of calculating vertices and vertex colors for faster UI response. Added color and style arguments to functions. See examples.
2007-08-01 01:49:05+00:00;1;c579d08fe9515807d7c49606d0f3facf58c125ab;"reimplemented sums_products.py, placed in /concrete/ (perhaps temporarily); all tests except one run"
2007-08-03 22:22:02+00:00;1;1d0f629e67cd15448a491cc7838c180d2233e385;Big plotting release. Better automatic interval handling. Faster color calculations. style and color properties added, with support for lambda and sympy expression-based color functions. Improved plotting examples.
2007-08-03 22:22:02+00:00;1;1d0f629e67cd15448a491cc7838c180d2233e385;Big plotting release. Better automatic interval handling. Faster color calculations. style and color properties added, with support for lambda and sympy expression-based color functions. Improved plotting examples.
2007-08-06 15:22:02+00:00;1;f09b2e61498a714b5ffdd155e60d13a634620620;Forgot to add a file.
2007-08-06 23:06:01+00:00;8;a047c536b78e6b9535e089773989aa587176a942;Added lambdify command, which takes an expression or vector of expressions along with an ordered list of Symbol arguments and returns a lambda function which uses python math for evaluation.
2007-08-07 06:49:04+00:00;2;80605526cd161bb49bde6ea51684505367c70ae1;polynomials: bug fixed in roots
2007-08-07 22:53:01+00:00;1;628a9fd3ac583c8928d1109e2d3a416028c008af;Plot view rotation presets and key commands. F1=xy, F2=xz, F3=yz, F4=perspective. Made perspective the default for surfaces.
2007-08-08 20:36:00+00:00;2;40b6ad96446850b28808b05adce77a3fb6e44b74;Custom coloring with syntax and behavior described at http://straightupcoding.blogspot.com/2007/07/some-thoughts-on-plot-coloring-with.html (except for multi-step gradients)
2007-08-09 19:43:03+00:00;1;852b48a200c5f20f0bcdfab0663690b4a5fce827;Plotting: multi-step gradients for color schemes.
2007-08-21 02:00:01+00:00;4;0872613e819bacaeb8a1eb8f791e06d0635fe17d;Moved all functions to sympy/functions (see issue 310). Cleaned a bit setup.py (no more remove __init__.py when running doctest).
2007-08-21 02:00:01+00:00;1;0872613e819bacaeb8a1eb8f791e06d0635fe17d;Moved all functions to sympy/functions (see issue 310). Cleaned a bit setup.py (no more remove __init__.py when running doctest).
2007-08-21 18:53:05+00:00;1;b6d17aee789d475657e4b692dd9539585ccfc725;Added GTK and pygame printing facilities and updated examples.
2007-08-21 18:53:05+00:00;1;b6d17aee789d475657e4b692dd9539585ccfc725;Added GTK and pygame printing facilities and updated examples.
2007-09-01 01:15:04+00:00;1;637fb096ff1613995b709df2383ea7d640793a40;Handled ImportError when attempting to import curses
2007-09-01 08:16:00+00:00;1;25412c50baa45231ff5d8cebed1c5447aecc216f;Improved risch_norman(). Now you can integrate quite big class of trigonometric and hyperbolic functions without need for advanced simplification routines. However in complicated cases still function is rewriten in terms of tan() and tanh() so results are non pretty. Added also support for factorization into linear factors so also inverses can appear in the antiderivative (in terms of complex logarithms, so another simplification routine is needed). Added several new rewrite rules to trigonometric and hyperbolic functions.
2007-09-10 23:43:04+00:00;1;38a2ce03a21fd15cf2dc78933c8fddad491a7bd9;Upgraded bundled pyglet.
2007-09-10 23:43:04+00:00;1;38a2ce03a21fd15cf2dc78933c8fddad491a7bd9;Upgraded bundled pyglet.
2007-09-10 23:43:04+00:00;1;38a2ce03a21fd15cf2dc78933c8fddad491a7bd9;Upgraded bundled pyglet.
2007-09-10 23:43:04+00:00;1;38a2ce03a21fd15cf2dc78933c8fddad491a7bd9;Upgraded bundled pyglet.
2007-09-12 07:25:05+00:00;1;2aa7846f28d76abce3a077346681dfb84bfa31fa;Fix test_pretty.py when running without -s option.
2007-09-14 19:21:05+00:00;1;16983de4f2a99a9ebdb0b670940dc95232797b88;"pprint: robustify curses initialization
curses.setupterm can throw curses.error when e.g. TERM is not set.

I spot this when doin distributed testing via 'py.test -d' and for me now all
tests pass.

see: #242"
2007-09-16 21:47:05+00:00;1;25c4772257bef93bcfe2c42b499de6e0564fcb70;Impl. experimental core.
2007-09-18 13:10:03+00:00;1;b2d581dd5ef0696c3baf12d15691be2466d1a643;cont developing sandbox/core
2007-09-18 14:50:05+00:00;1;db6590a84071cbbc1befae279acdc5d34cf259e8;Impl Mul and Pow.
2007-09-18 14:50:05+00:00;1;db6590a84071cbbc1befae279acdc5d34cf259e8;Impl Mul and Pow.
2007-09-19 14:44:04+00:00;1;77cca226c6d382db47cc68cf5dcd4728e8a6f6b7;Impl dummy support to Symbol in sandbox.core
2007-09-21 08:22:05+00:00;1;f39b624506c22a38d4c4fe93789b51bc319e0170;sandbox.core: code clean up, expose Interval.
2007-09-21 08:51:03+00:00;1;f206f515979e3630666e17a5ae5e7cef593797f2;sandbox.core: impl memoizer_Float_new
2007-09-23 16:16:05+00:00;1;ddd03494ca525a76b3a83f57df117cc094dde5ec;committing a huge patch, that moves cot from ApplyCot to the new model. All tests pass
2007-10-02 16:31:04+00:00;1;8d8189ddc8ac350d1e2bf9cc8fe7ff1954dde0f1;"pprint: rework & add nice unicode output for integrals, fractions, braces, etc...

This is somewhat a draft.
Idea: Boris Kocherov <bkocherov@gmail.com>

To see how it looks run isympy in unicode-capable terminal & type:

In [1]: pprint_use_unicode(True)

In [2]: pprint sin(x/(y+1))

In [3]: pprint Integral(sin(th)/cos(ph), (th,0,pi), (ph, 0, 2*pi))


see: #396"
2007-10-02 16:31:04+00:00;1;8d8189ddc8ac350d1e2bf9cc8fe7ff1954dde0f1;"pprint: rework & add nice unicode output for integrals, fractions, braces, etc...

This is somewhat a draft.
Idea: Boris Kocherov <bkocherov@gmail.com>

To see how it looks run isympy in unicode-capable terminal & type:

In [1]: pprint_use_unicode(True)

In [2]: pprint sin(x/(y+1))

In [3]: pprint Integral(sin(th)/cos(ph), (th,0,pi), (ph, 0, 2*pi))


see: #396"
2007-10-05 20:10:04+00:00;2;ef95d618e1fda2dc6b50a0edf343a7b321467527;pprint: add support for multile indexes in unicode mode
2007-10-27 11:32:22+02:00;1;cc275dd65d417c67505e692a3a4f438da4a796e5;"Fixes the sympify(""exp(x)"") problem, issue 439."
2007-11-01 13:24:50+03:00;1;9feb70958207b687be0528e4143cb4005981e40f;"isympy: try to be more prettier by default
We use 2D output, and unicode when available.

fix-for: #425"
2007-11-24 02:39:46+01:00;1;9b7e98ea0bade4d8248d5dac922ca8f6a7cc2e57;merge
2007-12-06 00:46:56+01:00;1;929cdd3dd27db657dc2525e56f0f20a0d4c026ca;pyglet updated to 1.0beta2
2007-12-06 00:46:56+01:00;1;929cdd3dd27db657dc2525e56f0f20a0d4c026ca;pyglet updated to 1.0beta2
2007-12-06 00:46:56+01:00;1;929cdd3dd27db657dc2525e56f0f20a0d4c026ca;pyglet updated to 1.0beta2
2007-12-06 00:46:56+01:00;2;929cdd3dd27db657dc2525e56f0f20a0d4c026ca;pyglet updated to 1.0beta2
2007-12-06 00:46:56+01:00;3;929cdd3dd27db657dc2525e56f0f20a0d4c026ca;pyglet updated to 1.0beta2
2007-12-06 00:46:56+01:00;2;929cdd3dd27db657dc2525e56f0f20a0d4c026ca;pyglet updated to 1.0beta2
2007-12-06 01:27:39+01:00;1;6f946df5cf3ec724ded388da60d9ad502caed2ef;"The speed of integration of polynomials improved (10x).

This is done by trying to convert the integrand to a Polynomial and if we
succeed, call Polynomail.integrate(), which is very fast.

The code could still be sped up by some tricks, but this patch is a huge step
forward."
2007-12-27 23:43:14+01:00;1;8271153ec2756ef7fd2981334835103115cb4c5a;"LaTeX preview

Improved 'preview' function it self and its documentation.
Added also several wrappers (like pngview). This version
is integrated with new LaTeX printer ('inline' keyword).

I have rewriten LaTeX code generation almost from
scratch. Now it supports:

 - almost all functions (zeta missing)
 - multivariable derivatives
 - proper fractions
 - additional symbols
 - proper brackets
 - square roots

  and so on.

I also added the 'inline' key word to both LatexPrinter
and latex(). If it is set to True, the printer will
generate inline code $ $. Otherwise enclose the
expression in 'equation*' environment.

Added support for typestting lists, tuples, dicts
and matrices (using math-mode for all).

Swiched from as_numer_denom() to fraction() to avoid
putting expressions like 1/(1+1/x) together."
2007-12-28 00:26:28+01:00;1;3fa3fe0a3d8c84a0c29ca93073d0f2d15931fa5a;Converted from CRLF to LF as the rest of SymPy
2008-01-02 02:06:51+01:00;1;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:06:51+01:00;1;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:06:51+01:00;1;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:06:51+01:00;1;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:06:51+01:00;3;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:06:51+01:00;2;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:06:51+01:00;1;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:06:51+01:00;1;039513b87c04eb0fa469dc77fbd3fe065518be9d;Pyglet moved from sympy.plotting to sympy.thirdparty.
2008-01-02 02:38:43+01:00;3;7240852870d884691049f2ca338f166db8e3916c;pyglet updated to the latest svn version
2008-01-05 01:36:20+01:00;3;83595cbb5e835b1e8459ed1f8959c1540ba02b4b;pyglet updated to the latest svn
2008-01-27 17:32:05+03:00;3;71cdfc8e77fde54d0db9cd5bd79e95b15b851d77;"[1/4] move cache primitives into sympy/core/cache.py

This patch just does that. Everything was moved as it is -- i.e. no changes
were made along the road."
2008-02-02 22:38:44+01:00;1;4823441189972b8dbc20af5cb037bddbb2de9c09;Line endings converted to LF (#612)
2008-02-02 22:38:44+01:00;1;4823441189972b8dbc20af5cb037bddbb2de9c09;Line endings converted to LF (#612)
2008-02-02 22:38:44+01:00;1;4823441189972b8dbc20af5cb037bddbb2de9c09;Line endings converted to LF (#612)
2008-02-02 22:38:44+01:00;1;4823441189972b8dbc20af5cb037bddbb2de9c09;Line endings converted to LF (#612)
2008-02-02 22:38:44+01:00;1;4823441189972b8dbc20af5cb037bddbb2de9c09;Line endings converted to LF (#612)
2008-02-02 22:38:44+01:00;9;4823441189972b8dbc20af5cb037bddbb2de9c09;Line endings converted to LF (#612)
2008-03-01 01:31:16+03:00;1;7b4f1c27a42d7a64c4b8091755d44a6a509937bd;"assumptions: cache 'unknown' assumptions as well

Unknown assumptions usually take the highest time to evaluate, and we already
cache known assumptions, so there is no reason why not to cache unknowns.

This speed up things a bit:

x = Symbol('x')

        timeit          py.test
        x.is_positive   sympy/core/

old:    115 µs          13.8s
new:     21 µs          12.8s"
2008-05-02 09:51:39+02:00;1;9e5950252d3be6d051127837c76541a96bb503d5;"Big update for pickling sympy classes and objects.

- Moved the __getstate__ and __setstate__ methods to AssumeMeths since it is
  the top class of most other classes.
- __getstate__ now gets all the values that are stored in slots of all classes
  up the inheritence-tree. It has to made sure that values that should be
  pickled are either saved in slots or an own __getstate__ method is written.
- Tests for all classes in the core written (some still fail!)"
2008-05-05 18:18:42+02:00;2;644c4c7318807372e8aedf72b799ea638a99dbf5;"Complete rewrite of lambdify.

Now python-math, mpmath, numpy or any self-defined functions can used to
replace the slower sympy-functions."
2008-05-10 00:03:07+02:00;1;c889b9df926b514fb51affdf5e8bac0ea45a57ea;"Improves lambdify:
 - more tests
 - numpy tests moved to test_external
 - lambdify_math, lambdify_numpy, .. removed since the same functionality
   can be reached with lambdify in aproximately same length.
 - lambdify and _lambdify merged
 - updated docstrings
 - updated translation dictionaries"
2008-05-10 00:03:07+02:00;7;c889b9df926b514fb51affdf5e8bac0ea45a57ea;"Improves lambdify:
 - more tests
 - numpy tests moved to test_external
 - lambdify_math, lambdify_numpy, .. removed since the same functionality
   can be reached with lambdify in aproximately same length.
 - lambdify and _lambdify merged
 - updated docstrings
 - updated translation dictionaries"
2008-06-30 13:05:31+02:00;1;020f69db80425c6971108c2bf2f05c94538973aa;Update mpmath to mpmath-svn, r504. Includes gmpy support and fix for #876.
2008-07-06 11:45:31+02:00;1;5ec3bfe7ef79c204e6ac83f02dd986a04d23ade4;"mpmath updated to svn r520.

New features:

* python2.4 compatibility
* faster algorithm for Pi calculation
* couple more functions"
2008-07-06 11:55:52+02:00;1;bfb44f1a2898c9255e02a2d8f0f0622c7eafad17;"mpmath tests copied to sympy.

Unfortunately, currently they only work when executed from the sympy/
directory. The paths now need to be fixed."
2008-07-09 12:45:06+02:00;3;0d8f99a2e6da152a9e31f0a9799102ffdb6c2241;"implemented compiling of functions to machine code, this includes some C code the generation
It's experimental and thus not accessible by default.
The setup of libtcc (on which it depends) is somewhat messy.

a benchmark:

big function:
compile time (including sympy overhead): 0.065525 s
for x = (0, 1, 2, ..., 999)/1000
20 times in 3 runs
compiled:      0.1726 0.1824 0.1716
Python lambda: 0.4180 0.6545 0.6778
Psyco lambda:  0.3070 0.2774 0.2931

simple function:
compile time (including sympy overhead): 0.029621 s
for x = (0, 1, 2, ..., 999)/1000
20 times in 3 runs
compiled:      0.2223 0.2220 0.2157
Python lambda: 0.1053 0.1035 0.0984
Psyco lambda:  0.1286 0.0997 0.0616

frange with f(x) =
exp(sin(exp(-x**2)) + sqrt(pi)*cos(x**5/(x**3-x**2+pi*x)))
for x=1, ..., 100000
in 3 runs including full compile time
frange:        0.1167 0.1215 0.1134
numpy:         0.2751 0.3945 0.5012

So sympy is now officially faster than numpy ;)"
2008-07-13 23:28:55+02:00;2;47a070a868faea620f0d033b7886abe352a08678;"Fixes pretty printing/isympy on windows (#933).

It turns out that the windows curses in my python distribution (ActiveState)
doesn't implement setupterm or tigetnum.  So, the terminal_string method in
stringpict.py fails when trying to get the terminal width.  I used a recipe
from the ASPN cookbook to fix this:

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/440694

The following example works now:

In [1]: (1/cos(x)).series(x, 0, 10)
Out[1]:
     2      4       6        8
    x    5*x    61*x    277*x
1 + -- + ---- + ----- + ------ + O(x**10)
    2     24     720     8064"
2008-07-25 22:03:06+04:00;2;32e0fbed3aa392879094f8974555efe76b8a8d7f;"[3/24]: rework assumptions to use FactRules  (assumptions.py)

This is start of big rewrite -- almost all old code goes away, and where
possible we delegate to FactRules:

- rework intro text
- use FactRules to define inference rules
- `._get_assumption()`  ->  `._what_known_about()`
  o rework to use FactRules prerequisites (not optimal at the moment)
  o rework to store new known facts in ._assumptions (this will not cause
    problems -- we'll change Basic.__hash__ not to depend on it later)

- `.assume()`  ->  `._learn_new_facts()`
  o now this is private -- we don't allow users to modify assumptions in-situ
  o use FactRules inference engine to do actual logic stuff


Also, now SymPy is in a state where a lot of things is temporarily ""broken"" --
we'll ""cure"" it gradually and fully restore to ""all tests pass"" in the end of
this patch series.

----

Well, assumptions were a problem for a long period of time. I don't disentangle
them here, but I consider what is being done is still an improvement, because:

- we'll gain correctness
- we'll gain some speedup
- we'll separate logic stuff into its own subsystem


Assumptions were long talked/grumbled about, and you know, when I was at school
I've never understood why learning history is needed at all, but now I know
that learning history brings answers to most of out today's problems -- that's
why it is important.

So a bit of relevent history ...

References
----------

1. ""Remove assumptions""

    http://groups.google.com/group/sympy/browse_thread/thread/10e52aa310971289

2. ""Dealing with assumptions""

    http://groups.google.com/group/sympy/browse_thread/thread/c436fd9cfc701138

3. ""Pearu: 'it is difficult to resolve assumption, speed and caching issues within SymPy development policy'""

    http://groups.google.com/group/sympy/browse_thread/thread/ffdb5468fe5a8356#8545b50eab75c5d9

4. ""Ondrey: 'last large missing piece are assumptions'""

    http://groups.google.com/group/sympy/browse_thread/thread/652741aa2d4e952

5. ""Ondrej: 'I think SymPy will be ready for it (writing core in C/Cython) when we find a robust, simple, general and a fast way how to do assumptions'""

    http://groups.google.com/group/sympy/browse_thread/thread/4c13d88475def207#9b8609f18f2e1522

6. ""Ondrej: 'SymPy doesn't have a very robust assumption model, we are still investigating how this could be done.'""

    http://groups.google.com/group/sympy/browse_thread/thread/8e35d2b640cc16d0#cafc0591fb84aeea

7. ""Saroj: 'I am wondering if SymPy
    currently features assumption to limit a variable's range just as we
    can assume it to be real, so that a variable x can be defined as real
    in the range [-1,1].'""

    http://groups.google.com/group/sympy/browse_thread/thread/a220124034d22765

8.  sympycore v 0.1 released, ""Pearu: will try to implement a robust and flexible assumption model.""

    http://groups.google.com/group/sympy/browse_thread/thread/675a631be78f027c#d13828298f6e3add

9.  sympy robustness improved -- Ondrej fixes nasty caching bug sitting in assumptions.py

    http://groups.google.com/group/sympy/browse_thread/thread/c606f20119365de1


Signed-off-by: Kirill Smelkov <kirr@landau.phys.spbu.ru>
Signed-off-by: Ondrej Certik <ondrej@certik.cz>
Signed-off-by: Mateusz Paprocki <mattpap@gmail.com>"
2008-08-01 08:49:52+02:00;3;14941a018346aab6c29a8445ebdbaa3aa2177ac9;"Unified isympy and sympy.interactive code

Now isympy calls init_session from sympy.interactive
for any type of session. This simplifies creation of
new interactive sessions.

Other changes:

 [1] Added sympy.interactive.init_printing

     This will setup sys.displayhook, using Unicode
     or ASCII pretty printing (use_unicode parameter).

 [2] Added new option '-p' or '--pretty' to isympy.

 [3] Initialize f,g,h Functions by default.

Signed-off-by: Mateusz Paprocki <mattpap@gmail.com>
Signed-off-by: Ondrej Certik <ondrej@certik.cz>
Signed-off-by: Kirill Smelkov <kirr@landau.phys.spbu.ru>"
2008-08-08 00:02:51+04:00;2;e1e9f605f0f1fb4ea07130dda5fc74589cb95bc8;"Basic.compare_pretty -- to pretty-compare both SymPy and non-SymPy objects

Since containers (dict & set) can contain both SymPy and non-SymPy elements, we
need pretty-comparison which supports both kinds of objects.

Signed-off-by: Kirill Smelkov <kirr@landau.phys.spbu.ru>
Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2008-08-26 13:36:04+04:00;1;af5b19a53567bb2dcf927d657ad4179af9eed157;"Sum().doit() doesn't do it  (#1028)

I fixed the error in Sum(1/k - 1/(k+1),(k,1,n)).doit().
The problem was in eval_sum_symbolic when trying to multiply
L*eval_sum_symbolic(R, (i, a, b))

The problem was thas sometimes eval_sum_symbolic returns None.

Also I added a way to compute sums using the telescopic property.
Currently the solution relays in solve, so the algorithm is limited by solve.
For example:
>>>solve(f(k+m)-f(k),m) fails
I would like k=0
>>>solve(cos(k+m)-cos(k),m)=-k + acos(cos(k))
I would like k=0

When computing the symbolic sum, we should expand the fractions to partial fractions,
this way we could solve more cases using telescopic.
For example Sum(1/(k*(k+1)), (k,1,n)) would be computed.

And finally, the telescopic method only deal with direct 2 terms telescopic, so the
following sum won't be computed:
Sum(1/k-2/(k+1)+1(k+2),(k,1,n))

- - - -

Now the patch handles telescopic sum for f(x).

First I try to solve the equation using match, and then solve. Maybe this approach
should be implemented in solve.

Signed-off-by: Sebastian Kreft <skreft@gmail.com>
Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2008-08-27 10:48:52+02:00;1;70747d9305c7cdce0945acb84cb6766d0b53fc86;"More powerful and less redundant logic in floor and ceiling canonize

A few XFAIL'ed tests were added for new simplfications that ought to work, but don't because of issue 1050"
2008-10-19 16:15:17+02:00;1;cb4de8c64181f969bd665e84523b8fb4bc66da0d;"mpmath updated to 0.10

The mpmath dir was copied verbatim, only whitespace and lineends were fixed (to
unix way that we use in sympy).

We fix other things in the following patches.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>
Signed-off-by: Fredrik Johansson <fredrik.johansson@gmail.com>"
2008-10-19 16:15:17+02:00;4;cb4de8c64181f969bd665e84523b8fb4bc66da0d;"mpmath updated to 0.10

The mpmath dir was copied verbatim, only whitespace and lineends were fixed (to
unix way that we use in sympy).

We fix other things in the following patches.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>
Signed-off-by: Fredrik Johansson <fredrik.johansson@gmail.com>"
2008-11-22 21:42:07+01:00;1;314a66151e3c1afb089fa7577894f5628af7d90c;"Reimplemented factoring utilities over Z[x]

This patch reimplements univariate polynomials over integers and
factorization algorithm over this domain. The module was written
to match galoispolys.py design. All functionality available in
polynomials/fast/intpoly.py was moved to the new module.

All subroutines (especially zzx_mod_gcd) use functions provided
by galoispolys.py module. The most important new development is
zzx_heu_gcd - heuristic polynomial GCD.

The new factorization code is 4 times faster on average than the
old code. Many improvements are possible, especially recombination
phase in Zassenhaus algorithm should be reconsidered."
2008-11-20 23:04:36+01:00;1;e19732c7fbd8b45e40be4d98551d1c941e7830b3;"Better formatting for examples.
  -- Add docstring to all examples
  -- Use script caller main
  -- Add python runner
  -- remove unnecessary iam_sympy_example file
  -- combine fem_test.py and fem.py

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-02-06 14:50:44+01:00;1;dc6736a56da7c054a7fc00e486b258bd73bade24;"Update sympy.mpmath to mpmath-svn

* A few fixes in evalf.py were needed. In particular, I simplified the
extrapolating
 numerical summation code to just call mpmath.nsum instead. It is a bit slower,
 but works better.
* statistics.Normal now uses mpmath.erfinv instead of the ad-hoc implementation
* A few other small interface incompatibilities in mpmath were adjusted for

All tests pass, but I could have broken some imports etc that cause it to
pass only by accident on my machine.

The new mpmath docs are not included in this patch.

Also, no particular support has been added for any of the several new functions
in mpmath.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-02-06 14:50:44+01:00;1;dc6736a56da7c054a7fc00e486b258bd73bade24;"Update sympy.mpmath to mpmath-svn

* A few fixes in evalf.py were needed. In particular, I simplified the
extrapolating
 numerical summation code to just call mpmath.nsum instead. It is a bit slower,
 but works better.
* statistics.Normal now uses mpmath.erfinv instead of the ad-hoc implementation
* A few other small interface incompatibilities in mpmath were adjusted for

All tests pass, but I could have broken some imports etc that cause it to
pass only by accident on my machine.

The new mpmath docs are not included in this patch.

Also, no particular support has been added for any of the several new functions
in mpmath.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-02-06 14:50:44+01:00;2;dc6736a56da7c054a7fc00e486b258bd73bade24;"Update sympy.mpmath to mpmath-svn

* A few fixes in evalf.py were needed. In particular, I simplified the
extrapolating
 numerical summation code to just call mpmath.nsum instead. It is a bit slower,
 but works better.
* statistics.Normal now uses mpmath.erfinv instead of the ad-hoc implementation
* A few other small interface incompatibilities in mpmath were adjusted for

All tests pass, but I could have broken some imports etc that cause it to
pass only by accident on my machine.

The new mpmath docs are not included in this patch.

Also, no particular support has been added for any of the several new functions
in mpmath.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-06-17 01:01:46+02:00;1;f9b9da0b8bda808693f1f4229f4e8183885eea36;"update mpmath to 0.12

Many thanks to Fredrik Johansson for writing most of this patch.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-06-17 01:01:46+02:00;1;f9b9da0b8bda808693f1f4229f4e8183885eea36;"update mpmath to 0.12

Many thanks to Fredrik Johansson for writing most of this patch.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-06-17 01:01:46+02:00;1;f9b9da0b8bda808693f1f4229f4e8183885eea36;"update mpmath to 0.12

Many thanks to Fredrik Johansson for writing most of this patch.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-05-22 23:45:33-06:00;2;1540b760b33dc29164cf0ee2746e36e0c4dcfb88;"Added first order homogeneous differential equations support

These are equations of the type y'=f(y/x).  These can be solved
generally.  I will add more tests later.  These all can be transformed
into two different solutions with two different integrals.  The function
heuristically attempts to return the best one.  The integrals for these
functions are usually hard ones, so sympy often fails at them or returns
results much larger than they need to be.  Because it attempts both
integrals, usually at least one of which is difficult, these can take
longer to compute than other ode types.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-06-27 11:52:46-06:00;1;2d5b68bbb8eabae168214910190e262b5f5cb465;"Added function separatevars, which separates functions multiplicatively

Namely, it will attempt to rewrite a fuction F(x,y,..) as P(x)*Q(y)*...
Also added tests.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-08-03 14:09:33-06:00;2;2c7147f4c679a77ace199e2ccaaad5ba6bf6bd4f;"Moved all ODE solving code to ode.py

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-08-06 19:11:09-06:00;3;309f105fc01a91401ee4ec55d671192a56e69659;"Rewrote ode module using hints

You can now choose among the various methods for solving an ODE when
using dsolve, which is useful as many ODEs fit more than one form and
the different solvers will often return solutions in slightly different
forms.

Use classify_ode() to find the hints matched by an ODE, and pass the
hints to dsolve as dsolve(ode, func, hint=<hint>).  There are also other
features such as meta-hints and a method for choosing the best of all
possible solutions.  See the docstring on classify_ode for more info.

This also highly restructures the ode solving engine, moving matching
(classify_ode), solution solving (odesimp) and even integration
(_handle_Integral) into their own functions, and giving each hint its
own helper function (ode_<hint name>).

This is still a work in progress.  There are still some bugs to flatten,
quite a bit of documentation to write, and some code to clean up.  But
for the most part this the hints engine works with this commit.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-08-16 21:42:55-06:00;1;b80806d590d7cef2b19b1d64ee2d760128d4207d;"Added function checkodesol() that checks solutions of odes.

This used to be checksol() in test_ode.py, but I was able to make
it general enough to warrant adding it to the main ode module
and importing it into the global namespace.

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2009-11-20 08:49:57+05:27;1;bd8edbf01f102298faeab77877aa2ecaffdede46;"fix test

Signed-off-by: Chris Smith <smichr@gmail.com>
Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-10-24 02:37:34+01:00;2;30836310d38507233e734367d2f9ce10fb991b9d;"Refactor trigonometric function code with no change in behaviour.

It is always possible to transform:
if foo:
    return bar
else:
    blah...

into

if foo:
    return bar
blah...

This frighteningly large diff consists solely of the repeated application
of this transform - thus reducing indentation levels without changing code
behaviour in any way (exception: there are tiny changes in tan and cot)."
2009-10-06 14:25:54+02:00;1;6d5dc944cb1f9ad19742b832a2557986d66c868f;"Second Quantization for Fermionic Systems

The implementation is based on the notion of a fermi surface, and is thereby
able to treat both holes and particles.  We distinguish hole indices and
particle indices from general indices by the keywords, 'above_fermi' and
'below_fermi'.

>>> a = Symbol('a',above_fermi=True)
>>> i = Symbol('i',below_fermi=True)
>>> p = Symbol('p')  			# general, unrestricted index

Another important aspect is the difference between summation indices and fixed
indices.  We mark summation indices by declearing them as dummy indices.

>>> q = Symbol('q', dummy=True)		# unrestricted summation index
>>> b = Symbol('b',above_fermi=True, dummy=True)  # summation over particle indices
>>> j = Symbol('j',below_fermi=True, dummy=True)  # summation over hole indices

These features enables the relation

	sum_q f(q) =  sum_j f(j) + sum_b f(b)

Which is important for the current implementation of Wicks Theorem.

New Sympy Objects:
==================

* Second quantisation operators:
	- CreateFermion
	- AnnihilateFermion

    - Implemented __cmp__ method for FermionicOperator:
      quasi-annihilators go right, and quasi-creators go left.  among
      quasi-creators/annihilators, the operators with dagger go left.
      otherwise alphabetical determined by index.

* Added FKet and FBra as subclasses of FermionState and FockStateBra/Ket
    - FermionState handles orbits with respect to a fermi surface, so that it
      can treat both holes and particles

* NO() to represent normal ordering brackets.

* Commutator(a,b) is made a subclass of Function
    - If a,b are secondquantisation operators, Commutator simplifes immediately.
    - Else, evaluation is triggered by .doit()

* Added tensorclass AntiSymmetricTensor
    - The intended use of the tensor class is to construct for instance a
      hamiltonian operator where the interaction and the fock term would consist
      of SQ operators and matrix elements symbolised by the tensors.
    - Takes tuples of indices as input.  The tuples are wrapped as SymTuples.

* SymTuple
    - Essentially a wrapper around a tuple.  SymTuple is subclass of Basic

* Permutation operator class to represent P(ij)[ij] = [ij] - [ji]
    Used by function simplifyIndexPermutations() to simplify Add expressions
    with Fermion operators.

Exceptions
==========
* AppliesOnlyToSymbolicIndex(Exception):

* ContractionAppliesOnlyToFermionsException(Exception):

* ViolationOfPauliPrinciple(Exception):

* SubstitutionOfAmbigousOperatorFailed(Exception):

Helper functions (regular python functions):
===========================================
* Wicks()
    - calculates the normal ordered equivalent of an expression.
    - depends on the helper function _get_contractions()

    - Brutal implementation that removes NO-brackets before evaluation.
      So far, all my attempts at intelligent treatment of partially normal
      ordered operators introduced more overhead than the speed gain.

      The idea is that NO._remove_brackets() return a sympy expression that
      has no nonzero contractions.   This method is called upon .doit(), so
      that Wicks theorem can call .doit() and calculate contractions without
      worrying about NO objects.  This happens to be both fast and simple.

      The algorithm depends on a number of features:

      - NO._remove_brackets() is able to handle operators that reach
        both above and below fermi surface, on the condition that such
        operators have dummy indices.  Dummy indices are treated like
        summation variables, so that we may split the expression by substitution:

          Fd(p) ->  Fd(a) + Fd(i)   ( sum over p is assumed )

        where
           - p is an unrestricted dummy index
           - a is a dummy index above fermi level
           - i is a dummy index below fermi level

      - FIXME: NO._eval_subs(self,old,new) is needed to overload assumtion about
        commuting factors in Mul._eval_subs()

* _sort_anticommuting_fermions()
    - bi-directional bubble sort that keeps track of permutations

* evaluate_deltas()
    - simplifies expressions by evaluating KroneckerDeltas with summation indices.

* substitute_dummies()
    - simpify expressions by renaming dummy indices consistently across terms
    - prefers 'a' before 'b'
    - FIXME: algorithm misses some simplifications, could be made more robust.

* contraction()
    - Gives contraction between two fermionic operators
    - Since we never return an unevaluated contraction, there is no need for
      Sympy.Function overhead.

* simplifyIndexPermutations()
    - simplify Add expressions with Fermion operators, by introducing Permutation
      operators P(ij) where applicable.

Tests & Examples
================

* Added a Coupled Cluster example of fermion operators.
    - The equations for Coupled Cluster Singles and Doubles are derived.

* Lots of tests for new features related to Fermionic operators"
2009-11-11 02:19:30+05:27;1;dc386907f434dee752fdb88699b067f50dec663b;"1671 testing changes

==  bin/doctest
    - added comment about the format that the blacklist can be given in.
    - moved path hacking to its own file (vks's modification)
    - added a ""strict"" option triggered with -s which makes the doctest
      strict in that no importing magic will be done by the tester: all
      imports must be explicitly given in the code snippets in docstrings.

==  bin/test
    - moved path hacking to its own file (vks's modification)

==  setup.py
    - check first two digits of sys.version or else 3.0 (with a 0)
      will look like a version that is not supported for testing.

==  sympy/utilities/runtests.py
    - no longer use glob (but do allow filename pattern matching ala fnmatch)
    - importing DocTestFinder to subclass from
    - importing re as pre to use in new doctest finder

    o sys_normcase() ADDED
        This returns a lower-case string to be used with file name
        and path operations if the system is case insensitive as
        determined by the global variable, sys_case_insensitive.

    o convert_to_native_paths()
        - use normcase

            normcase is used to make sure that paths to files are
            case insensitive.

            N.B. On win32, os.path.join leaves off the backslash that
            comes after the drive letter colon. Although python handles
            these without problems, if any pattern matching is to be
            done with the file paths, the paths must be the same since
            c:\foo will not match c:foo

            >>> os.path.join('c:','this','that')
            'c:this\\that'
            >>> f=open('c:jnk','w')
            >>> f.close()
            >>> open('c:jnk','r').read()
            ''

            So the backslash is put back in here if the system is win32.

    o get_sympy_dir() ADDED
        This has been factored out of the individual test and doctest
        routines and now includes a global variable that indicates whether
        the system is case insensitive or not as determined by the ability
        of the system to find the sympy directory when it is in upper and
        lower case. If the test is False then the system is not case
        insensitive.

    o test()
        - `args` changed to `paths` to better reflect what it is
        - expand the docstring
        - rather than globbing on file patterns, the files for testing
          are generated by get_test_files and then either all of them are
          used if the user didn't indicate desired files or else only the
          ones containing a string match between test files and user specified
          files OR a glob-like match between user specified file and basename.

    o doctest()
        - expand docstring
        - add the txt file exclusions to the blacklist so only one list
          is maintained.
        - process the blacklist here rather than passing it off to the tester.
        - I'm not sure why the testing of *txt files is not being done unless
          the version is greater than 2.4 (perhaps it didn't exist before
          then) but I didn't change it. I did, however, make sure that *py
          files are not being passed through the doctest.testfile routine
          which does not parse files in the same was as the parser used in
          test(). Previously, when *py files were going through this, if a
          code snippet was terminated with the docstrings's closing triple
          quote and no intervening newline, this caused a problem.

    o SymPyTests()
        - using global sympy_dir
        * add_paths REMOVED
            paths are no longer generated for files
        * test()
            expand docstring
        * get_sympy_dir() FACTORED OUT
        * get_paths() REMOVED
        * get_test_files() ADDED
            This does a straight walk of the directory getting files that
            match the given pattern.

    o SymPyDocTests()
        * __init__
            - blacklist no longer processed here
            - take a new ""strict"" option
            - use global sympy_dir
        * add_paths REMOVED
            paths are no longer generated for files
        * test()
            expand docstring
        * test_file()
            - use top-level imported doctest
            - sorting only done for broken 2.4 version
            - give an empty globals dict if the strict option is used.
        * get_sympy_dir() FACTORED OUT
        * get_paths() REMOVED
        * get_test_files() ADDED
            This does a straight walk of the directory getting files that
            match the given pattern.
            > importable()
                tweaked to use os.path.join
        * is_on_blacklist() REMOVED
            these are processed closer to where they are defined.

    o SymPyDocTestFinder()
        New method of finding tests that doesn't miss tests that are
        actually in the file but appear to be coming from elsewhere.
        (See docstring for more info.)

    o PyTestReporter()
        When working in the interpreter under windows, the test
        for tty doesn't work so a test for that attribute has
        been added before trying to access it.

==  sympy/utilities/source.py
        - corrected docstring to work with new strict testing.
        - removed a try/except and replaced it with the equivalent if

==  sympy/utilities/tests/test_code_quality.py
        If test and doctest are in the bin directory, I wonder if this
        should be there too...or if they should be part of the standard
        test suite like this is.... In any case,

        - the test for trailing space was modified since the way it was
          written meant that the next test would not be triggered. Here
          is an example that shows this test catches \r\n lines as though
          they were white-space terminated lines

            >>> s
            'foo\r\nbar\r\n'
            >>> f=open('c:jnk','w');f.write(s);f.close();dat=open('jnk','r')
            >>> for i,line in enumerate(dat):
            ...     if line.rstrip()+""\n"" != line and line.rstrip() != line:
            ...         print "">>"",line
            ...
            >> foo

            >> bar

        - also, since the enumeration of the file object will return \r\n
          terminated lines, we can look at the end of the line with .endswith
          rather than look ""in"" the line.

        - an additional test was added to check for the lack of newline
          at the eof (which is something that fix_whitespace already handles.

== bin/get_sympy ADDED

	File added to get the sympy path."
2009-12-05 16:27:55+01:00;11;65d64049a9fb8c2e05c80fb591514fb1caf91102;"update mpmath to 0.13

A few test files had to be renamed to run in sympy.
Import statements in tests were fixed (mpmath vs. sympy.mpmath).

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-05 16:27:55+01:00;1;65d64049a9fb8c2e05c80fb591514fb1caf91102;"update mpmath to 0.13

A few test files had to be renamed to run in sympy.
Import statements in tests were fixed (mpmath vs. sympy.mpmath).

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;3;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;2;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;2;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-07 18:52:35+01:00;1;50fbdc9e5c2f974067312b4d6674dc944dfbaaf6;"update pyglet to 1.1.3

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;3;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;2;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;2;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-08 13:44:49+01:00;1;cdb267b9858790c7deb9e481dd71bcab62d8ba7f;Merge branch 'pyglet'
2009-12-11 14:59:33+01:00;1;03442048962794dc4acdea4ebc31527b421eaffc;"Correcting indentation problems in several files.

Basically, all indents formated to 4 spaces, no hard tabs, no
whitespace at the end of lines. /bin/test was executed without
problems after modifications.

Signed-off-by: Ronan Lamy <Ronan.Lamy@normalesup.org>"
2010-03-02 10:53:10+01:00;1;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;1;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;1;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;1;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;1;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;16;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;3;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;1;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-02 10:53:10+01:00;1;9a72d817ee600476f34abf9d7dbf2101ace1e84a;"update mpmath to 0.14

A few imports all over sympy had to be adapted to the API changes.

Signed-off-by: Vinzent Steinberg <Vinzent.Steinberg@gmail.com>"
2010-03-17 21:56:23+01:00;1;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;1;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;1;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;1;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;1;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;16;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;3;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;1;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2010-03-17 21:56:23+01:00;1;32f00779c494505af63164bd5af1a07356b633b8;"Merge branch '0.6.7'

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	sympy/matrices/matrices.py"
2009-04-30 19:23:57+02:00;1;31c9aa43ffc7bc031493fc4ea27b74dc50c4d035;"New module for computing in polynomial algebras

This is the second complete rewrite, and hopefully the last one,
of polynomials module. The new module implements, new to SymPy,
philosophy of performing complicated computations in a multilevel
environment, where basic operations are done efficiently without
user interface overhead and UI does not mess with any algorithms.

Three levels were introduced:

 L0. Is implemented in procedural style and uses raw polynomial
     representations as arguments to functions. Most algorithms
     are implemented on this level including GCD and factorization.

     There are several sets of functions with special prefixes:

      1. gf_ --- polynomials over Galois fields

      2. dup_ --- Dense Univariate Polynomials over any domain
      3. dmp_ --- Dense Multivariate Polynomials over any domain

      4. d(u|m)p_zz_ --- DUP or DMP over integers
      5. d(u|m)p_qq_ --- DUP or DMP over rationals

      6. d(u|m)p_rr_ --- DUP or DMP over a ring
      7. d(u|m)p_ff_ --- DUP or DMP over a field

      8. sdp_ --- Sparse Distributed Polynomials over any domain

     Each type of polynomial: GFP, DUP, DMP, SDP, has a raw
     representation and function call specification associated:

      1. GFP repr: [c_n, ..., c_0]
             spec: gf_some_function(f, g, p, K)

             where p is prime >= 2, type int
                   K is any ZZ algebra

      2. DUP repr: [c_n, ..., c_0]
             spec: dup_some_function(f, g, K)

             where K is any algebra

      3. DMP repr: [[...], [...], ..., [...]]
             spec: dup_some_function(f, g, u, K)

             where u is number of nested levels - 1
                   K is any algebra

             DMP for u = 0 is DUP

      4. SDP repr: [(M_n, c_n), ..., (M_0, c_0)]
             spec: dup_some_function(f, g, u, O, K)

             where u is number of variables - 1
                   O is monomial order function
                   K is any algebra

 L1. Is implemented using OO paradigm and wraps up functionality
     provided by L0. For each type of polynomial there is a class
     implemented: GFP, DUP, DMP, SDP. There are additional classes
     for multivariate rational functions DMF and algebraic number
     polynomials ANP (a representation of algebraic numbers).

     Each class is constructed using an explicit representation and
     algebra specification. Method calls will unify arguments by
     coercing their ground domains (e.g. ZZ + QQ -> QQ), so there
     is no need to specify any extra arguments.

     Note that unification rules on this level are very simple so
     e.g. operations on a univariate polynomial as one argument and
     a multivariate polynomial as the other aren't allowed, unless
     you make any coercions explicitly.

     For efficiency, every class in L1 doesn't derive from Basic, which
     allows to use those classes as representations of composite ground
     domains e.g. ZZ[x,y,z], QQ(x,y).

 L2. User-level interface to polynomial manipulation algorithms. If
     you are a user, then you choose this level, which provides you
     convenient Poly class which wraps L1 classes as internal poly
     representations but provides user-friendly interface. There
     is also a set of public functions exported: gcd, lcm, factor
     and many others.

     Poly class allows you to convert a SymPy expression into a
     polynomial. There is no need to specify symbols, Poly class
     will parse the expression and figure out what are symbols
     and what are members of the coefficient domain. Note also
     that you can create polynomials using not only symbols but
     any expressions, this way Poly.symbols was renamed to
     Poly.gens, to emphasize this fact, so

                     Poly(sin(x)**2 + 1, sin(x))

     are valid arguments to Poly.__init__ and computing e.g.

                   gcd(sin(x)**2 - 1, sin(x) - 1)

     is also allowed.

Polynomial manipulation algorithms understand algebraic properties
of elements of a ground domain (polynomial coefficients). For this
purpose additional module was implemented to define all important
coefficient domains (the only missing is for algebraic numbers).

Basically the world is divided into to parts: types and categories
(here algebras or domains). Type is an object which caries data
and is equipped with algorithms for processing this data in some
way using some paradigm for this purpose. Different types have
different algorithms and use different paradigms. However from
mathematical point of view there are categories which have some
properties and don't care about internal behavior of a data type.

So, lets suppose we want to compute in integers ring. Then we have
a category ZZ, which is supposed to have binary operations +, -
*, functions like gcd(), lcm() etc. and some properties. On the
other side we have several data types for integers: Python (int),
SymPy (Integer) or gmpy (mpz), or maybe even something else. Each
of these has different algorithms implemented and have different
interfaces, e.g. int does not implement gcd(), which is however
implemented by Integer and mpz. On the other hand int and mpz
are fast, but Integer is very slow.

To have one source base of algorithms we specify a category for
a mathematical concept for each data type we want to have, e.g.
we have (in algebratools.py) ZZ_python, ZZ_sympy and ZZ_gmpy
which implement Ring interface which is based on Algebra
abstract class.

You can use any of ZZ_* classes as coefficient domains in new
polynomials module, by creating instances of those classes. Or
you can just

          from sympy.polys.algebratools import ZZ

to get optimal solution for your system (ZZ is an instance).

Then if a function gets as parameter K algebra ZZ, then it knows
that all coefficients given in a polynomial representation to this
function have type ZZ.dtype (e.g. int) and know that int is supposed
to provide some methods, e.g. __add__ and that ZZ wraps some other
methods, e.g. ZZ.gcd is really igcd from sympy.core.numbers.

The same is for other domains: QQ, ZZ[x,y], ZZ(x,y,z), QQ('x') ...

There is also one category above all others: EX, which is a wrapper
for SymPy expressions. If Poly can't figure out an optimal domain
or such domain in not yet implemented (e.g. algebraic numbers),
then it uses EX. EX is slow, but tries to do its best to solve
zero equivalence problem in a symbolic way (by calling simplify).

On L2 level you don't have to care about domains at all. Poly will
figure out a domain or fallback to EX. However, when implementing
algorithms that require certain algebraic properties to be met, be
specific or you loose the battle. The most important thing is
to see a difference between computations over a ring and a field,
which can cause you a lot of trouble. So, don't hack and use
the interface, e.g. don't gcd(), div(), div() but cancel() and
it will take care of all weird cases.

To specify a domain simply add `domain` keyword argument. Note
you need also to specify generators when this kwarg is given
(this will change in future) e.g.

             Poly(x**2*y + z, x, y, domain='ZZ[z]')

Domain can be specified as a string or explicit algebra. Allowed
strings are 'GF(p)' where p is prime, 'ZZ' or 'Z', 'QQ' or 'Q',
'ZZ[x,y,z]', 'QQ[x,y,z]', 'ZZ(x,y,z'), 'QQ(x,y,z)' and 'EX'. Or

           from sympy.polys.algebratools import ZZ

and ZZ[x,y,z] or even ZZ['x','y','z'] will work. Each algebra
implements __getitem__ for this, which fallbacks to poly_ring
method. Note that __call__ is used for very different purpose,
so don't get tricked, use ZZ.frac_field(x,y,z) or a convenient
string representation.

If you don't want to specify an exact domain but you know
computation has to be done in a field then pass `field=True`
to Poly or any polynomial function to force a Field to be
chosen rather than a Ring. By default if Poly sees that
coefficients fall into a Ring it will choose it, e.g.

           Poly(x**2 + 1) will have the domain ZZ

but

           Poly(x**2 + 1, field=True) will have QQ

Despite that if a function needs a field then it will silently
convert to field and continue computations. To disable this
set `auto=False`. Don't complain if you get DomainError or
ExactQuotientFailed exceptions. This automatic behaviour is
available only on L2 level. On other levels no auto-games are
played by polynomial manipulation algorithms and if there is
an inappropriate domain of computation specified, algorithm
will just fail, raising an exception.

If you want to compute in Galois fields then specify `modulus`
keyword argument. Note that only univariate polynomials are
supported and some methods might not be implemented (you will
get OperationNotSupported exception). Alternatively specify
`domain='GF(p)'` where `p` is a prime integer.

Note that when parsing expressions Poly will treat everything
which is not a number as a generator. This way

                 gcd(x**2 - 2, x - sqrt(2))

is 1, not x - sqrt(2). Specify generators to override this behaviour.
In future `extension` keyword might be included to notify algorithms
about algebraic relations between coefficients."
2009-04-30 19:23:57+02:00;4;31c9aa43ffc7bc031493fc4ea27b74dc50c4d035;"New module for computing in polynomial algebras

This is the second complete rewrite, and hopefully the last one,
of polynomials module. The new module implements, new to SymPy,
philosophy of performing complicated computations in a multilevel
environment, where basic operations are done efficiently without
user interface overhead and UI does not mess with any algorithms.

Three levels were introduced:

 L0. Is implemented in procedural style and uses raw polynomial
     representations as arguments to functions. Most algorithms
     are implemented on this level including GCD and factorization.

     There are several sets of functions with special prefixes:

      1. gf_ --- polynomials over Galois fields

      2. dup_ --- Dense Univariate Polynomials over any domain
      3. dmp_ --- Dense Multivariate Polynomials over any domain

      4. d(u|m)p_zz_ --- DUP or DMP over integers
      5. d(u|m)p_qq_ --- DUP or DMP over rationals

      6. d(u|m)p_rr_ --- DUP or DMP over a ring
      7. d(u|m)p_ff_ --- DUP or DMP over a field

      8. sdp_ --- Sparse Distributed Polynomials over any domain

     Each type of polynomial: GFP, DUP, DMP, SDP, has a raw
     representation and function call specification associated:

      1. GFP repr: [c_n, ..., c_0]
             spec: gf_some_function(f, g, p, K)

             where p is prime >= 2, type int
                   K is any ZZ algebra

      2. DUP repr: [c_n, ..., c_0]
             spec: dup_some_function(f, g, K)

             where K is any algebra

      3. DMP repr: [[...], [...], ..., [...]]
             spec: dup_some_function(f, g, u, K)

             where u is number of nested levels - 1
                   K is any algebra

             DMP for u = 0 is DUP

      4. SDP repr: [(M_n, c_n), ..., (M_0, c_0)]
             spec: dup_some_function(f, g, u, O, K)

             where u is number of variables - 1
                   O is monomial order function
                   K is any algebra

 L1. Is implemented using OO paradigm and wraps up functionality
     provided by L0. For each type of polynomial there is a class
     implemented: GFP, DUP, DMP, SDP. There are additional classes
     for multivariate rational functions DMF and algebraic number
     polynomials ANP (a representation of algebraic numbers).

     Each class is constructed using an explicit representation and
     algebra specification. Method calls will unify arguments by
     coercing their ground domains (e.g. ZZ + QQ -> QQ), so there
     is no need to specify any extra arguments.

     Note that unification rules on this level are very simple so
     e.g. operations on a univariate polynomial as one argument and
     a multivariate polynomial as the other aren't allowed, unless
     you make any coercions explicitly.

     For efficiency, every class in L1 doesn't derive from Basic, which
     allows to use those classes as representations of composite ground
     domains e.g. ZZ[x,y,z], QQ(x,y).

 L2. User-level interface to polynomial manipulation algorithms. If
     you are a user, then you choose this level, which provides you
     convenient Poly class which wraps L1 classes as internal poly
     representations but provides user-friendly interface. There
     is also a set of public functions exported: gcd, lcm, factor
     and many others.

     Poly class allows you to convert a SymPy expression into a
     polynomial. There is no need to specify symbols, Poly class
     will parse the expression and figure out what are symbols
     and what are members of the coefficient domain. Note also
     that you can create polynomials using not only symbols but
     any expressions, this way Poly.symbols was renamed to
     Poly.gens, to emphasize this fact, so

                     Poly(sin(x)**2 + 1, sin(x))

     are valid arguments to Poly.__init__ and computing e.g.

                   gcd(sin(x)**2 - 1, sin(x) - 1)

     is also allowed.

Polynomial manipulation algorithms understand algebraic properties
of elements of a ground domain (polynomial coefficients). For this
purpose additional module was implemented to define all important
coefficient domains (the only missing is for algebraic numbers).

Basically the world is divided into to parts: types and categories
(here algebras or domains). Type is an object which caries data
and is equipped with algorithms for processing this data in some
way using some paradigm for this purpose. Different types have
different algorithms and use different paradigms. However from
mathematical point of view there are categories which have some
properties and don't care about internal behavior of a data type.

So, lets suppose we want to compute in integers ring. Then we have
a category ZZ, which is supposed to have binary operations +, -
*, functions like gcd(), lcm() etc. and some properties. On the
other side we have several data types for integers: Python (int),
SymPy (Integer) or gmpy (mpz), or maybe even something else. Each
of these has different algorithms implemented and have different
interfaces, e.g. int does not implement gcd(), which is however
implemented by Integer and mpz. On the other hand int and mpz
are fast, but Integer is very slow.

To have one source base of algorithms we specify a category for
a mathematical concept for each data type we want to have, e.g.
we have (in algebratools.py) ZZ_python, ZZ_sympy and ZZ_gmpy
which implement Ring interface which is based on Algebra
abstract class.

You can use any of ZZ_* classes as coefficient domains in new
polynomials module, by creating instances of those classes. Or
you can just

          from sympy.polys.algebratools import ZZ

to get optimal solution for your system (ZZ is an instance).

Then if a function gets as parameter K algebra ZZ, then it knows
that all coefficients given in a polynomial representation to this
function have type ZZ.dtype (e.g. int) and know that int is supposed
to provide some methods, e.g. __add__ and that ZZ wraps some other
methods, e.g. ZZ.gcd is really igcd from sympy.core.numbers.

The same is for other domains: QQ, ZZ[x,y], ZZ(x,y,z), QQ('x') ...

There is also one category above all others: EX, which is a wrapper
for SymPy expressions. If Poly can't figure out an optimal domain
or such domain in not yet implemented (e.g. algebraic numbers),
then it uses EX. EX is slow, but tries to do its best to solve
zero equivalence problem in a symbolic way (by calling simplify).

On L2 level you don't have to care about domains at all. Poly will
figure out a domain or fallback to EX. However, when implementing
algorithms that require certain algebraic properties to be met, be
specific or you loose the battle. The most important thing is
to see a difference between computations over a ring and a field,
which can cause you a lot of trouble. So, don't hack and use
the interface, e.g. don't gcd(), div(), div() but cancel() and
it will take care of all weird cases.

To specify a domain simply add `domain` keyword argument. Note
you need also to specify generators when this kwarg is given
(this will change in future) e.g.

             Poly(x**2*y + z, x, y, domain='ZZ[z]')

Domain can be specified as a string or explicit algebra. Allowed
strings are 'GF(p)' where p is prime, 'ZZ' or 'Z', 'QQ' or 'Q',
'ZZ[x,y,z]', 'QQ[x,y,z]', 'ZZ(x,y,z'), 'QQ(x,y,z)' and 'EX'. Or

           from sympy.polys.algebratools import ZZ

and ZZ[x,y,z] or even ZZ['x','y','z'] will work. Each algebra
implements __getitem__ for this, which fallbacks to poly_ring
method. Note that __call__ is used for very different purpose,
so don't get tricked, use ZZ.frac_field(x,y,z) or a convenient
string representation.

If you don't want to specify an exact domain but you know
computation has to be done in a field then pass `field=True`
to Poly or any polynomial function to force a Field to be
chosen rather than a Ring. By default if Poly sees that
coefficients fall into a Ring it will choose it, e.g.

           Poly(x**2 + 1) will have the domain ZZ

but

           Poly(x**2 + 1, field=True) will have QQ

Despite that if a function needs a field then it will silently
convert to field and continue computations. To disable this
set `auto=False`. Don't complain if you get DomainError or
ExactQuotientFailed exceptions. This automatic behaviour is
available only on L2 level. On other levels no auto-games are
played by polynomial manipulation algorithms and if there is
an inappropriate domain of computation specified, algorithm
will just fail, raising an exception.

If you want to compute in Galois fields then specify `modulus`
keyword argument. Note that only univariate polynomials are
supported and some methods might not be implemented (you will
get OperationNotSupported exception). Alternatively specify
`domain='GF(p)'` where `p` is a prime integer.

Note that when parsing expressions Poly will treat everything
which is not a number as a generator. This way

                 gcd(x**2 - 2, x - sqrt(2))

is 1, not x - sqrt(2). Specify generators to override this behaviour.
In future `extension` keyword might be included to notify algorithms
about algebraic relations between coefficients."
2009-04-30 19:23:57+02:00;4;31c9aa43ffc7bc031493fc4ea27b74dc50c4d035;"New module for computing in polynomial algebras

This is the second complete rewrite, and hopefully the last one,
of polynomials module. The new module implements, new to SymPy,
philosophy of performing complicated computations in a multilevel
environment, where basic operations are done efficiently without
user interface overhead and UI does not mess with any algorithms.

Three levels were introduced:

 L0. Is implemented in procedural style and uses raw polynomial
     representations as arguments to functions. Most algorithms
     are implemented on this level including GCD and factorization.

     There are several sets of functions with special prefixes:

      1. gf_ --- polynomials over Galois fields

      2. dup_ --- Dense Univariate Polynomials over any domain
      3. dmp_ --- Dense Multivariate Polynomials over any domain

      4. d(u|m)p_zz_ --- DUP or DMP over integers
      5. d(u|m)p_qq_ --- DUP or DMP over rationals

      6. d(u|m)p_rr_ --- DUP or DMP over a ring
      7. d(u|m)p_ff_ --- DUP or DMP over a field

      8. sdp_ --- Sparse Distributed Polynomials over any domain

     Each type of polynomial: GFP, DUP, DMP, SDP, has a raw
     representation and function call specification associated:

      1. GFP repr: [c_n, ..., c_0]
             spec: gf_some_function(f, g, p, K)

             where p is prime >= 2, type int
                   K is any ZZ algebra

      2. DUP repr: [c_n, ..., c_0]
             spec: dup_some_function(f, g, K)

             where K is any algebra

      3. DMP repr: [[...], [...], ..., [...]]
             spec: dup_some_function(f, g, u, K)

             where u is number of nested levels - 1
                   K is any algebra

             DMP for u = 0 is DUP

      4. SDP repr: [(M_n, c_n), ..., (M_0, c_0)]
             spec: dup_some_function(f, g, u, O, K)

             where u is number of variables - 1
                   O is monomial order function
                   K is any algebra

 L1. Is implemented using OO paradigm and wraps up functionality
     provided by L0. For each type of polynomial there is a class
     implemented: GFP, DUP, DMP, SDP. There are additional classes
     for multivariate rational functions DMF and algebraic number
     polynomials ANP (a representation of algebraic numbers).

     Each class is constructed using an explicit representation and
     algebra specification. Method calls will unify arguments by
     coercing their ground domains (e.g. ZZ + QQ -> QQ), so there
     is no need to specify any extra arguments.

     Note that unification rules on this level are very simple so
     e.g. operations on a univariate polynomial as one argument and
     a multivariate polynomial as the other aren't allowed, unless
     you make any coercions explicitly.

     For efficiency, every class in L1 doesn't derive from Basic, which
     allows to use those classes as representations of composite ground
     domains e.g. ZZ[x,y,z], QQ(x,y).

 L2. User-level interface to polynomial manipulation algorithms. If
     you are a user, then you choose this level, which provides you
     convenient Poly class which wraps L1 classes as internal poly
     representations but provides user-friendly interface. There
     is also a set of public functions exported: gcd, lcm, factor
     and many others.

     Poly class allows you to convert a SymPy expression into a
     polynomial. There is no need to specify symbols, Poly class
     will parse the expression and figure out what are symbols
     and what are members of the coefficient domain. Note also
     that you can create polynomials using not only symbols but
     any expressions, this way Poly.symbols was renamed to
     Poly.gens, to emphasize this fact, so

                     Poly(sin(x)**2 + 1, sin(x))

     are valid arguments to Poly.__init__ and computing e.g.

                   gcd(sin(x)**2 - 1, sin(x) - 1)

     is also allowed.

Polynomial manipulation algorithms understand algebraic properties
of elements of a ground domain (polynomial coefficients). For this
purpose additional module was implemented to define all important
coefficient domains (the only missing is for algebraic numbers).

Basically the world is divided into to parts: types and categories
(here algebras or domains). Type is an object which caries data
and is equipped with algorithms for processing this data in some
way using some paradigm for this purpose. Different types have
different algorithms and use different paradigms. However from
mathematical point of view there are categories which have some
properties and don't care about internal behavior of a data type.

So, lets suppose we want to compute in integers ring. Then we have
a category ZZ, which is supposed to have binary operations +, -
*, functions like gcd(), lcm() etc. and some properties. On the
other side we have several data types for integers: Python (int),
SymPy (Integer) or gmpy (mpz), or maybe even something else. Each
of these has different algorithms implemented and have different
interfaces, e.g. int does not implement gcd(), which is however
implemented by Integer and mpz. On the other hand int and mpz
are fast, but Integer is very slow.

To have one source base of algorithms we specify a category for
a mathematical concept for each data type we want to have, e.g.
we have (in algebratools.py) ZZ_python, ZZ_sympy and ZZ_gmpy
which implement Ring interface which is based on Algebra
abstract class.

You can use any of ZZ_* classes as coefficient domains in new
polynomials module, by creating instances of those classes. Or
you can just

          from sympy.polys.algebratools import ZZ

to get optimal solution for your system (ZZ is an instance).

Then if a function gets as parameter K algebra ZZ, then it knows
that all coefficients given in a polynomial representation to this
function have type ZZ.dtype (e.g. int) and know that int is supposed
to provide some methods, e.g. __add__ and that ZZ wraps some other
methods, e.g. ZZ.gcd is really igcd from sympy.core.numbers.

The same is for other domains: QQ, ZZ[x,y], ZZ(x,y,z), QQ('x') ...

There is also one category above all others: EX, which is a wrapper
for SymPy expressions. If Poly can't figure out an optimal domain
or such domain in not yet implemented (e.g. algebraic numbers),
then it uses EX. EX is slow, but tries to do its best to solve
zero equivalence problem in a symbolic way (by calling simplify).

On L2 level you don't have to care about domains at all. Poly will
figure out a domain or fallback to EX. However, when implementing
algorithms that require certain algebraic properties to be met, be
specific or you loose the battle. The most important thing is
to see a difference between computations over a ring and a field,
which can cause you a lot of trouble. So, don't hack and use
the interface, e.g. don't gcd(), div(), div() but cancel() and
it will take care of all weird cases.

To specify a domain simply add `domain` keyword argument. Note
you need also to specify generators when this kwarg is given
(this will change in future) e.g.

             Poly(x**2*y + z, x, y, domain='ZZ[z]')

Domain can be specified as a string or explicit algebra. Allowed
strings are 'GF(p)' where p is prime, 'ZZ' or 'Z', 'QQ' or 'Q',
'ZZ[x,y,z]', 'QQ[x,y,z]', 'ZZ(x,y,z'), 'QQ(x,y,z)' and 'EX'. Or

           from sympy.polys.algebratools import ZZ

and ZZ[x,y,z] or even ZZ['x','y','z'] will work. Each algebra
implements __getitem__ for this, which fallbacks to poly_ring
method. Note that __call__ is used for very different purpose,
so don't get tricked, use ZZ.frac_field(x,y,z) or a convenient
string representation.

If you don't want to specify an exact domain but you know
computation has to be done in a field then pass `field=True`
to Poly or any polynomial function to force a Field to be
chosen rather than a Ring. By default if Poly sees that
coefficients fall into a Ring it will choose it, e.g.

           Poly(x**2 + 1) will have the domain ZZ

but

           Poly(x**2 + 1, field=True) will have QQ

Despite that if a function needs a field then it will silently
convert to field and continue computations. To disable this
set `auto=False`. Don't complain if you get DomainError or
ExactQuotientFailed exceptions. This automatic behaviour is
available only on L2 level. On other levels no auto-games are
played by polynomial manipulation algorithms and if there is
an inappropriate domain of computation specified, algorithm
will just fail, raising an exception.

If you want to compute in Galois fields then specify `modulus`
keyword argument. Note that only univariate polynomials are
supported and some methods might not be implemented (you will
get OperationNotSupported exception). Alternatively specify
`domain='GF(p)'` where `p` is a prime integer.

Note that when parsing expressions Poly will treat everything
which is not a number as a generator. This way

                 gcd(x**2 - 2, x - sqrt(2))

is 1, not x - sqrt(2). Specify generators to override this behaviour.
In future `extension` keyword might be included to notify algorithms
about algebraic relations between coefficients."
2009-04-30 19:23:57+02:00;2;31c9aa43ffc7bc031493fc4ea27b74dc50c4d035;"New module for computing in polynomial algebras

This is the second complete rewrite, and hopefully the last one,
of polynomials module. The new module implements, new to SymPy,
philosophy of performing complicated computations in a multilevel
environment, where basic operations are done efficiently without
user interface overhead and UI does not mess with any algorithms.

Three levels were introduced:

 L0. Is implemented in procedural style and uses raw polynomial
     representations as arguments to functions. Most algorithms
     are implemented on this level including GCD and factorization.

     There are several sets of functions with special prefixes:

      1. gf_ --- polynomials over Galois fields

      2. dup_ --- Dense Univariate Polynomials over any domain
      3. dmp_ --- Dense Multivariate Polynomials over any domain

      4. d(u|m)p_zz_ --- DUP or DMP over integers
      5. d(u|m)p_qq_ --- DUP or DMP over rationals

      6. d(u|m)p_rr_ --- DUP or DMP over a ring
      7. d(u|m)p_ff_ --- DUP or DMP over a field

      8. sdp_ --- Sparse Distributed Polynomials over any domain

     Each type of polynomial: GFP, DUP, DMP, SDP, has a raw
     representation and function call specification associated:

      1. GFP repr: [c_n, ..., c_0]
             spec: gf_some_function(f, g, p, K)

             where p is prime >= 2, type int
                   K is any ZZ algebra

      2. DUP repr: [c_n, ..., c_0]
             spec: dup_some_function(f, g, K)

             where K is any algebra

      3. DMP repr: [[...], [...], ..., [...]]
             spec: dup_some_function(f, g, u, K)

             where u is number of nested levels - 1
                   K is any algebra

             DMP for u = 0 is DUP

      4. SDP repr: [(M_n, c_n), ..., (M_0, c_0)]
             spec: dup_some_function(f, g, u, O, K)

             where u is number of variables - 1
                   O is monomial order function
                   K is any algebra

 L1. Is implemented using OO paradigm and wraps up functionality
     provided by L0. For each type of polynomial there is a class
     implemented: GFP, DUP, DMP, SDP. There are additional classes
     for multivariate rational functions DMF and algebraic number
     polynomials ANP (a representation of algebraic numbers).

     Each class is constructed using an explicit representation and
     algebra specification. Method calls will unify arguments by
     coercing their ground domains (e.g. ZZ + QQ -> QQ), so there
     is no need to specify any extra arguments.

     Note that unification rules on this level are very simple so
     e.g. operations on a univariate polynomial as one argument and
     a multivariate polynomial as the other aren't allowed, unless
     you make any coercions explicitly.

     For efficiency, every class in L1 doesn't derive from Basic, which
     allows to use those classes as representations of composite ground
     domains e.g. ZZ[x,y,z], QQ(x,y).

 L2. User-level interface to polynomial manipulation algorithms. If
     you are a user, then you choose this level, which provides you
     convenient Poly class which wraps L1 classes as internal poly
     representations but provides user-friendly interface. There
     is also a set of public functions exported: gcd, lcm, factor
     and many others.

     Poly class allows you to convert a SymPy expression into a
     polynomial. There is no need to specify symbols, Poly class
     will parse the expression and figure out what are symbols
     and what are members of the coefficient domain. Note also
     that you can create polynomials using not only symbols but
     any expressions, this way Poly.symbols was renamed to
     Poly.gens, to emphasize this fact, so

                     Poly(sin(x)**2 + 1, sin(x))

     are valid arguments to Poly.__init__ and computing e.g.

                   gcd(sin(x)**2 - 1, sin(x) - 1)

     is also allowed.

Polynomial manipulation algorithms understand algebraic properties
of elements of a ground domain (polynomial coefficients). For this
purpose additional module was implemented to define all important
coefficient domains (the only missing is for algebraic numbers).

Basically the world is divided into to parts: types and categories
(here algebras or domains). Type is an object which caries data
and is equipped with algorithms for processing this data in some
way using some paradigm for this purpose. Different types have
different algorithms and use different paradigms. However from
mathematical point of view there are categories which have some
properties and don't care about internal behavior of a data type.

So, lets suppose we want to compute in integers ring. Then we have
a category ZZ, which is supposed to have binary operations +, -
*, functions like gcd(), lcm() etc. and some properties. On the
other side we have several data types for integers: Python (int),
SymPy (Integer) or gmpy (mpz), or maybe even something else. Each
of these has different algorithms implemented and have different
interfaces, e.g. int does not implement gcd(), which is however
implemented by Integer and mpz. On the other hand int and mpz
are fast, but Integer is very slow.

To have one source base of algorithms we specify a category for
a mathematical concept for each data type we want to have, e.g.
we have (in algebratools.py) ZZ_python, ZZ_sympy and ZZ_gmpy
which implement Ring interface which is based on Algebra
abstract class.

You can use any of ZZ_* classes as coefficient domains in new
polynomials module, by creating instances of those classes. Or
you can just

          from sympy.polys.algebratools import ZZ

to get optimal solution for your system (ZZ is an instance).

Then if a function gets as parameter K algebra ZZ, then it knows
that all coefficients given in a polynomial representation to this
function have type ZZ.dtype (e.g. int) and know that int is supposed
to provide some methods, e.g. __add__ and that ZZ wraps some other
methods, e.g. ZZ.gcd is really igcd from sympy.core.numbers.

The same is for other domains: QQ, ZZ[x,y], ZZ(x,y,z), QQ('x') ...

There is also one category above all others: EX, which is a wrapper
for SymPy expressions. If Poly can't figure out an optimal domain
or such domain in not yet implemented (e.g. algebraic numbers),
then it uses EX. EX is slow, but tries to do its best to solve
zero equivalence problem in a symbolic way (by calling simplify).

On L2 level you don't have to care about domains at all. Poly will
figure out a domain or fallback to EX. However, when implementing
algorithms that require certain algebraic properties to be met, be
specific or you loose the battle. The most important thing is
to see a difference between computations over a ring and a field,
which can cause you a lot of trouble. So, don't hack and use
the interface, e.g. don't gcd(), div(), div() but cancel() and
it will take care of all weird cases.

To specify a domain simply add `domain` keyword argument. Note
you need also to specify generators when this kwarg is given
(this will change in future) e.g.

             Poly(x**2*y + z, x, y, domain='ZZ[z]')

Domain can be specified as a string or explicit algebra. Allowed
strings are 'GF(p)' where p is prime, 'ZZ' or 'Z', 'QQ' or 'Q',
'ZZ[x,y,z]', 'QQ[x,y,z]', 'ZZ(x,y,z'), 'QQ(x,y,z)' and 'EX'. Or

           from sympy.polys.algebratools import ZZ

and ZZ[x,y,z] or even ZZ['x','y','z'] will work. Each algebra
implements __getitem__ for this, which fallbacks to poly_ring
method. Note that __call__ is used for very different purpose,
so don't get tricked, use ZZ.frac_field(x,y,z) or a convenient
string representation.

If you don't want to specify an exact domain but you know
computation has to be done in a field then pass `field=True`
to Poly or any polynomial function to force a Field to be
chosen rather than a Ring. By default if Poly sees that
coefficients fall into a Ring it will choose it, e.g.

           Poly(x**2 + 1) will have the domain ZZ

but

           Poly(x**2 + 1, field=True) will have QQ

Despite that if a function needs a field then it will silently
convert to field and continue computations. To disable this
set `auto=False`. Don't complain if you get DomainError or
ExactQuotientFailed exceptions. This automatic behaviour is
available only on L2 level. On other levels no auto-games are
played by polynomial manipulation algorithms and if there is
an inappropriate domain of computation specified, algorithm
will just fail, raising an exception.

If you want to compute in Galois fields then specify `modulus`
keyword argument. Note that only univariate polynomials are
supported and some methods might not be implemented (you will
get OperationNotSupported exception). Alternatively specify
`domain='GF(p)'` where `p` is a prime integer.

Note that when parsing expressions Poly will treat everything
which is not a number as a generator. This way

                 gcd(x**2 - 2, x - sqrt(2))

is 1, not x - sqrt(2). Specify generators to override this behaviour.
In future `extension` keyword might be included to notify algorithms
about algebraic relations between coefficients."
2009-08-18 11:59:46+02:00;2;22c4061074ae67d59dcabfeb491b2a2a5fa947bf;"Improved ordering of variables in Poly and functions

In mathematics we are acustomed to specify orderings of variables
different than lexicographic, like x < y < a < b, e.g. to ephasize
that a polynomial is in x and y variables and a, b are symbols of
the ground domain.

Now we use similar concept when creating a Poly:

In [1]: var('p,q,r,s,t,u,v,w')
Out[1]: (p, q, r, s, t, u, v, w)

In [2]: Poly((x-p)*(x-q))
Out[2]: Poly(x**2 - x*p - x*q + p*q, x, p, q, domain='ZZ')

Above 'x' is the main variable, which is important when
computing division or resultant of polynomials. You can
also specify that one of variables is the main one, by
using `wrt` (with respect to) keyword argument:

In [3]: Poly((x-p)*(x-q), wrt='p')
Out[3]: Poly(-p*x + p*q + x**2 - x*q, p, x, q, domain='ZZ')

In [4]: Poly((x-p)*(x-q), wrt='q')
Out[4]: Poly(-q*x + q*p + x**2 - x*p, q, x, p, domain='ZZ')

If `wrt` is specified, Poly will override all rules it has
for sorting variables and let this chosen variable to be
the main one. Note this is very different from specifying
explicit generators, because it does not touch domain
analysis algorithms (generators and domain are still
figured out using automatic tools).

If this is not enough, one can specify explicit order of
variables, e.g.:

In [6]: Poly((x-p)*(x-q), sort='q < p < x')
Out[6]: Poly(q*p - q*x - p*x + x**2, q, p, x, domain='ZZ')

or even combine `wrt` and `sort` keyword arguments:

In [7]: Poly((x-p)*(x-q), wrt='q', sort='p < x')
Out[7]: Poly(q*p - q*x - p*x + x**2, q, p, x, domain='ZZ')

Poly is now also much more intelligent when unifying polynomials:

In [12]: f = (x-p)*(x-q)

In [13]: g = (x-r)*(x-s)*(x-t)

In [14]: factor(resultant(f, g))
Out[14]: (p - r)⋅(q - r)⋅(p - s)⋅(q - s)⋅(p - t)⋅(q - t)

resultant() of f and g was computed with respect to `x` variable,
which is intuitive, but failed in the previous implementation.

And more examples:

In [15]: factor(resultant(f, g, wrt='x'))
Out[15]: (p - r)⋅(q - r)⋅(p - s)⋅(q - s)⋅(p - t)⋅(q - t)

In [16]: factor(resultant(f, g, wrt='p'))
Out[16]: (x - r)⋅(x - s)⋅(x - t)

In [17]: factor(resultant(f, g, wrt='q'))
Out[17]: (x - r)⋅(x - s)⋅(x - t)

In [18]: factor(resultant(f, g, wrt='r'))
Out[18]: (x - p)⋅(x - q)

In [19]: factor(resultant(f, g, wrt='s'))
Out[19]: (x - p)⋅(x - q)

In [20]: factor(resultant(f, g, wrt='t'))
Out[20]: (x - p)⋅(x - q)"
2009-12-08 23:38:48+01:00;1;3725fb0fe4e15553e7715e2205fcd6523dad0ae6;Refactored polytools.py (part II), new tests written
2009-12-10 02:37:00+01:00;1;9b9c161b047ebe165c3d7e49a10a05752f7e994f;"Added support for algebraic number fields to Poly

Now you can specify an algebraic extension of rationals,
in which computations will be performed, e.g.:

In [1]: f = Poly(2*I*x**2 + I/2, x, extension=I)

In [2]: f
Out[2]: Poly(2*I*x**2 + I/2, x, domain='QQ<I>')

or alternatively (for Gaussian integers):

In [3]: f = Poly(2*I*x**2 + I/2, x, gaussian=True)

In [4]: f
Out[4]: Poly(2*I*x**2 + I/2, x, domain='QQ<I>')

At this point only single extensions are supported."
2010-02-01 13:00:34+01:00;1;b370e044cdee4c18f825cbce1aa7da0c5fbd1fdd;Use sorted(x, key=...) syntax in _sort_gens()
2010-02-03 16:37:03+01:00;1;b097b01934963d7b8b2848be91c7dcb255a9f85a;"Implemented field isomorphism algorithm via PSLQ

PSLQ allows us to solve field isomorphism problem very
efficiently (see examples), incomparable with the old
approach (in which we use algebraic factorization).

The new approach is always conclusive if PSLQ is able to
find integer relation. In the other case field isomorphism
may exist or not, however it's very rare when PSLQ fails
and the isomorphism exists. Pedantic users may run field
isomorphism function with prove=True to run algebraic
factorization if PSLQ fails.

Currently only real algebraic numbers are supported due
to limitations in the implementation of the PSLQ algorithm.

Examples:

In [1]: a = AlgebraicNumber(3*sqrt(2)+2*sqrt(3)+1)

In [2]: b = AlgebraicNumber(sqrt(2)+sqrt(3))

In [3]: field_isomorphism(a, b)
Out[3]: [1/2, 0, -5/2, 1]

Lets time PSLQ variant:

In [4]: %timeit u = field_isomorphism(a, b)
100 loops, best of 3: 14.1 ms per loop

and now lets use factorization:

In [5]: %timeit u = field_isomorphism(a, b, fast=False)
1 loops, best of 3: 494 ms per loop

The difference in computing time is ... visible."
2010-02-04 13:20:15+01:00;1;40db0d4061779e8d068a61a437bce1c439aba156;Improved efficiency of AlgebraicField.from_sympy()
2010-06-07 11:15:47-06:00;1;372e6aba2a7b3b31e7809cc2a250796bb35c0b97;"Preliminary update of mpmath to mpmath-0.15

So far, only the imports and the carriage returns have been fixed."
2010-06-07 11:15:47-06:00;1;372e6aba2a7b3b31e7809cc2a250796bb35c0b97;"Preliminary update of mpmath to mpmath-0.15

So far, only the imports and the carriage returns have been fixed."
2010-02-10 02:28:25+00:00;1;6bf6387e8501b3c3b187849c14292cdd58bd31cc;"Eliminate code duplication between sympify and _sympify.

sympify calls _sympify instead of duplicating its function.
* Behaviour change: _sympify now raises on booleans and None (see issue 1819)
* Fix LatticeOp."
2010-02-20 13:13:59-07:00;1;d12a2aa656614be09398f515f3b087a26e302400;"Write ode_sol_simplicity() to replace compare_ode_sol()

This is a key function replacement, which means it will be faster and
Python 3 compatible.

An analysis of the code showed that if the ""all"" hint is passed to
dsolve() for an ODE with a complex solution (i.e., one that is not
solvable in f(x), such as an ODE that matches the
1st_homogeneous_coefficients hints), most of the time was being spent in
compare_ode_sol() trying to solve the solutions (a solution that is
unsolved for f(x) is considered more simple by this heuristic if it can
be solved).

ode_sol_simplicity() behaves identically to compare_ode_sol() when used as
a key function to min instead of a cmp function to sorted, but it only
needs to run once per solution, so it is much faster.  I also added a
trysolving key to disable attempting to solve the solution if you
already know it can't be done, (i.e., dsolve already tries unless it has
the simplify=False flag).  This makes finding the best solution given a
list of solutions that you already know are solved if they can be almost
instantaneous.

I replaced the use of compare_ode_sol in the code and all tests pass.

Also, replace map with a list comprehension in test_constantsimp.py."
2010-06-14 18:13:09-06:00;1;dc2319c323e692cb5e370b3b4e0ee1c00fe05edc;Merge branch 'master' into mpmath-0.15
2010-06-14 18:13:09-06:00;1;dc2319c323e692cb5e370b3b4e0ee1c00fe05edc;Merge branch 'master' into mpmath-0.15
2010-06-17 11:19:45-04:00;1;edcd45ca594762aff9347d6618bb3dccc9127086;Merge git://git.sympy.org/sympy
2010-06-17 11:19:45-04:00;1;edcd45ca594762aff9347d6618bb3dccc9127086;Merge git://git.sympy.org/sympy
2010-06-17 11:19:45-04:00;1;edcd45ca594762aff9347d6618bb3dccc9127086;Merge git://git.sympy.org/sympy
2010-06-17 11:19:45-04:00;1;edcd45ca594762aff9347d6618bb3dccc9127086;Merge git://git.sympy.org/sympy
2010-03-18 22:07:31+01:00;4;d26ed996a44b3933371a9e73b6b1df84cfd18696;"Implemented configuration framework for polys module

Previously there were two methods used for configuring what
algorithms should be used and how they will perform:

1. Passing keyword arguments around.
2. Setting up global variables.

Now there is only one configuration approach, via polyconfig.

Consider the following example:

In [1]: from sympy.polys.polyconfig import query, setup

In [2]: query(""USE_CYCLOTOMIC_FACTOR"")
Out[2]: True

In [3]: %time u = factor(x**100 - 1)
CPU times: user 0.04 s, sys: 0.00 s, total: 0.04 s
Wall time: 0.05 s

In [5]: setup(""USE_CYCLOTOMIC_FACTOR"", False)

In [6]: %time u = factor(x**100 - 1)
CPU times: user 2.66 s, sys: 0.01 s, total: 2.66 s
Wall time: 2.75 s

In [8]: setup(""USE_CYCLOTOMIC_FACTOR"")

In [9]: %time u = factor(x**100 - 1)
CPU times: user 0.05 s, sys: 0.00 s, total: 0.05 s
Wall time: 0.05 s

This way several low-level algorithms can be configured and, for
example, benchmarking or algorithm parameters optimization was
made a lot easier."
2010-04-25 21:07:59+02:00;1;5410bf0441fbf709af64042f2a29cea62e4a822c;"Added support for passing multiple gens via 'wrt' keyword

The 'wrt' keyword now supports multiple generators given
by a list or tuple, or comma separated values in a string.

Example:

In [1]: var('x1,x2,i1,i2,i3')
Out[1]: (x₁, x₂, i₁, i₂, i₃)

In [2]: f1 = x1**2 + x2**2

In [3]: f2 = x1**2*x2**2

In [4]: f3 = x1**3*x2 - x1*x2**3

In [5]: G = groebner([f1 - i1, f2 - i2, f3 - i3], wrt='x1,x2')

In [6]: reduced(x1**7*x2 - x1*x2**7, G, wrt=[x1, x2])[1]
Out[6]:
              2
-i₂⋅i₃ + i₃⋅i₁

In [7]: _.subs({i1: f1, i2: f2, i3: f3}).expand()
Out[7]:
   7        7
x₂⋅x₁  - x₁⋅x₂

(based on ""Gröbner Bases: A Short Introduction for Systems
Theorists"", B. Buchberger, Springer, 2001)."
2010-07-15 14:04:21+02:00;1;ad13be5c496089c4815c5416f3fc7f2da6b8bbdb;"Added simple subs() function to Poly class (#1974)

In [1]: Poly(x*y).subs(x, z)
Out[1]: Poly(z*y, z, y, domain='ZZ')

In [2]: Poly(x*y).subs(x, 1)
Out[2]: Poly(y, y, domain='ZZ')

In [3]: Poly(x*y, x).subs(y, x)
Out[3]:
 2
x

In [4]: Poly(x*y, x).subs(x, y)
Out[4]:
 2
y"
2010-07-15 14:04:21+02:00;1;3423a6b01501f84d667f286bae70eaf05740eaff;"Added simple subs() function to Poly class (#1974)

In [1]: Poly(x*y).subs(x, z)
Out[1]: Poly(z*y, z, y, domain='ZZ')

In [2]: Poly(x*y).subs(x, 1)
Out[2]: Poly(y, y, domain='ZZ')

In [3]: Poly(x*y, x).subs(y, x)
Out[3]:
 2
x

In [4]: Poly(x*y, x).subs(x, y)
Out[4]:
 2
y"
2010-07-16 03:55:21+02:00;1;89221bdac1e5705fa5b78df3644f5319dd929898;Split algebratools.py into polys/domains
2010-07-16 03:55:21+02:00;1;89221bdac1e5705fa5b78df3644f5319dd929898;Split algebratools.py into polys/domains
2010-07-22 18:21:50-06:00;1;32e9dc26652e6b40d5ea8b06b3efb586b1d66727;"Merge remote branch 'mattpap/polys10' into polydocs

Conflicts:
	sympy/polys/polytools.py"
2010-07-22 18:59:02-06:00;1;36239b66b3abf424a2da897f9c5712e03ce40e86;"Merge branch 'polydocs' into integration3

Conflicts:
	sympy/polys/polytools.py
	sympy/printing/tests/test_repr.py"
2010-07-19 19:48:37-07:00;1;72d4164b3399bcf2289432e042df8b4006ff3f92;"NF - added __imp__ and implemented_function to lambdify

Signed-off-by: Ondrej Certik <ondrej@certik.cz>"
2010-07-24 13:04:35-07:00;10;2c502f5557657793ba2a3ce173fc13b334f293df;Writing tests and fixing priority stuff.
2010-07-24 14:48:24-07:00;10;b086c7acdd08ffc99ff5aae50393654871c31262;Fixing bugs in expr.py with priorities.
2010-07-25 12:33:42-07:00;1;aede69108b14a8520a638c04aed90787ad9c9692;Final version of binary operator priorities.
2010-07-27 13:09:49-07:00;1;34c4016b7ccb7fa43af17925415946b86c77c6eb;Merge branch 'master' of git://github.com/sympy/sympy into hilbert2
2010-08-03 17:14:26-06:00;1;09eb77bb24529cfe3fd4d08de0800f5eaa467fd3;"Merge branch 'master' into integration3

Conflicts:
	sympy/functions/special/polynomials.py
	sympy/printing/tests/test_fcode.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py

The fix in poly_heurisch.py was for an already existing doctest failure."
2010-08-04 13:31:03+02:00;4;7cf570ca8d1a0e6d0392da1910fe6dc2b5128ced;Split densetools.py (added euclidtools.py and sqfreetools.py)
2010-08-05 11:54:53-04:00;1;316b546532f82ee5fcc518e8590b27f84793cb01;Merge branch 'master' of git://github.com/sympy/sympy
2010-08-16 13:33:15-06:00;1;9b252e90bd4454f6bd2e27ed3e6e4b0d99a719e0;"Merge remote branch 'mattpap/polys11' into integration3

This was a serious merge, and it's quite possible that something was
done wrong.  But all tests pass that passed before in both branches
(i.e., there are test failures, but they either come from the ""HACK:
Temporarily disable algebraic substitution in exp for risch_integrate()""
commit, or else they are doctest failures in non-gmpy/Python2.7 from
polys11).

See issue 2010 for more information on why this merge was necessary.

Conflicts:
	sympy/integrals/integrals.py
	sympy/polys/algebratools.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densetools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyoptions.py
	sympy/polys/polytools.py
	sympy/polys/rootoftools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_polytools.py
	sympy/utilities/__init__.py
	sympy/utilities/runtests.py
	sympy/utilities/tests/test_iterables.py"
2010-08-16 13:33:15-06:00;1;9b252e90bd4454f6bd2e27ed3e6e4b0d99a719e0;"Merge remote branch 'mattpap/polys11' into integration3

This was a serious merge, and it's quite possible that something was
done wrong.  But all tests pass that passed before in both branches
(i.e., there are test failures, but they either come from the ""HACK:
Temporarily disable algebraic substitution in exp for risch_integrate()""
commit, or else they are doctest failures in non-gmpy/Python2.7 from
polys11).

See issue 2010 for more information on why this merge was necessary.

Conflicts:
	sympy/integrals/integrals.py
	sympy/polys/algebratools.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densetools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyoptions.py
	sympy/polys/polytools.py
	sympy/polys/rootoftools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_polytools.py
	sympy/utilities/__init__.py
	sympy/utilities/runtests.py
	sympy/utilities/tests/test_iterables.py"
2010-08-16 13:33:15-06:00;4;9b252e90bd4454f6bd2e27ed3e6e4b0d99a719e0;"Merge remote branch 'mattpap/polys11' into integration3

This was a serious merge, and it's quite possible that something was
done wrong.  But all tests pass that passed before in both branches
(i.e., there are test failures, but they either come from the ""HACK:
Temporarily disable algebraic substitution in exp for risch_integrate()""
commit, or else they are doctest failures in non-gmpy/Python2.7 from
polys11).

See issue 2010 for more information on why this merge was necessary.

Conflicts:
	sympy/integrals/integrals.py
	sympy/polys/algebratools.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densetools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyoptions.py
	sympy/polys/polytools.py
	sympy/polys/rootoftools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_polytools.py
	sympy/utilities/__init__.py
	sympy/utilities/runtests.py
	sympy/utilities/tests/test_iterables.py"
2010-08-16 13:33:15-06:00;1;9b252e90bd4454f6bd2e27ed3e6e4b0d99a719e0;"Merge remote branch 'mattpap/polys11' into integration3

This was a serious merge, and it's quite possible that something was
done wrong.  But all tests pass that passed before in both branches
(i.e., there are test failures, but they either come from the ""HACK:
Temporarily disable algebraic substitution in exp for risch_integrate()""
commit, or else they are doctest failures in non-gmpy/Python2.7 from
polys11).

See issue 2010 for more information on why this merge was necessary.

Conflicts:
	sympy/integrals/integrals.py
	sympy/polys/algebratools.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densetools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyoptions.py
	sympy/polys/polytools.py
	sympy/polys/rootoftools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_polytools.py
	sympy/utilities/__init__.py
	sympy/utilities/runtests.py
	sympy/utilities/tests/test_iterables.py"
2010-08-16 14:25:43-06:00;2;27604469ec269f3b0f13a0f78d0b6cbd18d8f95c;"Add cancel_primitive() and primitive case in bound_degree() in Risch Algorithm

Also includes some other bug fixes.  This needs more tests, but so far,
this is a great improvement, and risch_integrate() is now able to do
many more integrals that previously raised NotImplementedError.  For
example:

In [1]: risch_integrate(diff(exp(2*x**2)*log(x)*log(x + 1), x), x)
Out[1]:
    2
 2⋅x
ℯ    ⋅log(x)⋅log(1 + x)

(by the way, it fails in the old integrate()).

More importantly, this is the last official commit for the 2010 Google
Summer of Code coding period.  I want to take this opportunity to thank
Google for having such a wonderful program, the Python Software
Foundation for accepting my project this year, and the SymPy development
team for their support, especially Chris Smith for his advice and my
mentor Mateusz Paprocki, because this project would have been impossible
without his excellent Polynomials module.

Note that even though this is the end of the official coding period for
GSoC, my project is far from over, and I plan on continuing to work on
it until it is completely implemented and merged, and I also plan on
doing more work on symbolic integration in SymPy beyond even that."
2010-08-03 15:43:08+02:00;1;4b9ad27ff80acc03c8c68927b50f8f3195ab618f;"ccode: Update to use new get_indices() + sort loop variables for speed

Also updated tests for non-commuting Indexed objects"
2010-08-07 23:39:21+02:00;1;b7daf28a02a927f987678ae5b37ed347e284ac67;"Refactored ccode by introducing base class CodePrinter

Methods related to analyzation of array expressions have been moved up
and adapted.  All tests pass."
2010-10-05 22:26:00-07:00;4;80918836c2f1c39f19c530836485f1487e4d53a8;"Lots of work on quantum.py.

* name -> label, which is a sympy.core.containers.Tuple.
* Redesign of the State printing system.
* Cleanup of code, imports, etc. in quantum.py.
* Renamed HilbertSpaceException->HilbertSpaceError.
* Inner and OuterProducts are auto created.
* Changed Inner and OuterProducts to only work on raw Bras and
  Kets, not also things that act like these.
* Other minor things."
2010-10-12 14:39:33-07:00;2;1d57a86a4774371cc1a8b9f62a2e798aa78134fd;Massive work on QMul, QAdd, QPow and InnerProduct.
2010-12-16 17:40:30-07:00;2;7aa5c771c79ccb37f9fe2b4e6f8835aadfaff09e;"Rename NonElementaryIntegral to NonElementaryIntegralException

This is because I will eventually create a subclass of Integral for
nonelementary integrals, and I plan on calling that
NonElementaryIntegral.

Note that I am calling this ""Exception,"" not ""Error"" as exception
classes are often called, because when this exception is raised, it does
not signify an error, but rather it is simply a mechebism to jump out of
whatever subalgorithm it is in whenever it determines somehow that the
underlying integral is not elementary (think of it as a Pythonic goto
statement that isn't evil)."
2011-01-04 15:37:01-07:00;3;5f4a2cf0a634f41cd776776894195010d2b1955c;"Update mpmath in sympy to version 0.16

The only change from the original mpmath sources aside from the usual
conversions was to change an itertools.product(rows, columns) in
mpmath/matrices/matrices.py to ((a, b) for a in rows for b in columns).
This is because Python 2.5 and Python 2.4 do not have itertools.product.
According to the docstring of itertools.product, these are equivalent.

This does not yet update the mpmath docs."
2011-01-04 15:37:01-07:00;7;5f4a2cf0a634f41cd776776894195010d2b1955c;"Update mpmath in sympy to version 0.16

The only change from the original mpmath sources aside from the usual
conversions was to change an itertools.product(rows, columns) in
mpmath/matrices/matrices.py to ((a, b) for a in rows for b in columns).
This is because Python 2.5 and Python 2.4 do not have itertools.product.
According to the docstring of itertools.product, these are equivalent.

This does not yet update the mpmath docs."
2011-01-04 15:37:01-07:00;1;5f4a2cf0a634f41cd776776894195010d2b1955c;"Update mpmath in sympy to version 0.16

The only change from the original mpmath sources aside from the usual
conversions was to change an itertools.product(rows, columns) in
mpmath/matrices/matrices.py to ((a, b) for a in rows for b in columns).
This is because Python 2.5 and Python 2.4 do not have itertools.product.
According to the docstring of itertools.product, these are equivalent.

This does not yet update the mpmath docs."
2011-01-04 15:37:01-07:00;3;5f4a2cf0a634f41cd776776894195010d2b1955c;"Update mpmath in sympy to version 0.16

The only change from the original mpmath sources aside from the usual
conversions was to change an itertools.product(rows, columns) in
mpmath/matrices/matrices.py to ((a, b) for a in rows for b in columns).
This is because Python 2.5 and Python 2.4 do not have itertools.product.
According to the docstring of itertools.product, these are equivalent.

This does not yet update the mpmath docs."
2011-01-04 15:53:54-07:00;1;187b9ca0752e390b71833c713cc552b6fcae6a10;"Update the mpmath docs to 0.16

There is a currently a problem where the plots in
doc/modules/mpmath/plots/ are not appearing where they should in the
built docs."
2011-01-14 19:39:19-07:00;1;9644e55facd82b6c1f0efdd9876e1e86696f064e;Merge branches 'Abs', 'imports2', 'copyright', 'github_docs', '1946', 'property_doctests', 'exprsphinx', '2137', 'mpmath-0.16', 'python24', 'sysfix' and 't_symbol'
2011-01-14 19:39:19-07:00;3;9644e55facd82b6c1f0efdd9876e1e86696f064e;Merge branches 'Abs', 'imports2', 'copyright', 'github_docs', '1946', 'property_doctests', 'exprsphinx', '2137', 'mpmath-0.16', 'python24', 'sysfix' and 't_symbol'
2011-01-14 19:39:19-07:00;7;9644e55facd82b6c1f0efdd9876e1e86696f064e;Merge branches 'Abs', 'imports2', 'copyright', 'github_docs', '1946', 'property_doctests', 'exprsphinx', '2137', 'mpmath-0.16', 'python24', 'sysfix' and 't_symbol'
2011-01-14 19:39:19-07:00;1;9644e55facd82b6c1f0efdd9876e1e86696f064e;Merge branches 'Abs', 'imports2', 'copyright', 'github_docs', '1946', 'property_doctests', 'exprsphinx', '2137', 'mpmath-0.16', 'python24', 'sysfix' and 't_symbol'
2011-01-14 19:39:19-07:00;3;9644e55facd82b6c1f0efdd9876e1e86696f064e;Merge branches 'Abs', 'imports2', 'copyright', 'github_docs', '1946', 'property_doctests', 'exprsphinx', '2137', 'mpmath-0.16', 'python24', 'sysfix' and 't_symbol'
2010-11-25 22:17:28+05:27;1;4a089d8f8ea468b5b97bf0fc5111664c31d35762;"sympify fractions.Fraction as Rational rather than float

Also, make fractions a directly recognized type in Rational.
    Rational falls back to S for handling fractions.Fraction
    instances.

Tests for sympification of fractions and instantiation from fractions
were added.

Signed-off-by: Ronan Lamy <Ronan.Lamy@normalesup.org>"
2010-11-25 22:17:28+05:27;1;4a089d8f8ea468b5b97bf0fc5111664c31d35762;"sympify fractions.Fraction as Rational rather than float

Also, make fractions a directly recognized type in Rational.
    Rational falls back to S for handling fractions.Fraction
    instances.

Tests for sympification of fractions and instantiation from fractions
were added.

Signed-off-by: Ronan Lamy <Ronan.Lamy@normalesup.org>"
2010-11-25 22:17:28+05:27;1;4a089d8f8ea468b5b97bf0fc5111664c31d35762;"sympify fractions.Fraction as Rational rather than float

Also, make fractions a directly recognized type in Rational.
    Rational falls back to S for handling fractions.Fraction
    instances.

Tests for sympification of fractions and instantiation from fractions
were added.

Signed-off-by: Ronan Lamy <Ronan.Lamy@normalesup.org>"
2011-01-31 22:15:02+01:00;1;adc5d8037d57f72ae36b8b6f675d15cc57c316aa;Merge branch 'master' of github.com:sympy/sympy into smichr_2084_2084
2011-01-31 22:15:02+01:00;1;adc5d8037d57f72ae36b8b6f675d15cc57c316aa;Merge branch 'master' of github.com:sympy/sympy into smichr_2084_2084
2011-01-31 22:15:02+01:00;1;adc5d8037d57f72ae36b8b6f675d15cc57c316aa;Merge branch 'master' of github.com:sympy/sympy into smichr_2084_2084
2011-02-04 14:13:31-08:00;2;72c099f56f09070311ac9e9cc8ed98f755b1fdc4;Lots of work to get represent working and tested.
2011-02-04 14:13:31-08:00;2;72c099f56f09070311ac9e9cc8ed98f755b1fdc4;Lots of work to get represent working and tested.
2011-02-04 14:13:31-08:00;2;72c099f56f09070311ac9e9cc8ed98f755b1fdc4;Lots of work to get represent working and tested.
2011-02-06 19:18:45-08:00;2;635c67423101517e91c439f55b93e22d2951574d;"Merge branch 'novalidate' of git://github.com/ellisonbg/sympy into addison-main

Conflicts:
	sympy/physics/quantum/tests/test_gate.py
	sympy/physics/quantum/tests/test_qubit.py"
2011-02-06 19:18:45-08:00;2;635c67423101517e91c439f55b93e22d2951574d;"Merge branch 'novalidate' of git://github.com/ellisonbg/sympy into addison-main

Conflicts:
	sympy/physics/quantum/tests/test_gate.py
	sympy/physics/quantum/tests/test_qubit.py"
2011-02-06 19:18:45-08:00;2;635c67423101517e91c439f55b93e22d2951574d;"Merge branch 'novalidate' of git://github.com/ellisonbg/sympy into addison-main

Conflicts:
	sympy/physics/quantum/tests/test_gate.py
	sympy/physics/quantum/tests/test_qubit.py"
2011-02-10 14:27:30-08:00;2;2004986fd8f6b48a4218bcc395e8cbe10982b8ff;Merge branch 'novalidate'
2011-02-10 14:27:30-08:00;2;2004986fd8f6b48a4218bcc395e8cbe10982b8ff;Merge branch 'novalidate'
2011-02-10 14:27:30-08:00;2;2004986fd8f6b48a4218bcc395e8cbe10982b8ff;Merge branch 'novalidate'
2011-02-11 20:46:16-08:00;3;e7f09b6de4d2b39957051fc029a33c474e5a1b57;Fix to matrixcache that allows test suite to pass with no scipy.
2010-03-18 22:07:31+01:00;4;33d8cdb88140f9e018d1ff0efd4f0bf5072fbedf;"Implemented configuration framework for polys module

Previously there were two methods used for configuring what
algorithms should be used and how they will perform:

1. Passing keyword arguments around.
2. Setting up global variables.

Now there is only one configuration approach, via polyconfig.

Consider the following example:

In [1]: from sympy.polys.polyconfig import query, setup

In [2]: query(""USE_CYCLOTOMIC_FACTOR"")
Out[2]: True

In [3]: %time u = factor(x**100 - 1)
CPU times: user 0.04 s, sys: 0.00 s, total: 0.04 s
Wall time: 0.05 s

In [5]: setup(""USE_CYCLOTOMIC_FACTOR"", False)

In [6]: %time u = factor(x**100 - 1)
CPU times: user 2.66 s, sys: 0.01 s, total: 2.66 s
Wall time: 2.75 s

In [8]: setup(""USE_CYCLOTOMIC_FACTOR"")

In [9]: %time u = factor(x**100 - 1)
CPU times: user 0.05 s, sys: 0.00 s, total: 0.05 s
Wall time: 0.05 s

This way several low-level algorithms can be configured and, for
example, benchmarking or algorithm parameters optimization was
made a lot easier."
2010-04-25 21:07:59+02:00;1;ab6369ea2a3499f95c997586dfaff47b9ff2217b;"Added support for passing multiple gens via 'wrt' keyword

The 'wrt' keyword now supports multiple generators given
by a list or tuple, or comma separated values in a string.

Example:

In [1]: var('x1,x2,i1,i2,i3')
Out[1]: (x₁, x₂, i₁, i₂, i₃)

In [2]: f1 = x1**2 + x2**2

In [3]: f2 = x1**2*x2**2

In [4]: f3 = x1**3*x2 - x1*x2**3

In [5]: G = groebner([f1 - i1, f2 - i2, f3 - i3], wrt='x1,x2')

In [6]: reduced(x1**7*x2 - x1*x2**7, G, wrt=[x1, x2])[1]
Out[6]:
              2
-i₂⋅i₃ + i₃⋅i₁

In [7]: _.subs({i1: f1, i2: f2, i3: f3}).expand()
Out[7]:
   7        7
x₂⋅x₁  - x₁⋅x₂

(based on ""Gröbner Bases: A Short Introduction for Systems
Theorists"", B. Buchberger, Springer, 2001)."
2010-07-15 14:04:21+02:00;1;02fcd1317451e2546a58ca724ecb20b26e73592d;"Added simple subs() function to Poly class (#1974)

In [1]: Poly(x*y).subs(x, z)
Out[1]: Poly(z*y, z, y, domain='ZZ')

In [2]: Poly(x*y).subs(x, 1)
Out[2]: Poly(y, y, domain='ZZ')

In [3]: Poly(x*y, x).subs(y, x)
Out[3]:
 2
x

In [4]: Poly(x*y, x).subs(x, y)
Out[4]:
 2
y"
2010-07-16 03:55:21+02:00;1;e4b53b3bc2c8bde400fe06af4bfb2117fab1e15b;Split algebratools.py into polys/domains
2010-07-16 03:55:21+02:00;1;e4b53b3bc2c8bde400fe06af4bfb2117fab1e15b;Split algebratools.py into polys/domains
2010-08-04 13:31:03+02:00;4;2bacadf64338f5555cbe4fd68053bd525bb2541d;Split densetools.py (added euclidtools.py and sqfreetools.py)
2010-12-30 12:31:41+01:00;1;4ebceed3b70314ec27fe193d555b87c401b8b68a;Improved biquadratic case in polynomial system solver
2011-01-08 18:27:44+01:00;2;9e080e82b2f3725a4956601ac870b891528d562e;Split sympy/interactive/__init__.py
2011-01-08 19:53:53+01:00;2;189d718b048011c33d61ad3cdc911498b05909e5;Refactored initialization of interactive sessions
2011-01-13 17:05:33+01:00;1;ae7c2f0950ddb25d142dc20e78fa08da4eb2b3a8;"Make sure is_number doesn't fail in as_ordered_terms()

In [1]: [g(3), f(2), f(1), g(2), f(1, 2), g(1), g(1, 2), f(3)]

In [2]: sorted(_, key=Basic.sorted_key)
Out[2]: [f(1), f(2), f(3), f(1, 2), g(1), g(2), g(3), g(1, 2)]

In [3]: sum(_).as_ordered_terms()
Out[3]: [f(1), f(2), f(3), f(1, 2), g(1), g(2), g(3), g(1, 2)]"
2011-04-29 05:37:16+01:00;1;a396d8736d5d1b0cbcdb7198725590e97df2b391;"Transfer methods from Basic to Expr.

as_terms, as_ordered_terms, as_ordered only make sense for arithmetic
expressions, not for every possible kind of object."
2011-04-29 11:07:31-07:00;4;a72d1882c6e9b0cdce332710989796b070e442e5;"Polynomial division will default to a field

Over a field (QQ), the following example gives non-trivial quotient:

In [1]: div(x**2 + 1, 2*x - 4)
Out[1]:
⎛    x   ⎞
⎜1 + ─, 5⎟
⎝    2   ⎠

However, over a ring the quotient is is zero:

In [2]: div(x**2 + 1, 2*x - 4, domain=ZZ)
Out[2]:
⎛        2⎞
⎝0, 1 + x ⎠

In [3]: div(x**2 + 1, 2*x - 4, auto=False)
Out[3]:
⎛        2⎞
⎝0, 1 + x ⎠

Previously div() didn't automatically switch to a field, which
was impractical and caused trouble when div() was used as a
sub-algorithm in other modules.

To make div() not use automatic conversion, either specify
a domain explicitly or set 'auto' flag to False. The same
applies to rem(), quo() and exquo()."
2011-05-04 23:57:00-07:00;1;aaf75e386cdebe258e09f3e2d1954acecdd17792;"Merge pull request #276 from rlamy/as-methods

Transfer methods from Basic to Expr."
2011-05-05 00:14:07-07:00;4;6eec9d669acefe31880c0bcbf5814e00a900f228;"Merge pull request #286 from mattpap/div

div() will automatically convert the ground domain to a field"
2011-05-17 23:39:31+02:00;1;58880248a9ae2ed6d72338af335fa30fefde6239;"Added support for gosper_sum() to summation()

In [1]: summation(binomial(2*k, k)/4**k, (k, 0, n))
Out[1]:
 -n
4  ⋅(1 + 2⋅n)⋅Binomial(2⋅n, n)"
2011-05-18 15:28:34-07:00;1;4325aea61d9bf2cf6eb651c78ef9b8b9cbb32e7b;"Merge pull request #318 from mattpap/gosper

Finalized implementation of Gosper's algorithm (#2386)"
2011-05-18 14:51:19-06:00;1;2b33584db0aa7ceb8c71f59e3a10d884328f3307;"Raise NotImplementedError for f(g(x)).diff(x)

This require derivatives evaluated at a point to really be correct.  The
previous Derivative(f(g(x)), g(x))*Derivative(g(x), x) was a hack that
lead to problems (for example, if you tried to run .doit() on that, it
would fail).  It was difficult to continue to support this and to not
allow erroneous input to diff (like f(x).diff(2)) because of the way the
code is implemented with the chain rul.  Since the output was
technically incorrect anyway, this was removed.

Note that this is a workaround (though in my opinion, the old way was
too, and it was more hackish).  The correct fix would be to implemented
derivatives evaluated at a point (issue 1620).

I had to wrap some code in classify_ode() around a try, except
NotImplementedError, block to make it work with things like f(y/x) in an
ode doctest (the classification test was for 1st_exact, but the doctest
related to homogeneous_coeff and wasn't exact).  Other code might have
to do similar things until this gets fixed properly (though no other
code in the library code needed to be fixed).

See issue 1525 for more information on this issue."
2011-05-27 19:43:52-06:00;1;c0aab997384e78aaa45b263c97d00c9fb21ab67d;"Revert ""2378: Remove unused _op_priority and @call_highest_priority""

This reverts commit 041995d37563f1e0743c75a311035b553f66741e.

See issue 2411 and the discussion at pull request #359."
2011-06-05 16:47:23-07:00;1;3a43310f1957a21a6f095fe2801cc05b5268a2c7;"Merge pull request #374 from asmeurer/_op_priority

_op_priority

Please also see the discussion over at pull request #359."
2011-06-07 01:52:20-07:00;1;e282b5debd1b82843a8e7fdd049896189b4d2096;Implemented parse_expr() on top of customized tokenize module
2011-06-07 15:21:10-07:00;1;a69e964dffe6617c8a116e05dc22e93ae90b3355;"Merge pull request #392 from mattpap/parser

Use tokenize-based parser in sympify() (#871, #976)"
2011-06-08 18:57:35-06:00;2;092b3f410b227b981a0e4b6b915f25fc7471b7a2;"Create DecrementLevel context manager for DifferentialExtension objects

This replaces the common idiom in the Risch algorithm:

DE.decrement_level()
<do stuff>
DE.increment_level()

with the context manager / with statement idiom:

with DecrementLevel(DE):
    <do stuff>

This is not only *much* easier to read, but it's more robust, since
__exit__ is always called at the end of the with statement, even if an
exception is raised.  So, for example, you can now have a raises
statement in a test that doesn't break all other tests that use the same
DifferentialExtension object.

Previously, I didn't do this because Python 2.4 doesn't support the with
statement, but this will not be merged until after the 0.7.0 release,
which will be the last release to support Python 2.4, so I went ahead
and did this.  Note that to use the with statement in Python 2.5, you
have to import with_statement from __future__."
2011-06-08 18:57:35-06:00;1;092b3f410b227b981a0e4b6b915f25fc7471b7a2;"Create DecrementLevel context manager for DifferentialExtension objects

This replaces the common idiom in the Risch algorithm:

DE.decrement_level()
<do stuff>
DE.increment_level()

with the context manager / with statement idiom:

with DecrementLevel(DE):
    <do stuff>

This is not only *much* easier to read, but it's more robust, since
__exit__ is always called at the end of the with statement, even if an
exception is raised.  So, for example, you can now have a raises
statement in a test that doesn't break all other tests that use the same
DifferentialExtension object.

Previously, I didn't do this because Python 2.4 doesn't support the with
statement, but this will not be merged until after the 0.7.0 release,
which will be the last release to support Python 2.4, so I went ahead
and did this.  Note that to use the with statement in Python 2.5, you
have to import with_statement from __future__."
2011-06-10 13:24:08-04:00;1;d559b4b4acce0dc1b2d4a1ef91745e23bddb4cd8;Merge remote-tracking branch 'upstream/master'
2011-06-10 13:24:08-04:00;1;d559b4b4acce0dc1b2d4a1ef91745e23bddb4cd8;Merge remote-tracking branch 'upstream/master'
2011-06-11 07:19:17-07:00;1;2e2069e28b01efd137157ac39d11a25bd0ba5569;"Merge pull request #353 from smichr/1694ms2

1694: solver checks solutions and handles rational functions better"
2011-06-11 22:00:43-06:00;1;d9d0ea4af9a37a2a9efc9da0235ce3322296fc9a;"Robustify sympify(iterable)

If the iterable didn't rebuild itself with type(a)(list), it would raise
a TypeError.  Now we just catch that and move on to the other heuristics
in sympify().  This was causing a failure in the sage tests."
2011-06-10 02:57:13-07:00;1;c0f1d2416ac748476046a3cc08e27f82a26b9f11;"Added support for gmpy's and mpmath's types to sympify() (#2441)

In [1]: from gmpy import mpz, mpq

In [2]: sympify(mpz(1000001))
Out[2]: 1000001

In [3]: type(_)
Out[3]: <class 'sympy.core.numbers.Integer'>

In [4]: sympify(mpq(101, 127))
Out[4]:
101
───
127

In [5]: type(_)
Out[5]: <class 'sympy.core.numbers.Rational'>

In [6]: from sympy.mpmath import mpf, mpc

In [7]: sympify(mpf(1.1))
Out[7]: 1.10000000000000

In [8]: type(_)
Out[8]: <class 'sympy.core.numbers.Float'>

In [9]: sympify(mpc(1.1 + 2.2j))
Out[9]: 1.1 + 2.2⋅ⅈ

In [10]: type(_)
Out[10]: <class 'sympy.core.add.Add'>"
2011-06-10 02:57:13-07:00;1;c0f1d2416ac748476046a3cc08e27f82a26b9f11;"Added support for gmpy's and mpmath's types to sympify() (#2441)

In [1]: from gmpy import mpz, mpq

In [2]: sympify(mpz(1000001))
Out[2]: 1000001

In [3]: type(_)
Out[3]: <class 'sympy.core.numbers.Integer'>

In [4]: sympify(mpq(101, 127))
Out[4]:
101
───
127

In [5]: type(_)
Out[5]: <class 'sympy.core.numbers.Rational'>

In [6]: from sympy.mpmath import mpf, mpc

In [7]: sympify(mpf(1.1))
Out[7]: 1.10000000000000

In [8]: type(_)
Out[8]: <class 'sympy.core.numbers.Float'>

In [9]: sympify(mpc(1.1 + 2.2j))
Out[9]: 1.1 + 2.2⋅ⅈ

In [10]: type(_)
Out[10]: <class 'sympy.core.add.Add'>"
2011-06-15 17:51:11-06:00;3;8a1a9bcb221a4cb97756b73d353cecddb29b3b2d;"Prevent test_lambdify from setting the global mpmath.mp.dps value

This was causing test failures if the tests were run multiple times in
the same session.  See also issue 2493."
2011-06-15 20:03:00-06:00;1;7ca596310e90b2722c4ae6f392d65dfe1416f7ca;"Prevent test_numpy.py from setting the global mpmath.mp.dps

This is similar to test_lambdify.py.  See issue 2493."
2011-04-22 22:16:51-05:00;2;9f6a3b8f49b8893517681fe8fd1a3f897347eb77;"Test for matrix/vector norm properties.

Simplified singular_values.

added simple test for condition_number"
2011-04-23 09:31:54-05:00;2;bdae2b1455fd5cfe885c68cc3926da722e20f001;"Added Tests

All tests pass. Not much variety in the vectors/matrices though. Running into simplification issues with comparing equal expressions."
2011-06-10 20:55:07+02:00;2;4622f7b6c579e923cbeec56afb8cd5be933939e2;"Update mpmath to 0.17

Code and docs are both updated. Notably, the new version of mpmath
doesn't support Python 2.4 any more and adds Python 3 support."
2011-06-22 14:24:28-07:00;2;a2f1da8950ac01c0078e629cad58aaa7043fc141;"Merge pull request #440 from vperic/mpmath

Update mpmath to 0.17"
2011-06-24 10:03:53-07:00;1;df7a135a4ff7eca361ebbb07ccbeabf8654a8d80;"Merge pull request #423 from smichr/solve

move preprocessing out of _solve"
2011-06-28 01:35:52-04:00;1;4f7b289d31bfa9b451fd41976a406d26e73a7429;fix doctests of change_mul in integrals/deltafunctions
2011-06-28 07:22:11-07:00;1;ec23267c72b3e861928a00a8f2fe1b8fe3708b12;"Merge pull request #466 from smichr/delta

2512: changes related to integration of delta functions"
2011-06-28 16:47:59+02:00;1;89c30cd96f532d43225f66aa52a67c2cb79ada8d;Merge remote-tracking branch 'origin/master' into f5b-ready
2011-06-28 16:47:59+02:00;1;89c30cd96f532d43225f66aa52a67c2cb79ada8d;Merge remote-tracking branch 'origin/master' into f5b-ready
2011-06-28 22:06:42-06:00;1;f8f8346d29b871cc559b94e1ddd78fa3dd002c00;"Merge branch '0.7.0' into master

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	examples/intermediate/mplot2d.py
	setup.py
	sympy/core/compatibility.py
	sympy/core/function.py
	sympy/external/tests/test_numpy.py
	sympy/mpmath/ctx_mp.py
	sympy/physics/quantum/gate.py
	sympy/solvers/solvers.py
	sympy/tensor/indexed.py"
2011-06-28 22:06:42-06:00;3;f8f8346d29b871cc559b94e1ddd78fa3dd002c00;"Merge branch '0.7.0' into master

Conflicts:
	AUTHORS
	doc/src/aboutus.txt
	examples/intermediate/mplot2d.py
	setup.py
	sympy/core/compatibility.py
	sympy/core/function.py
	sympy/external/tests/test_numpy.py
	sympy/mpmath/ctx_mp.py
	sympy/physics/quantum/gate.py
	sympy/solvers/solvers.py
	sympy/tensor/indexed.py"
2011-06-29 02:38:58-06:00;1;8629cb85295ccac34c764c5ed21a42f681fe90c9;Merge branch '0.7.0-merge'
2011-06-29 02:38:58-06:00;3;8629cb85295ccac34c764c5ed21a42f681fe90c9;Merge branch '0.7.0-merge'
2011-05-23 17:15:19-05:00;1;b74cb91f7d722340140b143da3a387e7b5b092ac;"a few distinct additions

Can add boundaries to intervals. I.e. (1,2) + {1,2} = [1,2]
Elements in sets are now sympified
Tests added

Various things

Added more tests and doctests.
Made Unions of Unions work well.
Reversed my understanding of subset. A.subset(B) means B is a subset of A.
Should really be setcontains
Defined FiniteSet equality and complement (in the case of purely numeric sets). {0}.complement == (-oo,0) U (0,-oo)

Added FiniteSet to core/__init__.py imports

Interval(1,1) is now a FiniteSet {1}
Added Python Printing. Sort elements before printing in all methods.
Added Comments

Removed __mul__ operator. Intend to reserve it for cartesian products of sets"
2011-05-23 17:15:19-05:00;1;b74cb91f7d722340140b143da3a387e7b5b092ac;"a few distinct additions

Can add boundaries to intervals. I.e. (1,2) + {1,2} = [1,2]
Elements in sets are now sympified
Tests added

Various things

Added more tests and doctests.
Made Unions of Unions work well.
Reversed my understanding of subset. A.subset(B) means B is a subset of A.
Should really be setcontains
Defined FiniteSet equality and complement (in the case of purely numeric sets). {0}.complement == (-oo,0) U (0,-oo)

Added FiniteSet to core/__init__.py imports

Interval(1,1) is now a FiniteSet {1}
Added Python Printing. Sort elements before printing in all methods.
Added Comments

Removed __mul__ operator. Intend to reserve it for cartesian products of sets"
2011-05-23 17:15:19-05:00;1;b74cb91f7d722340140b143da3a387e7b5b092ac;"a few distinct additions

Can add boundaries to intervals. I.e. (1,2) + {1,2} = [1,2]
Elements in sets are now sympified
Tests added

Various things

Added more tests and doctests.
Made Unions of Unions work well.
Reversed my understanding of subset. A.subset(B) means B is a subset of A.
Should really be setcontains
Defined FiniteSet equality and complement (in the case of purely numeric sets). {0}.complement == (-oo,0) U (0,-oo)

Added FiniteSet to core/__init__.py imports

Interval(1,1) is now a FiniteSet {1}
Added Python Printing. Sort elements before printing in all methods.
Added Comments

Removed __mul__ operator. Intend to reserve it for cartesian products of sets"
2011-05-26 09:04:39-05:00;1;2af9255ab654db1b3dcd1339e85f7bd55f82ca94;"Real part of FiniteSet and Union Separated

Created RealSet(Set, EvalfMixin) interface, RealFiniteSet(FiniteSet,Realset)
    and RealUnion(Union, RealSet) subclasses

FiniteSets and Unions create their real equivalents if all arguments are real.
Unions still merge the real component of their arguments if possible.

Changed Union regular str python printing to use 'U' as a union character rather than explicitly say ""Union"" or ""RealUnion""

Added is_finite, is_interval, is_real properties

Removed SingletonSet(FiniteSet, Interval) (no longer necessary)

EmptySets now iterable (empty iterator) and handle unions simply.

Added test_real()

FiniteSet of a string is now just a single string element rather than a bunch of characters."
2011-05-24 15:28:31-05:00;1;2ccef7060baefd1467c7f94f2a1241d888b903ea;Added ProductSet
2011-07-15 09:42:32-07:00;1;17b15d38bb9865eb357cebb355acdab1d6e4a2b1;"Merge pull request #361 from mrocklin/cartesian_product_set

Cartesian ProductSet"
2011-07-16 10:07:59-07:00;1;6f851a3421bb1d30aea69583f035c1cb278c7cb0;"Merge pull request #402 from mattpap/converter

Added support for gmpy's and mpmath's types to sympify() (#2441)"
2011-07-16 10:07:59-07:00;1;6f851a3421bb1d30aea69583f035c1cb278c7cb0;"Merge pull request #402 from mattpap/converter

Added support for gmpy's and mpmath's types to sympify() (#2441)"
2011-06-11 22:00:43-06:00;1;31c8cd6eff4eaaccb22752ad9afd54379813a1f5;"Robustify sympify(iterable)

If the iterable didn't rebuild itself with type(a)(list), it would raise
a TypeError.  Now we just catch that and move on to the other heuristics
in sympify().  This was causing a failure in the sage tests.

Conflicts:

	sympy/core/sympify.py"
2011-06-11 22:00:43-06:00;1;2aa8fd3830462f2b4d9ed24628f4bb8582b184ed;"Robustify sympify(iterable)

If the iterable didn't rebuild itself with type(a)(list), it would raise
a TypeError.  Now we just catch that and move on to the other heuristics
in sympify().  This was causing a failure in the sage tests.

Conflicts:

	sympy/core/sympify.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;2;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;3;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;7;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;3;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;3;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;4;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;1;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-07-25 01:59:05-06:00;3;52657848516ce7f4f7119b921d6b8d64131b58d3;"Merge commit 'sympy-0.7.0' into integration3

This was a pretty big merge.  It took me over three weeks to complete
it, as git decided that I should look at basically every change from
sympy-0.7.0 since my branch.  git mergetool was invaluable here.

I have tried very carefully to do this right, including carefully going
through the diff against sympy-0.7.0 and making sure nothing wrong was
different.

This changed some semantics in the polys.  In particular, exquo and quo
had their meanings swapped, and as_basic() was renamed to as_expr().

There are some test failures in this branch.  Most are related to the
hack removing algebraic substitution of exp().  If you disable this, you
will see most of the test failures here go away.  There is a doctest
failure in risch_integrate() due to a regression in Integral.subs (see
issue 2571), and a code_quality failure because it thinks that lines
like ""...or raise NonElementaryIntegralException, in which case..."" in
some of the Risch algorithm docstrings are old style exceptions (see
pull request #511).  If you temporarily remove the commas from those
docstrings, you will see that there are no other code quality problems.

The good news is that now several things work now with risch_integrate()
that didn't before.  For example, thanks to improvements to RootSum, the
following now works:

In [1]: risch_integrate(1/(exp(5*x) + exp(x) + 1), x)
Out[1]:
           ⎛    2
x + RootSum⎝21⋅z  + 6⋅z + 1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4

                                       ⎞          ⎛     3        2
- 625*_i**2/2 - 125*_i/2 + exp(x) - 5))⎠ + RootSum⎝161⋅z  + 115⋅z  + 19⋅z +

1, Lambda(_i, _i*log(-3381*_i**4/4 - 3381*_i**3/4 - 625*_i**2/2 - 125*_i/2 +

             ⎞
 exp(x) - 5))⎠

In [2]: cancel(risch_integrate(1/(exp(5*x) + exp(x) + 1), x).diff(x))
Out[2]:
      1
─────────────
 5⋅x    x
ℯ    + ℯ  + 1

Conflicts:
	bin/isympy
	doc/src/gotchas.txt
	doc/src/modules/assumptions.txt
	doc/src/modules/logic.txt
	doc/src/modules/polynomials.txt
	doc/src/modules/polys/basics.txt
	doc/src/modules/polys/index.txt
	doc/src/modules/polys/polynomials.txt
	doc/src/tutorial.txt
	examples/intermediate/coupled_cluster.py
	sympy/assumptions/tests/test_assumptions_2.py
	sympy/assumptions/tests/test_query.py
	sympy/assumptions/tests/test_refine.py
	sympy/concrete/summations.py
	sympy/concrete/tests/test_sums_products.py
	sympy/core/basic.py
	sympy/core/expr.py
	sympy/core/function.py
	sympy/core/multidimensional.py
	sympy/core/numbers.py
	sympy/core/operations.py
	sympy/core/relational.py
	sympy/core/sets.py
	sympy/core/symbol.py
	sympy/core/tests/test_count_ops.py
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_expand.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_functions.py
	sympy/core/tests/test_numbers.py
	sympy/core/tests/test_sets.py
	sympy/core/tests/test_subs.py
	sympy/core/tests/test_symbol.py
	sympy/core/tests/test_var.py
	sympy/functions/combinatorial/tests/test_comb_factorials.py
	sympy/functions/elementary/exponential.py
	sympy/functions/elementary/tests/test_complexes.py
	sympy/functions/elementary/tests/test_exponential.py
	sympy/functions/special/polynomials.py
	sympy/functions/special/tests/test_error_functions.py
	sympy/geometry/point.py
	sympy/geometry/tests/test_geometry.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/rationaltools.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/interactive/__init__.py
	sympy/logic/boolalg.py
	sympy/logic/tests/test_boolalg.py
	sympy/matrices/__init__.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/physics/secondquant.py
	sympy/physics/tests/test_secondquant.py
	sympy/polys/__init__.py
	sympy/polys/benchmarks/bench_groebnertools.py
	sympy/polys/constructor.py
	sympy/polys/densearith.py
	sympy/polys/densebasic.py
	sympy/polys/densepolys.py
	sympy/polys/densetools.py
	sympy/polys/domains/__init__.py
	sympy/polys/domains/algebraicfield.py
	sympy/polys/domains/characteristiczero.py
	sympy/polys/domains/compositedomain.py
	sympy/polys/domains/domain.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/field.py
	sympy/polys/domains/finitefield.py
	sympy/polys/domains/fractionfield.py
	sympy/polys/domains/gmpyfinitefield.py
	sympy/polys/domains/gmpyintegerring.py
	sympy/polys/domains/gmpyrationalfield.py
	sympy/polys/domains/groundtypes.py
	sympy/polys/domains/integerring.py
	sympy/polys/domains/modularinteger.py
	sympy/polys/domains/mpmathcomplexdomain.py
	sympy/polys/domains/mpmathrealdomain.py
	sympy/polys/domains/polynomialring.py
	sympy/polys/domains/pythoncomplexdomain.py
	sympy/polys/domains/pythonfinitefield.py
	sympy/polys/domains/pythonintegerring.py
	sympy/polys/domains/pythonrationalfield.py
	sympy/polys/domains/pythonrealdomain.py
	sympy/polys/domains/rationalfield.py
	sympy/polys/domains/realdomain.py
	sympy/polys/domains/ring.py
	sympy/polys/domains/simpledomain.py
	sympy/polys/domains/sympyfinitefield.py
	sympy/polys/domains/sympyintegerring.py
	sympy/polys/domains/sympyrationalfield.py
	sympy/polys/domains/sympyrealdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/factortools.py
	sympy/polys/galoistools.py
	sympy/polys/groebnertools.py
	sympy/polys/monomialtools.py
	sympy/polys/numberfields.py
	sympy/polys/orthopolys.py
	sympy/polys/partfrac.py
	sympy/polys/polyclasses.py
	sympy/polys/polyconfig.py
	sympy/polys/polycontext.py
	sympy/polys/polyerrors.py
	sympy/polys/polyfuncs.py
	sympy/polys/polyoptions.py
	sympy/polys/polyroots.py
	sympy/polys/polytools.py
	sympy/polys/polyutils.py
	sympy/polys/rootisolation.py
	sympy/polys/rootoftools.py
	sympy/polys/sparsearith.py
	sympy/polys/sparsebasic.py
	sympy/polys/sparsepolys.py
	sympy/polys/sparsetools.py
	sympy/polys/specialpolys.py
	sympy/polys/sqfreetools.py
	sympy/polys/tests/test_constructor.py
	sympy/polys/tests/test_densebasic.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py
	sympy/polys/tests/test_euclidtools.py
	sympy/polys/tests/test_factortools.py
	sympy/polys/tests/test_galoistools.py
	sympy/polys/tests/test_groebnertools.py
	sympy/polys/tests/test_monomialtools.py
	sympy/polys/tests/test_numberfields.py
	sympy/polys/tests/test_partfrac.py
	sympy/polys/tests/test_polyclasses.py
	sympy/polys/tests/test_polyfuncs.py
	sympy/polys/tests/test_polyoptions.py
	sympy/polys/tests/test_polyroots.py
	sympy/polys/tests/test_polytools.py
	sympy/polys/tests/test_polyutils.py
	sympy/polys/tests/test_rootisolation.py
	sympy/polys/tests/test_rootoftools.py
	sympy/polys/tests/test_specialpolys.py
	sympy/polys/tests/test_sqfreetools.py
	sympy/printing/pretty/pretty.py
	sympy/printing/pretty/tests/test_pretty.py
	sympy/printing/printer.py
	sympy/printing/repr.py
	sympy/printing/str.py
	sympy/printing/tests/test_fcode.py
	sympy/printing/tests/test_python.py
	sympy/printing/tests/test_repr.py
	sympy/printing/tests/test_str.py
	sympy/series/tests/test_nseries.py
	sympy/simplify/__init__.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_cse.py
	sympy/simplify/tests/test_rewrite.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/inequalities.py
	sympy/solvers/ode.py
	sympy/solvers/solvers.py
	sympy/solvers/tests/test_inequalities.py
	sympy/solvers/tests/test_ode.py
	sympy/solvers/tests/test_pde.py
	sympy/solvers/tests/test_polysys.py
	sympy/solvers/tests/test_recurr.py
	sympy/solvers/tests/test_solvers.py
	sympy/utilities/__init__.py
	sympy/utilities/decorator.py
	sympy/utilities/iterables.py
	sympy/utilities/lambdify.py
	sympy/utilities/tests/test_codegen.py
	sympy/utilities/tests/test_decorator.py
	sympy/utilities/tests/test_iterables.py
	sympy/utilities/tests/test_lambdify.py
	sympy/utilities/tests/test_pickling.py
	sympy/utilities/timeutils.py"
2011-05-04 22:04:37+01:00;1;993b6ec23f00f5e1750376dabe871a0e1d386545;"Transfer pickling support to Basic.

Pickling isn't directly related to assumptions, so it doesn't belong
in AssumeMixin."
2011-07-28 10:59:04-07:00;1;9867cb0eb9c730d05ebccbbeba2def7e1d674f20;"Merge pull request #328 from rlamy/factor-assumptions

Factor old-style assumptions"
2011-07-28 10:59:04-07:00;1;9867cb0eb9c730d05ebccbbeba2def7e1d674f20;"Merge pull request #328 from rlamy/factor-assumptions

Factor old-style assumptions"
2011-07-29 22:38:08-06:00;1;1f881c2f447ff735faabaf0a2132e7d4be7dca18;"Merge branch 'master' into 0.7.1

Conflicts:
	sympy/__init__.py
	sympy/core/basic.py
	sympy/core/function.py"
2011-07-29 22:38:08-06:00;1;1f881c2f447ff735faabaf0a2132e7d4be7dca18;"Merge branch 'master' into 0.7.1

Conflicts:
	sympy/__init__.py
	sympy/core/basic.py
	sympy/core/function.py"
2011-08-02 23:11:28+02:00;2;76d0046a10d03aeb4da1f61f8c27594f80db2cee;"Automatically derive terminal width in test()

There are two approaches:

1) On Unix-like operating systems stty program (from coreutils) is used. If
stty is not available or when stty fails for some reason or when stdout is
a PIPE then terminal width is assumed to be 80 characters.

2) On Windows ctypes and calls to WinAPI functions are used to determine
terminal width. If this fails, terminal width will set to 80 characters."
2011-07-12 12:16:08+02:00;1;a552a02654c0c50d569a4545efa36de5a6ecfd7f;"printing/pretty: Catch one more exception type

In Python 3, calling curses.setupterm() can also raise an
io.UnsupportedOperation exception. Just pass if this is the case and use
the default column width of zero."
2011-08-10 09:25:47-07:00;1;1e94dc93c055174b2164da92ee9a38e9d9246fce;"Merge pull request #495 from vperic/porting

Porting, part 3"
2011-08-11 12:55:13+02:00;1;9fc9a20d6591c7341f04551925ca30da3d63b865;"Merge branch 'master' into matrix-fglm3

Conflicts:
	sympy/polys/groebnertools.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_groebnertools.py"
2011-08-15 08:43:03+05:27;1;32c1197ec58f7dc8e97fb1ccfc9fd38e3db1e094;"prefilter operations args for cls.identity

    When an existing Mul is multiplied by 1, all the arguments of the existing
    Mul are unecessarily re-traversed in building up the answer. Now, that
    trivial operation is avoided by filtering out the cls.idenity (1 for Mul
    and 0 for Add).

    pre = 'from sympy import Dummy, Mul\nm=Mul(*[Dummy() for i in xrange(500000)])'
    >>> T('2*m', pre, number=1)
    7.073108072289841
    >>> T('1*m', pre, number=1)
    0.020833237205948762

    pre = 'from sympy import Dummy, Mul\nm=Mul(*[Dummy() for i in xrange(5)])'
    >>> T('2*m', pre, number=1)
    0.00031683582523100995
    >>> T('1*m', pre, number=1)
    0.0001092006970395687

    This has the added benefit of not having to pre-filter
    identity terms in the library code if one wants to return a valid
    evaluate=False expression for Add and Mul. Note: this also has the side
    effect that an unevaluated Mul can no longer be 'touched' with 1 to
    re-evaluated the Mul. One would have to explicitly do something like
    new_mul = Mul(*old_mul.args). Also note that Mul(*args, evaluate=False)
    is not the same as using Mul's _new_rawargs method which does almost
    nothing to the args it is given, so

    >>> MUL = lambda *args: object.__new__(Mul)._new_rawargs(*args)
    >>> MUL(S.One, x).args
    (1, x)
    >>> Mul(S.One, x, evaluate=False).args # now gives x with no args
    ()
    >>> Mul(S.One, x).args # always gave x with no args
    ()

    Note about quantum changes:
    Tests in quantum failed because an unevaluated 1/sqrt(2) was being used.
    These failures no longer occur after the next commit."
2011-08-17 18:08:21-07:00;1;e6af2d87656a589514d27df3e573d38030cc7333;"Merge pull request #544 from smichr/operations

prefilter operations args for cls.identity"
2011-08-17 12:57:02+05:27;1;7de4e5fd44eaf6d06291fff81825c17ecb4a7955;"print **(Rational(a,b)) as **Rational(a,b)

    When printmethod is _sympyrepr, the parenthesized Rational will
    be (Rational(a, b)) instead of (a/b) so strip the superfluous
    parentheses. But assert that this is True and if not, don't make
    the string edit."
2011-06-28 09:20:51-05:00;1;0f7280f5e412003b7af8e682d5866dde158fcbe3;"Created Matrix Expressions

Add and Mul created. Transpose and Inverse objects also.

Right now it doesn't do anything except handle shape.

pow -1 yields inverse

matrixify checks that expr is mul or add

typos to be squashed"
2011-06-28 09:20:51-05:00;1;0f7280f5e412003b7af8e682d5866dde158fcbe3;"Created Matrix Expressions

Add and Mul created. Transpose and Inverse objects also.

Right now it doesn't do anything except handle shape.

pow -1 yields inverse

matrixify checks that expr is mul or add

typos to be squashed"
2011-07-12 17:39:37-05:00;1;7e758eedf894a5bfcd7f31b3e412e5911082bb6e;"MatMul flattens inverses, identities

Printing of inverses and transposes

Created Identity object

is_Inverse, is_Transpose properties

subs matrixifies"
2011-07-18 15:49:43-05:00;1;6eb147a0e95e07828f1fe46c9cc5a4dcd101a42c;"Block Matrices more robust

Added is_Identity property

transpose function on Identities and ZeroMatrices

linear_factors works on simple symbols
    is_Mul works with scalar multiplications

block_collapse in matrices namespace

Block_collapse more powerful

block transpose bug fixed

Inverse of single block matrix now block of inverse, room to grow to 2x2s

block_collapse now recurses AND repeats if a change was made

1x1 blocks combine with nonblocks"
2011-08-20 20:41:06-07:00;2;e3df5de1f570664229d841ec568c47a34ff4f840;"Merge pull request #532 from mrocklin/matrix_expr

Matrix expr"
2011-09-29 12:47:40-07:00;2;216ebb497702efabeaf44373959a40596cb02d20;"Switch automatically to a field in reduced()

The same applies to GroebnerBasis.reduce(). The default is a field, but
both functions will try to retract the domain if possible, e.g:

In [1]: f = 2*x**4 + y**2 - x**2 + y**3

In [2]: G = [x**3 - x, y**3 - y]

In [3]: reduced(f, G, polys=True)
Out[3]: ([Poly(2*x, x, y, domain='ZZ'), Poly(1, x, y, domain='ZZ')], Poly(x**2 + y**2 + y, x, y, domain='ZZ'))

In [4]: G = groebner(G, polys=True)

In [5]: G.reduce(f)
Out[5]: ([Poly(2*x, x, y, domain='ZZ'), Poly(1, x, y, domain='ZZ')], Poly(x**2 + y**2 + y, x, y, domain='ZZ'))

Switching to a field by default is important for correctness, e.g.:

In [6]: f = 2*x**3 + y**3 + 3*y

In [7]: G = groebner([x**2 + y**2 - 1, x*y - 2])

In [8]: reduced(f, G)
Out[8]:
⎛⎡        3          6    4    2     5    3      ⎤   ⎞
⎜⎢ 2   x⋅y    x⋅y   y    y    y     y    y    3⋅y⎥   ⎟
⎜⎢x  - ──── + ─── + ── - ── + ──, - ── + ── + ───⎥, 0⎟
⎝⎣      2      2    4    2    4     4    2     4 ⎦   ⎠

In [9]: reduced(f, G, auto=False)
Out[9]:
⎛⎡ 2   ⎤     2  3    2      3      ⎞
⎝⎣x , 0⎦, - x ⋅y  + x ⋅y + y  + 3⋅y⎠"
2011-10-01 12:38:08-07:00;2;5032133385baf9bb1a8e0284eb374c28f6babd9f;"Merge pull request #623 from mattpap/reduced

Implemented `GroebnerBasis.reduce()`"
2011-10-01 14:01:21-07:00;1;8736aa502636442e9d2ce55db46a29c143f5a71e;pypy: import numpy with import_module() in lambdify()
2011-10-04 16:31:07-07:00;1;7400f4ed5b8c8e4c5331952b68994ce42976754f;"Merge pull request #627 from mattpap/pypy-fixes

Fixed almost all test failures under PyPy"
2011-10-04 17:39:57-07:00;1;3ff04a05449ff7ffef4a7da588489ff082b1d2ef;Added support for dict to sympify()
2011-10-06 22:23:40-07:00;1;e4ce356651abe9f1fd67dacb497aecc037980f3b;"Merge pull request #631 from mattpap/has

Improved `.has()` and changed the meaning of `Basic.__contains__()`"
2011-10-07 13:28:00-07:00;1;035a9f6ffb704ddeb8598e3783e42640f37ffac2;Better support for non-Basic args in default_sort_key()
2011-10-08 19:15:10-07:00;1;314e262c93b7a9ac60a373885118cd7dc25530b3;"Merge pull request #637 from mattpap/args_order

Robustified sort_key() and default_sort_key()"
2011-09-03 22:29:07+05:27;1;35a6f6d6511186f3bdfab811ddceff3444768c78;"fallback implemented for multi-equation solve

    When the system is non-linear and has more generators than equations,
    a fallback is implemented so a solution may still be found."
2011-09-26 20:54:03+05:27;1;7de3405aa4e91c91b2bb1a7ad8d06177e3649336;add solve coverage tests and edit in response
2011-10-11 23:18:24-07:00;1;b1fcb9e09a64f24ecb68a5a7a95ad528a195853b;"Merge pull request #582 from smichr/solve3

solver upgrades"
2011-09-27 16:35:42+05:27;1;ccaa4cf6a87c96475bbf74a372c97ea97d8f9465;"handle failing hyperexpand test; watch for noncommutatives and terms_gcd prob"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;4;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;7;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;1;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;2;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-20 19:20:59-07:00;3;efe83131d8c3b95475418da62541e5f4b8729d9e;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	examples/advanced/dense_coding_example.py
	examples/advanced/grover_example.py
	sympy/physics/quantum/grover.py
	sympy/physics/quantum/tests/test_grover.py"
2011-10-09 19:09:10-07:00;1;cd62a54ac54c6ba410f3629a9f38549628f7b3bd;"Automatically construct missing symbols in isympy

By default, if a symbol was not defined before code execution, NameError
exception is raised:

$ bin/isympy -q
IPython console for SymPy 0.7.1-git (Python 2.6.6-64-bit) (ground types: gmpy)

In [1]: 'a' in globals()
Out[1]: False

In [2]: integrate(a*x, x)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
/home/mateusz/repo/git/sympy/<ipython-input-2-26a8cf347e13> in <module>()
----> 1 integrate(a*x, x)

NameError: name 'a' is not defined

In [3]: 'a' in globals()
Out[3]: False

In [4]:
Do you really want to exit ([y]/n)?
Exiting ...

However, in IPython (>= 0.11) if -a or --auto command line option is
specified, all NameError exceptions that are raised in the interpreter's
stack frame are ignored and appropriate symbols constructed and injected
into the global namespace, and code rerun:

$ bin/isympy -q -a
IPython console for SymPy 0.7.1-git (Python 2.6.6-64-bit) (ground types: gmpy)

In [1]: 'a' in globals()
Out[1]: False

In [2]: integrate(a*x, x)
Out[2]:
   2
a⋅x
────
 2

In [3]: 'a' in globals()
Out[3]: True

Note that any other NameError exceptions are handled by standard
IPython traceback printing procedures:

In [4]: def f(): return b

In [5]: f()
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
/home/mateusz/repo/git/sympy/<ipython-input-5-0ec059b9bfe1> in <module>()
----> 1 f()

/home/mateusz/repo/git/sympy/<ipython-input-4-ca2b6b0871d2> in f()
----> 1 def f(): return b

NameError: global name 'b' is not defined"
2011-10-21 16:44:32-07:00;1;9028973d147ec7d3a57e7b67e584a63fd3f125e7;"Merge pull request #643 from mattpap/auto_symbols

Automatically construct missing symbols in isympy"
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;2;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;2;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;1;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-10-22 18:41:19-07:00;2;04802417dd863496da457468e52e03140da1d294;Merge branch 'master' into mailmap
2011-09-25 04:57:16+01:00;2;6a1e23add0104f13b5efd9c89c76a4791ca4a7b4;"Separate system solving from single equations in _solve()

Since the two code paths have no part in common, they should be in
separate functions. This removes a fair bit of unnecessary indentation.

""Flat is better than nested"""
2011-11-20 18:34:18-08:00;2;efd99600b2d0acbfd2d176526bc9e74ff3c49f28;"Merge pull request #620 from rlamy/solve-flat

Simplify code in _solve()"
2011-11-21 13:52:35+05:27;1;971c54fb8717ed52d1782230a23e90909afe911c;find added to units and examples given in module docstring
2011-11-22 14:50:12+04:00;1;16c9e60f679e12c1713ba338db685e6f42730efb;Fixed following PEP8 in parts of the pyglet plotting module
2011-11-22 14:50:12+04:00;1;16c9e60f679e12c1713ba338db685e6f42730efb;Fixed following PEP8 in parts of the pyglet plotting module
2011-11-22 14:50:12+04:00;1;16c9e60f679e12c1713ba338db685e6f42730efb;Fixed following PEP8 in parts of the pyglet plotting module
2011-11-22 14:50:12+04:00;1;16c9e60f679e12c1713ba338db685e6f42730efb;Fixed following PEP8 in parts of the pyglet plotting module
2011-11-22 12:21:44-08:00;1;00924d79186ea50cc978cc7a3d5120db056b9d99;"Merge pull request #735 from sagod/pyglet_plotting_modules_pep8

Fixed following PEP8 in parts of the pyglet plotting module"
2011-11-22 12:21:44-08:00;1;00924d79186ea50cc978cc7a3d5120db056b9d99;"Merge pull request #735 from sagod/pyglet_plotting_modules_pep8

Fixed following PEP8 in parts of the pyglet plotting module"
2011-11-22 12:21:44-08:00;1;00924d79186ea50cc978cc7a3d5120db056b9d99;"Merge pull request #735 from sagod/pyglet_plotting_modules_pep8

Fixed following PEP8 in parts of the pyglet plotting module"
2011-11-22 12:21:44-08:00;1;00924d79186ea50cc978cc7a3d5120db056b9d99;"Merge pull request #735 from sagod/pyglet_plotting_modules_pep8

Fixed following PEP8 in parts of the pyglet plotting module"
2011-11-24 17:19:39+05:27;1;f3671582811bac5cf92dfdb784afd80613b1a769;"added equals method to expr

>>> x**2-1
x**2 - 1
>>> _.equals((x+1)*(x-1))
True
>>> (cos(x)**2+sin(x)**2).equals(1)
True
>>> (a*cos(x)**2+a*sin(x)**2).equals(a)
True"
2011-11-25 21:25:30-05:00;1;384216c8845a9cd776a659337eb6953eb8a5bc7f;Merge branch 'master' of git://github.com/sympy/sympy
2011-11-25 21:25:30-05:00;1;384216c8845a9cd776a659337eb6953eb8a5bc7f;Merge branch 'master' of git://github.com/sympy/sympy
2011-11-25 21:25:30-05:00;1;384216c8845a9cd776a659337eb6953eb8a5bc7f;Merge branch 'master' of git://github.com/sympy/sympy
2011-11-25 21:25:30-05:00;1;384216c8845a9cd776a659337eb6953eb8a5bc7f;Merge branch 'master' of git://github.com/sympy/sympy
2011-11-28 04:48:10-08:00;1;52e46591b198c040fe89352de3fadc6d4edf2ad4;"Merge pull request #725 from smichr/units

find_unit added to units and examples given in module docstring"
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-11-28 19:23:34+02:00;1;0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69;Now there aren't bare except: and it is explicit what exception is thrown
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-12-01 15:56:15+05:27;1;c4990b782c5a258f238fca7fbf0004f109240e65;"Revert ""Now there aren't bare except: and it is explicit what exception is thrown""

This reverts commit 0d455ca6eb2ec5eb3787d9aa9065f0ac21338a69."
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-11-28 19:23:34+02:00;1;5bb680c7579d1561a1f539a73bfb1d66bae86d93;"Now there aren't bare except: and it is explicit what exception is thrown

    The permissions of two files were changed and in order to undo that change
    I reverted the commit and recommitted them after changing the permissions.

    Apparently there is a setting that can be made so changes to permissions
    are ignored: git config core.filemode false

    [http://stackoverflow.com/questions/1580596/
     how-do-i-make-git-ignore-mode-changes-chmod]

    Using Mingw32 I was unable to get the permissions to change with chmod;
    using the command line I was able to use os.chmod from python to make
    the change. (This all happening under Windows.)"
2011-12-04 10:09:34-05:00;1;7137e6aae7613439951e8224c41d60db80fbc0ae;Moved CONSERVE_MPMATH_DPS decorator and added to tests where needed
2011-12-05 15:09:20-08:00;1;2c445cf8c72ffa0ea86d5c9df12ba7bb6fbff5c3;"Merge pull request #816 from trishume/master

Cleaned up test_lambdify.py and others."
2011-10-26 10:38:53-07:00;1;b222b06a57647c66c8f786dd8854e0ec187d9e84;Extracted __{get,set}state__ into PicklableWithSlots
2011-12-12 23:49:20-08:00;1;87b9d4c35feb91becb727f7993f9b15db3f53c32;"Merge pull request #684 from mattpap/pickling

Fixed pickling of Poly"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-12-18 23:10:46-05:00;1;45f90b73cf398b8c79e19703f8eb4700e4be51b9;"Merge branch 'master' of git://github.com/sympy/sympy

Conflicts:
	AUTHORS

Added missing people"
2011-06-16 12:11:00+01:00;2;968985a9e6bc784d35aa83304c397a0299c92f8c;"Start integral transforms code: Mellin Transforms.

doc/src/modules/integrals.txt: Include docs for mellin_transform.
sympy/integrals/__init__.py: Import mellin_transform.
sympy/integrals/tests/test_transforms.py: New test file.
sympy/integrals/transforms.py: New file."
2011-09-06 13:33:09+01:00;1;1d137d2a8774ed40d44d28b01913e47d20447f8e;"Incorporate _solve_inequality into solve.

_solve_inequality is a very simple solver for linear inequalities
in several variables.

Extract it from transforms.py and move it to solvers/inequalities.py.
Use it in reduce_inequalities.
Add tests.
Also import _solve_inequality in transforms.py again."
2011-12-23 04:47:04-08:00;2;9f5dbf4630121ccc6f4d8a848620d0b10760b660;"Merge pull request #504 from ness01/gsoc-2

Gsoc 2"
2011-12-23 04:47:04-08:00;1;9f5dbf4630121ccc6f4d8a848620d0b10760b660;"Merge pull request #504 from ness01/gsoc-2

Gsoc 2"
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;2;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;2;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-10 20:16:49-08:00;1;0278b9b00da9b316afffaa2f910f27b321797e9d;Merge branch 'master' of git://github.com/sympy/sympy
2012-01-17 13:23:48+01:00;1;f3f21242405862d842724129883071a2f59c03b2;added _sqrtdenest_rec to denest the square root of more than 4 surds
2012-01-26 02:25:00+05:27;1;830637b9dafa1336b0acf40454c0ba1c63b743bb;"round() added to miscellaneous functions; Float mods

    Float doesn't allow prec > 15 for inexact floats.

        Unless a float is binary-exact (denominator a power of 2) it cannot
        be requested to have more than 15 digits of precision. A user-friendly
        error message results if the attempt is made.

        For floats with less than 16 significant digits, there is no need
        to enter them as strings since the Float value will be exact to
        15 digits. And creating floats to more precision than 15 is disallowed
        unless the float is an exact float. So the user that wants a high
        precision float should enter it as a string with the necessary digits
        or as a short string with the precision. The latter will be shorter:

        Float('.100 000 000 000 000 0') vs
        Float('.1', 16) or Float(Float('.1'), 16)

        (Spaces are now allowed in the strings sent to Float, too.) Having
        to enter the precision acts as a check on the digits entered. To
        have all significant figures be counted automatically, send the
        null string ('') for the precision.

    Float normalizes in _new

        All Floats that are created should have the correct normalization
        for the given precision, but sometimes this is not True. So a
        renormalization should not be necessary in __eq__; but it did
        need to be made in Float._new and needs to be made in some other
        routines (which are part of the next commit).

        For example, in Float._as_mpf_val if self._prec == prec this
        normalization should not be necessary, but there are some
        values being generated in solve (via polys) that come back
        and do not pass the test that self._mpf_ is the same as
        the normalized mpf -- even though the precisions were the
        same. The test that produces such numbers is the one testing
        issue 2236; here is an example of discrepant mpfs:

        orig = (0, 93132257461547851L, 30, 57)
        >>> 93132257461547851L*2**30
        99999999999999999396020224L
        norm = (0, 5820766091346741L, 34, 53)
        >>> 5820766091346741L*2**34
        100000000000000004764729344L

    A work-around for mpmath is included: if mpmath sees a
    tuple with 0 mantissa it assumes the number is 0 but it
    may not be (e.g. inf has a large negative mantissa).

    The round function, like Python's own, always returns a Float.

    evalf.txt and gotchas.txt have been updated to reflect
    changes."
2011-07-18 11:34:34-05:00;1;c14edd3706fbe34500aa7bfc416ec906ccb9b621;"Removed dict comprehensions. Fixed errors from FiniteSet changes

Removed dict comprehensions to maintain compatability pre-2.7"
2012-02-03 17:52:13-08:00;1;fb9bf7794b880391c6809848d4fbe925331594da;"Merge pull request #998 from smichr/round

Round function added; note in Gotcha about Float calcs; Float(Float) modification"
2012-02-04 04:46:41-08:00;1;aecfa09953c45344dd9cbf5722350854051c4561;"Merge pull request #983 from pernici/radsimp

radsimp rationalizes denominators with arbitrary number of terms"
2012-02-06 01:17:59-08:00;1;af94f4672df2bd267911f6414d2176c8cd75d142;"Merge pull request #902 from mrocklin/rv2

Random Variables"
2012-02-06 22:09:47+01:00;1;73da8345291dae096ad20b5e34dc4253dfb2f80e;"Merge branch 'master' into sphinx-docs

Conflicts:
	sympy/physics/quantum/state.py
	sympy/simplify/sqrtdenest.py

Also fix two trivial Sphinx warnings in gotchas.txt, which got
introduced in the meanwhile."
2012-02-06 22:09:47+01:00;1;73da8345291dae096ad20b5e34dc4253dfb2f80e;"Merge branch 'master' into sphinx-docs

Conflicts:
	sympy/physics/quantum/state.py
	sympy/simplify/sqrtdenest.py

Also fix two trivial Sphinx warnings in gotchas.txt, which got
introduced in the meanwhile."
2012-02-06 22:09:47+01:00;1;73da8345291dae096ad20b5e34dc4253dfb2f80e;"Merge branch 'master' into sphinx-docs

Conflicts:
	sympy/physics/quantum/state.py
	sympy/simplify/sqrtdenest.py

Also fix two trivial Sphinx warnings in gotchas.txt, which got
introduced in the meanwhile."
2012-02-08 15:15:16+05:27;1;cb3bf49a962925aa9aa4347a06b1669793ae6828;"_int_ methods upgraded; round takes care of last digit better

sympy/core/expr.py

    o add __int__ to expr and raise ValueError if the results might
      be wrong. Since python can represent arbitrarily large ints,
      we can do the translation exactly from sympy expression to int
      via Integer (rather than float which keeps only about 17 digits).

      A result is ambiguous if an expression which is not known to be
      an integer, rounds to a non-zero integer. There is no way (that
      I know of) to chase down the first non-zero decimal digit so the
      burden is placed on the user to pass the expression evaluated
      to the desired number of digits.

    o make __float__ raise a TypeError if the wrong type of input
      was received. This is similar to what is received from Python:

          >>> float(3+4j)
          ...
          TypeError: can't convert complex to float

    o with changes of __float__'s ValueError, __complex__ needs to
     catch TypeError, not ValueError

sympy/core/numbers.py

    o Rational.__int__ does not use float to do the conversion from
      sympy to python as this loses precision:

        >>> big
        12345678901234567890
        >>> big//7
        1763668414462081127
        >>> int(float(Rational(big, 7))) # previous master
        1763668414462081024L
        >>> int(Rational(big, 7)) # now
        1763668414462081127L

    o Integer - add not about using int to process input

    o NumberSymbol - make __int__ a stub and subclass with the
      exact integer output (that doesn't have to depend on evalf).
      Note that evalf(0) only should give the magnitude of the number,
      not the integer value of an expression - evalf uses significant
      digits whereas round uses decimal places. (So it would have been
      appropriate to use round(self) but not self.evalf(0).)

sympy/functions/elementary/miscellaneous.py

    o round() (like evalf) now takes care not to return results to a
      precision higher than the most precise Float in the expression.
      No calculation is done -- this is just a pragmatic limit.

    o it is possible that a value greater than float's limit is
      being calculated, so an attempt to use math's functions is used
      and then a fallback to sympy functions if this fails.

    o there is better handling of the last digit; tests were added for
      this

All lines modified or added are covered with existing tests and those
added in

    sympy/core/tests/test_arit.py
    sympy/functions/elementary/miscellaneous.py
    sympy/core/tests/test_numbers.py

        Added an XFAIL test for issue 3046"
2012-02-12 03:30:42-08:00;1;61b1cccdff1cc7a7c03ec1379cfe232803866858;"Merge pull request #1034 from smichr/2105b

_int_ methods upgraded; round takes care of last digit better"
2012-02-13 16:34:58-08:00;1;781cac4827bd98dc0761ef43246111df7fb4ef1c;Merge remote-tracking branch 'upstream/master'
2012-02-13 16:34:58-08:00;1;781cac4827bd98dc0761ef43246111df7fb4ef1c;Merge remote-tracking branch 'upstream/master'
2012-02-13 16:34:58-08:00;1;781cac4827bd98dc0761ef43246111df7fb4ef1c;Merge remote-tracking branch 'upstream/master'
2012-02-13 16:34:58-08:00;1;781cac4827bd98dc0761ef43246111df7fb4ef1c;Merge remote-tracking branch 'upstream/master'
2012-02-17 08:30:38-08:00;1;4444058ca046893ad928125d239754691aea9f9e;Merge branch 'master' of https://github.com/sympy/sympy into test-examples
2012-02-17 08:30:38-08:00;1;4444058ca046893ad928125d239754691aea9f9e;Merge branch 'master' of https://github.com/sympy/sympy into test-examples
2012-02-17 08:30:38-08:00;1;4444058ca046893ad928125d239754691aea9f9e;Merge branch 'master' of https://github.com/sympy/sympy into test-examples
2012-02-17 08:30:38-08:00;1;4444058ca046893ad928125d239754691aea9f9e;Merge branch 'master' of https://github.com/sympy/sympy into test-examples
2012-02-18 21:08:46-06:00;1;208d9314103b0d3ebc9714d5bc76c754d30478f6;numpy ndarray to classof, gaussopt added __new__
2012-02-19 09:23:59-06:00;2;a95b50c8e10ae3794eb65b70352546c7d3b332a8;fixed classof. added _class_priority. gaussopt works
2012-02-22 11:19:16-08:00;2;0c77858342b7cadbb406c955ba19cb90c1a8d499;"Merge pull request #1015 from mrocklin/immutable_matrix_matexpr

ImmutableMatrix"
2012-02-25 13:09:06+01:00;1;ad2203ef2d63b9e0e04091735740b8641bee4bc2;"Merge branch 'master' into sphinx-docs

Conflicts:
	sympy/geometry/point.py
	sympy/matrices/matrices.py"
2012-02-25 13:09:06+01:00;2;ad2203ef2d63b9e0e04091735740b8641bee4bc2;"Merge branch 'master' into sphinx-docs

Conflicts:
	sympy/geometry/point.py
	sympy/matrices/matrices.py"
2012-01-11 16:34:36+05:27;1;849af4c2f0200d4a55ac3df50cf0448ff959d0fc;"let equivalent new/old subs pass; use better test for self==old"
2012-03-16 21:21:00-07:00;1;ca9d625feca1c87b70283a209cbc2be64568eadb;"Merge pull request #690 from smichr/xsub

subs cleanup"
2012-03-23 13:06:43-07:00;1;724b8963e2079b0f915896f49b83c81611a65418;fixed sort_fn to allow non-sympifyable elements
2012-03-25 12:43:48-07:00;1;bb8d7b24f2e5127d3e2dff0dd1dda75bdc2df9d4;"Merge pull request #1164 from mrocklin/clean-sets

Clean sets - Union simplification"
2012-03-25 18:22:47-07:00;1;53f25ea6f61aaeb41fcce63ee12b57564a806fb1;Merge branch 'master' of git://github.com/sympy/sympy
2012-03-25 18:22:47-07:00;1;53f25ea6f61aaeb41fcce63ee12b57564a806fb1;Merge branch 'master' of git://github.com/sympy/sympy
2012-03-25 18:22:47-07:00;2;53f25ea6f61aaeb41fcce63ee12b57564a806fb1;Merge branch 'master' of git://github.com/sympy/sympy
2012-03-29 16:54:46+02:00;1;86dc069e6cf8825ba64cdb78f5e416a8e1092bdb;"Merge branch 'master' into 'french-tutorial'

Conflicts:
	bin/use2to3"
2012-03-29 16:54:46+02:00;1;86dc069e6cf8825ba64cdb78f5e416a8e1092bdb;"Merge branch 'master' into 'french-tutorial'

Conflicts:
	bin/use2to3"
2012-04-04 20:06:53+02:00;1;4903deb8f275a21688db952376658f144b30cdc9;Fixed isympy -a and added a test (#3048)
2012-04-05 23:15:45-07:00;1;85c3335344c0257d122496830b24373e6b0aae87;"Merge pull request #1205 from mattpap/issue3048

Fixed isympy -a and added a test (#3048)"
2012-04-19 00:40:41+02:00;1;f80b0292cf62ec584d89ff26982b509b6d3e697f;"Merge branch 'master' into issue-2867-lambdify-raises

Conflicts:
	sympy/core/tests/test_evalf.py
	sympy/core/tests/test_numbers.py
	sympy/geometry/tests/test_geometry.py
	sympy/ntheory/tests/test_ntheory.py
	sympy/series/tests/test_limits.py
	sympy/stats/tests/test_continuous_rv.py
	sympy/stats/tests/test_rv.py"
2012-03-15 17:40:06+00:00;1;2a515b4b71e6585065035e88611669fda25dbf00;"Don't use cycle detection in _what_known_about()

Infinite recursion is now prevented by temporarily setting the value
of the ""fact"" being evaluated to None, so that recursive calls for
the same fact return None immediately. This value is overwritten if an
actual result is obtained.

The CycleDetected exception and the _a_in_progress attribute can thus
be removed."
2012-03-21 05:52:56+00:00;1;c9df55b9bd05f502cfa853153baf168c0bbc01cc;"Move PicklableWithSlots to polyutils

PicklableWithSlots is now only used in sympy.polys."
2012-03-14 04:32:51+00:00;2;df3e7e13308d80d867b928201a8b1b79c843a29a;"Cache the lookup of evaluation functions in PropertyManager.evaluator

This avoids a getattr call at runtime."
2012-05-07 02:58:40+01:00;1;1dae6668858c36e879ad7cb3565848e0aa2f7504;"Store property evaluator map in the class

make_property() and _ask() don't need to refer to
PropertyManager any more."
2012-05-06 22:11:18-07:00;2;25904b8eb3b80af8e9c20134932e0e141e437902;"Merge pull request #1162 from rlamy/new-core

Refactoring the old assumptions"
2012-05-06 22:11:18-07:00;1;25904b8eb3b80af8e9c20134932e0e141e437902;"Merge pull request #1162 from rlamy/new-core

Refactoring the old assumptions"
2012-05-09 07:47:51+02:00;2;bb3bd7d4d7e20c5b1fd45b4a65cf8dfdcae5fbbd;"Merge branch 'master' into issue-2867-lambdify-raises

Conflicts:
	sympy/core/tests/test_assumptions.py
	sympy/core/tests/test_facts.py
	sympy/core/tests/test_logic.py
	sympy/matrices/expressions/tests/test_indexing.py"
2012-05-09 07:47:51+02:00;1;bb3bd7d4d7e20c5b1fd45b4a65cf8dfdcae5fbbd;"Merge branch 'master' into issue-2867-lambdify-raises

Conflicts:
	sympy/core/tests/test_assumptions.py
	sympy/core/tests/test_facts.py
	sympy/core/tests/test_logic.py
	sympy/matrices/expressions/tests/test_indexing.py"
2012-05-15 21:57:44-05:00;2;0830d8470b30cd41c832c05882e9ba51f9ec6773;"Merge branch 'master' into quantum_printing

Conflicts:
	sympy/physics/quantum/spin.py"
2012-05-15 21:57:44-05:00;1;0830d8470b30cd41c832c05882e9ba51f9ec6773;"Merge branch 'master' into quantum_printing

Conflicts:
	sympy/physics/quantum/spin.py"
2012-05-19 20:43:04+05:27;1;102dee90c2151a324799caaeb8d6ff51bf5b3307;multiplicity: raise error if base is 1
2012-05-19 19:43:16-07:00;1;ad44544911bb98d5752f44ab975be225ec612d0c;"Merge pull request #1303 from raoulb/log_base_one

Fix log(x, b) with base b == 1"
2012-05-20 09:33:28+02:00;1;59e0af794a149364c237dfdcb3552ebcda7fe82b;"Merge branch 'master' into issue-2867-lambdify-raises

Conflicts:
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_relational.py"
2012-05-23 19:58:01+02:00;2;b7990058819903f648fdf3d7b3a7da98172652bf;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/core/assumptions.py
	sympy/functions/__init__.py
	sympy/physics/quantum/anticommutator.py
	sympy/physics/quantum/commutator.py
	sympy/physics/quantum/dagger.py
	sympy/physics/quantum/innerproduct.py
	sympy/physics/quantum/operator.py
	sympy/physics/quantum/qexpr.py
	sympy/physics/quantum/qft.py
	sympy/physics/quantum/tensorproduct.py
	sympy/physics/quantum/tests/test_spin.py"
2012-05-23 19:58:01+02:00;1;b7990058819903f648fdf3d7b3a7da98172652bf;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/core/assumptions.py
	sympy/functions/__init__.py
	sympy/physics/quantum/anticommutator.py
	sympy/physics/quantum/commutator.py
	sympy/physics/quantum/dagger.py
	sympy/physics/quantum/innerproduct.py
	sympy/physics/quantum/operator.py
	sympy/physics/quantum/qexpr.py
	sympy/physics/quantum/qft.py
	sympy/physics/quantum/tensorproduct.py
	sympy/physics/quantum/tests/test_spin.py"
2012-05-23 19:58:01+02:00;1;b7990058819903f648fdf3d7b3a7da98172652bf;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/core/assumptions.py
	sympy/functions/__init__.py
	sympy/physics/quantum/anticommutator.py
	sympy/physics/quantum/commutator.py
	sympy/physics/quantum/dagger.py
	sympy/physics/quantum/innerproduct.py
	sympy/physics/quantum/operator.py
	sympy/physics/quantum/qexpr.py
	sympy/physics/quantum/qft.py
	sympy/physics/quantum/tensorproduct.py
	sympy/physics/quantum/tests/test_spin.py"
2012-05-23 20:07:54-07:00;2;089203be9fd5ccc9c5d40cf765767a53f2b75db1;Merge branch 'master' of git://github.com/sympy/sympy
2012-05-23 20:07:54-07:00;1;089203be9fd5ccc9c5d40cf765767a53f2b75db1;Merge branch 'master' of git://github.com/sympy/sympy
2012-05-23 20:07:54-07:00;1;089203be9fd5ccc9c5d40cf765767a53f2b75db1;Merge branch 'master' of git://github.com/sympy/sympy
2012-05-23 20:07:54-07:00;1;089203be9fd5ccc9c5d40cf765767a53f2b75db1;Merge branch 'master' of git://github.com/sympy/sympy
2012-04-03 10:14:35+01:00;1;7b989658292906b37b0a8c17879c77b619a69ceb;"[polys] ""beef up"" DMP and DMF.

Specifically, make both of these classes optionally carry references to their
containing ring. Use this for pretty printing, and for unification.
Also add implicit conversion in __add__ etc methods, to allow short-hand
expressions like QQ[x].convert(x) + y.

Also fix PolynomialRing and
FrationcField comparison methods, and make sure they create DMP/DMF instances
with a containing ring reference.

Note that functionality tests are added in the (later) commit which implements
generalized polynomial rings."
2012-04-03 10:14:35+01:00;1;7b989658292906b37b0a8c17879c77b619a69ceb;"[polys] ""beef up"" DMP and DMF.

Specifically, make both of these classes optionally carry references to their
containing ring. Use this for pretty printing, and for unification.
Also add implicit conversion in __add__ etc methods, to allow short-hand
expressions like QQ[x].convert(x) + y.

Also fix PolynomialRing and
FrationcField comparison methods, and make sure they create DMP/DMF instances
with a containing ring reference.

Note that functionality tests are added in the (later) commit which implements
generalized polynomial rings."
2012-04-03 10:14:35+01:00;1;7b989658292906b37b0a8c17879c77b619a69ceb;"[polys] ""beef up"" DMP and DMF.

Specifically, make both of these classes optionally carry references to their
containing ring. Use this for pretty printing, and for unification.
Also add implicit conversion in __add__ etc methods, to allow short-hand
expressions like QQ[x].convert(x) + y.

Also fix PolynomialRing and
FrationcField comparison methods, and make sure they create DMP/DMF instances
with a containing ring reference.

Note that functionality tests are added in the (later) commit which implements
generalized polynomial rings."
2012-05-25 01:41:46-07:00;1;92d8dad170ea1db42f4a66b4773a7d67eb6f0a66;"Merge pull request #1199 from ness01/agca2b

Generalized polynomial rings"
2012-05-25 01:41:46-07:00;1;92d8dad170ea1db42f4a66b4773a7d67eb6f0a66;"Merge pull request #1199 from ness01/agca2b

Generalized polynomial rings"
2012-05-25 01:41:46-07:00;1;92d8dad170ea1db42f4a66b4773a7d67eb6f0a66;"Merge pull request #1199 from ness01/agca2b

Generalized polynomial rings"
2012-05-26 09:37:16-07:00;1;5f6e3e57beb64c3a561e18579607e00d36ecfc26;Merge branch 'master' of git://github.com/sympy/sympy
2012-05-26 09:37:16-07:00;1;5f6e3e57beb64c3a561e18579607e00d36ecfc26;Merge branch 'master' of git://github.com/sympy/sympy
2012-05-26 09:37:16-07:00;1;5f6e3e57beb64c3a561e18579607e00d36ecfc26;Merge branch 'master' of git://github.com/sympy/sympy
2012-06-01 23:18:45-06:00;2;ee2c18e6df5dc5c8a3bd7b2a9efe4fa4cc5cd5c1;"Merge branch 'master' into abs_heaviside

Conflicts:
	sympy/functions/elementary/tests/test_complexes.py"
2012-06-01 23:18:45-06:00;1;ee2c18e6df5dc5c8a3bd7b2a9efe4fa4cc5cd5c1;"Merge branch 'master' into abs_heaviside

Conflicts:
	sympy/functions/elementary/tests/test_complexes.py"
2012-06-01 23:18:45-06:00;1;ee2c18e6df5dc5c8a3bd7b2a9efe4fa4cc5cd5c1;"Merge branch 'master' into abs_heaviside

Conflicts:
	sympy/functions/elementary/tests/test_complexes.py"
2012-06-01 23:18:45-06:00;1;ee2c18e6df5dc5c8a3bd7b2a9efe4fa4cc5cd5c1;"Merge branch 'master' into abs_heaviside

Conflicts:
	sympy/functions/elementary/tests/test_complexes.py"
2012-06-01 23:18:45-06:00;1;ee2c18e6df5dc5c8a3bd7b2a9efe4fa4cc5cd5c1;"Merge branch 'master' into abs_heaviside

Conflicts:
	sympy/functions/elementary/tests/test_complexes.py"
2012-06-01 23:18:45-06:00;1;ee2c18e6df5dc5c8a3bd7b2a9efe4fa4cc5cd5c1;"Merge branch 'master' into abs_heaviside

Conflicts:
	sympy/functions/elementary/tests/test_complexes.py"
2011-11-15 21:13:00+01:00;1;c009df62bbd2d786ef376ae785708a4ceebdec24;"Finishing touches in the new plotting module.

There are probably still many bugs, but the module should be ready for
review after this commit.

- Finishing the plot function.
   Now the plot function gives a great flexibility in how one
can define a plot. Multiple cartesian or parametric plots are supported.

- Fixing imports.

- Minor fixes to plotting/experimental_lambdify.py
 The sqrt function was not translated to the numpy sqrt. Now it is.
before the commit sqrt(x) -> sqrt(x).evalf()
after the commit sqrt(x) -> np.sqrt(x)
 Also experimental_lambdify now supports the print_lambda argument.
When true the function will print the lambda expression to the terminal
before creating the actual lambda function.

- Many other clean-ups and bug fixes."
2012-05-04 16:51:09+02:00;1;c836e05e44a1a18a8f7bc29afe5793ba8ed8f48b;"Refactoring and new tests for the plotting module.

A number of regressions were fixed.

There are now tests and doctest, that check for correct instantialization and
saving to disk of figures. It checks only the `plot()` function.

The `Plot()` class was simplified, as it was trying to be too many things at the
same time.

The `Series()` class was simplified for the same reason and it is now named
`OverloadedSeriesFactory()`.

Most of the docstrings were updated, however there is still much to be wanted
from the documentation of the module."
2012-06-12 11:14:33+02:00;1;ed712660d009a0f10e69f398f0cd1728b6bb7048;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/physics/quantum/dagger.py"
2012-06-12 11:14:33+02:00;1;ed712660d009a0f10e69f398f0cd1728b6bb7048;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/physics/quantum/dagger.py"
2012-06-12 11:14:33+02:00;1;ed712660d009a0f10e69f398f0cd1728b6bb7048;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/physics/quantum/dagger.py"
2012-06-12 11:14:33+02:00;1;ed712660d009a0f10e69f398f0cd1728b6bb7048;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/physics/quantum/dagger.py"
2012-06-16 00:19:05-07:00;1;ea4b9c593be545b2e38a417494abb83840b60d72;"Merge pull request #1331 from smichr/has2

refactor has"
2012-06-22 05:59:04-06:00;1;d06016cd4e020910a2fe20c7be03bf07a0a91f9e;Merge branch 'master' into abs_heaviside
2012-06-22 05:59:04-06:00;1;d06016cd4e020910a2fe20c7be03bf07a0a91f9e;Merge branch 'master' into abs_heaviside
2012-06-21 16:48:39+02:00;1;d9701fbe09dde4e31b9043b79b3933d0ff9689d4;"Handle interval evaluation with symbolic bounds in Piecewise.

In [1]: p = Piecewise( (0, x<0), (x, x<=1), (1, True)); p
Out[1]:
/0  for x < 0
|
<x  for x <= 1
|
\1  otherwise

In [2]: integrate(p, (x, -5, 1))
Out[2]: 1/2

In [3]: integrate(p, (x, -5, z))
Out[3]:
/   0     for z < 0
|
|   2
|  z
<  --     for z <= 1
|  2
|
|z - 1/2  otherwise
\

In [4]: _.subs(z, 1)
Out[4]: 1/2"
2012-04-04 22:16:17+01:00;1;c039be57d8dd589bf4037d6b9c338fd9bef0f1bc;"[polys/agca] Start agca module.

Specifically: implement boilerplate classes Module, FreeModule, ModuleElement,
FreeModuleElement.

Adapt polyclasses to cooperate in module element multiplication."
2012-04-06 21:47:21+01:00;1;d0a28ae603e28d72db2006da9a0a69cbcc7f33e4;"[polys] Fix polyclasses arithmetic operators.

This was started in the last commit but not done completely."
2012-06-29 01:28:38-07:00;1;f1dfd51390a83b763535481c5df47ef60793bf69;"Merge pull request #1351 from ness01/agca8

AGCA - start of the algebraic geometry and commutative algebra module"
2012-06-30 18:25:52-07:00;1;3142f1ff604e9c2bdb740d70f6ea2e1dd6214e95;"Merge pull request #1376 from jrioux/piecewise

Implement integral of Piecewise with symbolic bounds."
2012-07-03 09:43:12+02:00;1;e00edb7a42bb730ad99d23943a807aecc2641e8a;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/matrices/__init__.py
	sympy/matrices/expressions/__init__.py"
2012-07-03 09:43:12+02:00;1;e00edb7a42bb730ad99d23943a807aecc2641e8a;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/matrices/__init__.py
	sympy/matrices/expressions/__init__.py"
2012-07-03 09:43:12+02:00;1;e00edb7a42bb730ad99d23943a807aecc2641e8a;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/matrices/__init__.py
	sympy/matrices/expressions/__init__.py"
2012-07-03 10:07:33+02:00;2;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-03 10:07:33+02:00;1;1ac1bf0bdbbe68edf86e3253a3750b8f6f940262;Merge branch 'master' into french-tutorial
2012-07-16 12:49:39+02:00;1;47090a61df2c2e45eca60ec2fa736503871b7e12;"Merge branch 'master' into vector_analysis_4

Conflicts:
	sympy/printing/latex.py
	sympy/printing/pretty/pretty.py"
2012-07-16 12:49:39+02:00;1;47090a61df2c2e45eca60ec2fa736503871b7e12;"Merge branch 'master' into vector_analysis_4

Conflicts:
	sympy/printing/latex.py
	sympy/printing/pretty/pretty.py"
2012-08-03 21:42:36-07:00;1;aefc67a0c7028c282bee14520c7110d33d88b052;"Merge pull request #1458 from smichr/sortkey

Set.sort_key, default_sort_key edits"
2012-08-07 20:46:38+02:00;1;85a2286ece773809b98f7fa1ec650d0bcabe9ddf;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/core/add.py
	sympy/core/power.py
	sympy/matrices/expressions/blockmatrix.py
	sympy/matrices/expressions/matexpr.py
	sympy/matrices/expressions/transpose.py
	sympy/matrices/immutable_matrix.py"
2012-08-07 22:08:07+02:00;1;728107ee09bf97b80002f366eb7fdfc57817000e;Merge branch 'master' into french-tutorial
2012-08-07 16:07:30-06:00;1;a4ebdab8978e083cf69d440e7421a725c38a0c02;"Add -i, --int-to-Integer option to isympy

This makes isympy automatically wrap integer literals with Integer.  The
result is that things like 1/2 are computed as Rational(1, 2) instead of 0.5.
For example:

$./bin/isympy -i
IPython console for SymPy 0.7.1-git (Python 2.7.3-64-bit) (ground types:
python)

These commands were executed:
>>> from __future__ import division
>>> from sympy import *
>>> x, y, z, t = symbols('x y z t')
>>> k, m, n = symbols('k m n', integer=True)
>>> f, g, h = symbols('f g h', cls=Function)

Documentation can be found at http://www.sympy.org

In [1]: 1/2
Out[1]: 1/2

In [2]: x**(1/2)
Out[2]:
    ___
  ╲╱ x

You can still get a int literal by wrapping the integer with int()

In [3]: int(1)/int(2)
Out[3]: 0.5

Note that this requires IPython.

Also added -I, --interactive, which combines this option with -a,
--auto-symbols (which has been renamed from --auto).  Additional such
interactive modifications should be included in this command line argument.

Note that this had to be done by monkey-patching IPython's run_cell. IPython's
current API for preprocessing lines is not expressive enough to handle
this--in particular, it does not allow modifying multiple line inputs.  See
http://mail.scipy.org/pipermail/ipython-user/2012-August/010846.html and
https://github.com/ipython/ipython/issues/1491 for more information.

Thanks to http://stackoverflow.com/a/11735604/161801 for suggesting the
tokenize method of doing this.

This fixes issue 3182."
2012-08-10 10:42:10-07:00;1;08617edfd73aae175dae495ef260619d82d025ee;"Merge pull request #1470 from asmeurer/autorat

Autorat"
2012-08-10 14:20:22-06:00;2;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-10 14:20:22-06:00;1;1a1f02460f9ed5901e0c3867005b61646a4ee8a3;"Merge branch 'master' into isympy-a_no_globals

Conflicts:
	bin/isympy"
2012-08-11 12:33:21+02:00;1;faaee0900fa2d1eef138791adce0235ef8f3a05b;"Merge branch 'master' into Hermitian

Conflicts:
	sympy/matrices/__init__.py
	sympy/matrices/expressions/__init__.py
	sympy/matrices/expressions/blockmatrix.py
	sympy/matrices/immutable_matrix.py"
2012-08-15 11:20:36+02:00;2;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;2;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;2;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;2;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-15 11:20:36+02:00;1;8322e0dc6f1f62b19fe6ac937bd93d50b0cd4e51;Merge branch 'master' into translation
2012-08-18 12:06:49+05:18;1;fea066c0ac294584f82d7dfadc308882d0ef0dd3;Check ipython > 0.11 and matplotlib is installed for pylab.
2012-08-21 11:17:37-07:00;1;30bb26baf434d4a0fa69a86e96246b5e131f1040;"Merge pull request #1489 from catchmrbharath/ipython_new

--pylab option added to isympy session."
2012-08-22 15:20:56-06:00;1;9727b847523045c6f82e31b5c03003ae44009fce;Catch all exceptions when trying to enable pylab
2012-08-25 12:21:24-07:00;1;de89b32c76ebf27b1e105e12e4bee8856436d851;"Merge pull request #1506 from asmeurer/pylab

Catch all exceptions when trying to enable pylab"
2012-08-25 13:21:33-06:00;1;be028819ab7c9c3d5c0b9fd40b7317bfe96f4c72;Merge branch 'pylab' into 0.7.2
2012-09-13 19:22:18-06:00;3;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;3;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;2;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;1;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-09-13 19:22:18-06:00;3;5eacfa891bbe47b56d79da44d4a0787786419fd6;"Merge branch 'master' into integration3

This doesn't fix any of the errors that come up as a result of the merge,
except those that were specifically related to the merge, and those that
prevented sympy from importing.  Fixes will come in upcoming commits.

Conflicts:
	bin/coverage_doctest.py
	sympy/core/tests/test_expr.py
	sympy/core/tests/test_subs.py
	sympy/functions/elementary/exponential.py
	sympy/integrals/__init__.py
	sympy/integrals/integrals.py
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_rationaltools.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/polys/domains/expressiondomain.py
	sympy/polys/domains/realdomain.py
	sympy/polys/euclidtools.py
	sympy/polys/polyclasses.py
	sympy/polys/polyfuncs.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py"
2012-10-02 18:35:47-05:00;1;c185566003b116bc59c8fe6c9bb910b291d982a0;Copy sympyprinting.py from IPython
2012-10-03 00:33:17-05:00;1;955b78ebc0d0f8689aa9e2651a47cd6a5c183a6c;"Move sympyprinting logic to sympy.interactive

Move the logic used in the sympyprinting IPython extension into the
sympy.interactive module."
2012-10-04 10:33:15-05:00;1;6a5b427ee60757d93a3842fb83892697bfdf9a9a;"Add latex rendering option to init_printing

Add options to control the rendering of latex in the qtconsole and
notebook when using init_printing or init_session to get pretty printing
in IPython."
2012-10-07 23:18:46-05:00;2;0081b605742229bdb62c902d474c98d1dd107bd8;"Change init_printing to detect when in ZMQ shell

When in a ZMQ shell, i.e. when in the Qt console or the notebook, set
the unicode and latex keywords to True if they were set as None (the
default value)."
2012-10-08 17:04:22-07:00;3;bb4083ac818fe0751186bb37ec749bfd60205dc4;"Merge pull request #1559 from flacjacket/sympyprinting_extension-0.7.2

Move sympyprinting extension from IPython to SymPy for 0.7.2"
2012-10-16 15:01:53+05:27;2;df8ec8cfff19d019d005efe7b00d83fc574b657e;autopep8/pep8 mods
2012-10-17 04:39:06-07:00;2;36c804809943af7b2f099cfca9b049e444954c5c;"Merge pull request #1567 from smichr/matrices

Matrices tweaks"
2012-10-19 21:02:30+05:27;3;f3b13644e1616bfca8eaf4c72dd3fcb80cb191bd;0.7.2/master resolutions 1
2012-10-18 14:54:20+05:27;1;69ce994e54de74c2d8a6460faddb70a626cc6e72;pep8 E261
2012-10-19 15:25:36-07:00;3;ef61493deef694f17f319a25f83f61bdfcca8732;"Merge pull request #1581 from smichr/072

0.7.2 merge with master"
2012-10-19 15:25:36-07:00;1;ef61493deef694f17f319a25f83f61bdfcca8732;"Merge pull request #1581 from smichr/072

0.7.2 merge with master"
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;3;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;3;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;5;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;3;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;7;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;7;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;4;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;6;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;3;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;4;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;4;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;7;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;5;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;3;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;2;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;1;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 21:12:01-07:00;3;5c5647f05a6b91297755f7d4b85581fd0c638ef8;Tring to merge my changes into effect's changes
2012-10-21 08:37:28-07:00;1;071cc8ed6795f93e1de9a7cde004c1dd0b428451;"ImmutableMatrix._eval_inverse comes from Dense

xxinv fails on non-invertible matrices gracefully"
2012-10-22 21:16:49-04:00;3;90b395d47006316b11142e523a7ca4e27556fd70;Merged tan_expand with latest version of master
2012-10-22 21:16:49-04:00;2;90b395d47006316b11142e523a7ca4e27556fd70;Merged tan_expand with latest version of master
2012-10-22 21:16:49-04:00;1;90b395d47006316b11142e523a7ca4e27556fd70;Merged tan_expand with latest version of master
2012-10-23 13:18:55-04:00;3;9802699dd1965a4578c602f1e9e9182408819431;merge euler_odes branch with latest version of master
2012-10-23 13:18:55-04:00;2;9802699dd1965a4578c602f1e9e9182408819431;merge euler_odes branch with latest version of master
2012-10-23 13:18:55-04:00;1;9802699dd1965a4578c602f1e9e9182408819431;merge euler_odes branch with latest version of master
2012-10-24 11:58:24-07:00;1;473c8565d77b0e2669128fbc2f8eb8ad35e791bd;"Merge pull request #1560 from mrocklin/rr

Introduce rewrite rules"
2012-10-22 09:19:29-07:00;1;77ead501527afe72f918b68428b6341e965561d3;simplify asks expr to simplify itself
2012-10-26 00:00:48+05:18;2;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;3;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;3;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;2;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;2;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-26 00:00:48+05:18;1;9a57cd26d292e417518a745ca2870a28d1c8d01b;"Merge branch 'master' of git://github.com/sympy/sympy into sachin1

Conflicts:
	sympy/assumptions/handlers/sets.py
	sympy/assumptions/tests/test_query.py"
2012-10-25 13:09:36-07:00;3;678f62a56d21d78c5ede0fe537f9f26b9f0f85b0;Merge branch 'master' into 694_wester_tests
2012-10-25 13:09:36-07:00;1;678f62a56d21d78c5ede0fe537f9f26b9f0f85b0;Merge branch 'master' into 694_wester_tests
2012-10-25 13:09:36-07:00;1;678f62a56d21d78c5ede0fe537f9f26b9f0f85b0;Merge branch 'master' into 694_wester_tests
2012-10-26 04:59:17-07:00;1;5823be26dd05bb4f62a44e4e6c774137a11f82a2;"Merge pull request #1598 from mrocklin/simplify

Simplify"
2012-10-25 08:12:21-07:00;2;a07997939cec0335f99fdeebf2c7da31bf167d6b;add Adjoint class for MatrixExprs
2012-10-26 15:43:31-07:00;1;88e09e1fac10df599dba2fb2df915e4c40b9362c;Merge branch 'master' into 694_wester_tests
2012-10-28 18:53:28+00:00;3;3c409022ddfa363453b97e5f9740b7226f0859f5;"Merge branch 'master' into integration3

Conflicts:
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/polys/euclidtools.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py"
2012-10-28 18:53:28+00:00;1;3c409022ddfa363453b97e5f9740b7226f0859f5;"Merge branch 'master' into integration3

Conflicts:
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/polys/euclidtools.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py"
2012-10-28 18:53:28+00:00;2;3c409022ddfa363453b97e5f9740b7226f0859f5;"Merge branch 'master' into integration3

Conflicts:
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/polys/euclidtools.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py"
2012-10-28 18:53:28+00:00;1;3c409022ddfa363453b97e5f9740b7226f0859f5;"Merge branch 'master' into integration3

Conflicts:
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/polys/euclidtools.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py"
2012-10-28 18:53:28+00:00;1;3c409022ddfa363453b97e5f9740b7226f0859f5;"Merge branch 'master' into integration3

Conflicts:
	sympy/integrals/risch.py
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/matrices/matrices.py
	sympy/matrices/tests/test_matrices.py
	sympy/polys/euclidtools.py
	sympy/polys/polytools.py
	sympy/polys/tests/test_densetools.py
	sympy/polys/tests/test_domains.py"
2012-10-28 18:00:18-07:00;2;f8b5ffbe9ef66e8bf048f9192a36bc2d83217224;"Merge pull request #1617 from rlamy/integration3

The long-awaited merge of Aaron Meurer's 2010 GSoC project. There are a lot of commits, many of which are redundant in the final diff, but nobody in their right mind wants to go back and fix it, so whatever."
2012-10-28 18:00:18-07:00;1;f8b5ffbe9ef66e8bf048f9192a36bc2d83217224;"Merge pull request #1617 from rlamy/integration3

The long-awaited merge of Aaron Meurer's 2010 GSoC project. There are a lot of commits, many of which are redundant in the final diff, but nobody in their right mind wants to go back and fix it, so whatever."
2012-10-29 20:39:13+01:00;1;13a808b9f5410421137f4fc0bc12f5fc035727e9;piecewise: Handle NotImplementedError from solve.
2012-10-30 19:29:27-07:00;2;3349e4ede2a14c910d5e928051f80389be450fc1;"Merge pull request #1609 from mrocklin/adjoint

added Adjoint operation for MatrixExprs"
2012-11-02 10:41:51+01:00;1;b5ec24a8c855b0c735059d8f805d3f3125f9061e;Use checksol to check for trivial solution.
2012-10-29 19:17:01+05:27;1;fd25cbf235e17ace48e83519d67c813b67faba31;"move sorting functions to compatibility

In addition, the traversals are capable of a lazy sort
which should be faster when ties can be broken with a simple
count_ops comparison.

Also added permutations to iterables imports."
2012-10-30 21:16:41+05:27;1;91f5981e904b9ce217de33e4b2cd57498284ab4b;pep8 E261
2012-11-05 11:43:49-08:00;1;4055c4ba93bed0c505f77f988f44b850d41e5276;"Merge pull request #1608 from mrocklin/hadamard

Hadamard

Adds an elementwise Hadamard product."
2012-11-11 01:47:02-07:00;1;cd42ae832a92f7c241cf0a4baa824e7dc1c314ec;"""Integrate"" risch_integrate() into integrate()

Previously, I was going to remove the part of the integrate heuristics that
breaks Integral(g1 + g2 + ...) into Integral(g1) + Integral(g2) + ..., but it
turns out this is a bad idea because many of the heuristics rely on this (for
example, trigintegrate() works on monomials).  Because risch_integrate() works
best on additions that have not been broken up, the strategy I employed was to
call risch_integrate() directly before this loop.  I also call
risch_integrate() again inside the loop, in case the integrand was a sum of an
elementary term and a non-elementary term (like erf(x) + exp(x)).
risch_integrate() is called in the loop after all the heuristics, but before
heurisch(), which should now be considered to be only a last resort.

By default, any NonElementaryIntegral returned from risch_integrate() is
recursively integrated using the other methods, in case it can be written in
terms of special functions.  To use only risch_integrate(), call
integrate(risch=True).  risch_integrate() has been removed from the user
namespace, though it can still be imported manually from
sympy.integrals.risch.  Note that integrate(risch=True) is not equivalent to
risch_integrate() in the sense that the former will return an unevaluated
Integral when it fails and the latter will raise NotImplementedError.
Therefore, you should check isinstance(result, NonElementaryIntegral) if you
want to verify that an unevaluated Integral result is indeed nonelementary.

Many tests had to be rewritten slightly, as risch_integrate() returned answers
in different forms than integrate().  Unfortunately, these are occasionally
worse, notably because risch_integrate() has a habit of returning things like
log(a*b) - log(a) instead of just log(b).

The good news is that for the integrals that risch_integrate() can handle,
integrate() is now orders of magnitude faster.

I also rewrote the grossly outdated and inaccurate docstring of
Integral._eval_integral."
2012-11-12 00:11:50-08:00;1;a655b03245b494b4df68746968e65f4b5d582288;"Merge pull request #1546 from lidavidm/sympify_implicit_mul_and_apply

Implicit multiplication and function application for sympify"
2012-11-12 17:59:09-08:00;1;40a2d6b76f18961bd9c7d3ff9a316600687ef06d;"Merge pull request #1638 from smichr/3460

(3460) issue 1400; enforcing determinism; correcting power rules; kbins"
2012-11-13 12:15:14-07:00;1;eac455756435a8b7799292020bb3918d5d621245;"Merge branch 'master' into integrate-risch_integrate

Conflicts:
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/solvers/tests/test_ode.py"
2012-11-13 12:15:14-07:00;1;eac455756435a8b7799292020bb3918d5d621245;"Merge branch 'master' into integrate-risch_integrate

Conflicts:
	sympy/integrals/tests/test_integrals.py
	sympy/integrals/tests/test_risch.py
	sympy/solvers/tests/test_ode.py"
2012-11-13 17:26:14-08:00;1;4c5b0d4d9a205104904ecf85f964d16fea7bd604;"Merge pull request #1643 from asmeurer/integrate-risch_integrate

Cleanup of integrate()"
2012-11-16 11:47:14-08:00;1;1253e3172e649dd9dbd29945185210768b12cdcf;"Merge pull request #1621 from jrioux/piecewise

Piecewise canonicalization"
2012-12-04 12:18:54+05:27;1;d89aebab2e5852391d3123299483be698e6646d0;"2950: Rational processes Float and float

o The unprejudiced underlying fraction of the float is used to
create the Rational. Since as_integer_ratio() is not available in 2.5
(and Decimal in 2.5 will not take a float) mpf is used to parse the
float to get the mantissa and exponent.

o strings matching a literal 'float/float' are now processed and
processing is not passed to sympify (which makes Rational more literal).

        It makes sense to handle strings representing Rationals since
        it is about 100x faster than passing off the expression to
        sympify. No deeper processing is done, however."
2012-12-05 18:36:03-08:00;1;f379d43bfcda7eaca6fd89c9d7c97d4692434524;"Merge pull request #1680 from smichr/2950

2950: Rational more flexible; other number.py work"
2013-01-11 20:38:17+05:18;1;32ca535a3b0b7aadd8af5041c2baf0bd65d2fc71;Issue 3428: Passed tolerance to _real_to_rational if rational=True in nsimplify and implemented it.
2013-01-11 20:38:17+05:18;1;3b8cb5f000beaed27d873118fda5770ddb01a3cf;Issue 3428: Passed tolerance to _real_to_rational if rational=True in nsimplify and implemented it.
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;2;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;3;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;2;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;2;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-17 08:59:57+00:00;1;856ef222100bbae994aedef2b373708801d47a06;"Merge branch 'master' into trisimp-merge

Conflicts:
	sympy/functions/elementary/hyperbolic.py
	sympy/polys/polytools.py
	sympy/simplify/simplify.py
	sympy/simplify/tests/test_simplify.py
	sympy/solvers/tests/test_solvers.py"
2013-01-16 08:58:26+05:27;1;78101960e677705f0ee6b91a45be9093ad4380be;"use rewriting to see if expr becomes simpler

This isn't used unconditionally since the user probably doesn't want
the result rewritten in terms of exp. The result is only taken if all
the exp that were introduced are removed after factoring."
2013-01-21 23:20:01-08:00;1;d1dea6329adc82fd7a34f74951fb9f6377c07efb;"Merge pull request #1690 from smichr/trig

trigsimp modifications"
2013-02-02 14:34:47-08:00;1;077d4a2c76113c8ff58079e6e856c03f3764920a;assume restores old context after exception
2013-02-04 15:16:22-08:00;1;d0e4f2553b36d05cf0479667553450cb38ae6f78;"Merge pull request #1751 from mrocklin/assumptions-context

New assumptions context manager"
2013-01-31 15:12:25+05:18;1;9c0eb37407716b70de2b7dbd05e6968901c880b3;Solvable quintic - implemented
2013-01-31 15:12:25+05:18;1;9c0eb37407716b70de2b7dbd05e6968901c880b3;Solvable quintic - implemented
2013-01-31 15:12:25+05:18;2;9c0eb37407716b70de2b7dbd05e6968901c880b3;Solvable quintic - implemented
2013-01-31 15:12:25+05:18;1;9c0eb37407716b70de2b7dbd05e6968901c880b3;Solvable quintic - implemented
2013-01-31 15:12:25+05:18;1;9c0eb37407716b70de2b7dbd05e6968901c880b3;Solvable quintic - implemented
2013-01-31 15:12:25+05:18;3;9c0eb37407716b70de2b7dbd05e6968901c880b3;Solvable quintic - implemented
2013-01-31 15:12:25+05:18;5;9c0eb37407716b70de2b7dbd05e6968901c880b3;Solvable quintic - implemented
2013-02-06 23:01:14-08:00;2;a26540993d78946955f13a9197670672036caf68;Changes to support gmpy 1.13 or later, or gmpy2 2.0.0b4 or later.
2013-02-19 23:09:40+05:18;1;7e38dd5e6724ee2b00c19eadd86113e1c09714fc;Merge branch 'master' into error
2013-02-19 23:09:40+05:18;1;7e38dd5e6724ee2b00c19eadd86113e1c09714fc;Merge branch 'master' into error
2013-02-23 19:30:56-08:00;1;266dd64dd0e9019e6951df51d37db025226fdd5f;"Merge pull request #1779 from thisch/previewsubp

refactoring of preview function in sympy/printing/preview.py"
2013-02-24 15:19:33+04:00;1;3b3dca557ee51150e377fbdbbbee42c1ecb25a5c;Merge branch 'master' into 3377-Remove-as_coeff_terms-and-as_coeff_factors
2013-02-24 15:20:45+04:00;1;d48b630500c8d0a8c2575ead03678a48fce96554;Merge branch 'master' into 3553-DeprecationWarning-on-compile_rule-doctest
2013-02-28 15:16:53+01:00;1;d01655a87d055273e7335af291f753df6d5ba9c8;"runtests: Show operands of failed tests' assert statements

This uses ast module (if available) to rewrite assert statements of the form:

assert expr_0 cmpop_0 expr_1 cmpop_1 ... cmpop_n expr_{n+1}

to:

(sym_0, sym_1, ..., sym_{n+1}) = (expr_0, expr_1, ..., expr_{n+1})
assert sym_0 cmpop_0 sym_1 cmpop_1 ... cmpop_n sym_{n+1},
    ""%s cmpop_0 %s ... cmpop_n %s"" % (sym_0, sym_1, ..., sym_{n+1})

Line numbers are preserved on assert statements. On short test runs there is a
small but visible speed penalty (e.g. under 10% for sympy/polys). However, full
test suit run isn't affected that much.

Plain bin/test:

$ bin/test sympy/polys/tests/test_rings.py
============================================================ test process starts ============================================================
executable:         /usr/bin/python  (2.7.2-final-0)
architecture:       64-bit
cache:              yes
ground types:       gmpy 1.14
random seed:        52276056
hash randomization: on (PYTHONHASHSEED=2961690477)

sympy/polys/tests/test_rings.py[12] .......F....                                                                                       [FAIL]

_____________________________________________________________________________________________________________________________________________
___________________________________________ sympy/polys/tests/test_rings.py:test_PolyElement_pow ____________________________________________
  File ""/home/mateusz/repo/git/sympy/sympy/polys/tests/test_rings.py"", line 78, in test_PolyElement_pow
    assert f**0 == 3
AssertionError

=========================================== tests finished: 11 passed, 1 failed, in 0.03 seconds ============================================
DO *NOT* COMMIT!

Enhanced bin/test:

$ bin/test sympy/polys/tests/test_rings.py -E
============================================================ test process starts ============================================================
executable:         /usr/bin/python  (2.7.2-final-0)
architecture:       64-bit
cache:              yes
ground types:       gmpy 1.14
random seed:        57370498
hash randomization: on (PYTHONHASHSEED=4164250690)

sympy/polys/tests/test_rings.py[12] .......F....                                                                                       [FAIL]

_____________________________________________________________________________________________________________________________________________
___________________________________________ sympy/polys/tests/test_rings.py:test_PolyElement_pow ____________________________________________
  File ""/home/mateusz/repo/git/sympy/sympy/polys/tests/test_rings.py"", line 78, in test_PolyElement_pow
    assert f**0 == 3
AssertionError: 1 == 3

=========================================== tests finished: 11 passed, 1 failed, in 0.06 seconds ============================================
DO *NOT* COMMIT!"
2012-12-13 17:36:25-05:00;1;5740e151276922287ef2cb0029c0d50ab631a45f;"Handle KroneckerDelta in summations and products.

Fixes issues 3481 and 3482."
2013-03-10 12:52:27+05:18;1;406f9a975d0b2861b80f7f2218c08eb097916dd5;Merged from master, fixed conflicts
2013-03-13 00:13:31+05:27;2;2438bf3f197243125ad00d3cb1fe7625ff3a0505;"make sure all roots are obtained

If the domain permits, compute (then remove duplicates) with all_roots.

Is there a way to remove multiple roots easily so the previous roots
don't have to be recomputed?"
2013-03-14 00:12:58-07:00;2;5e64d5e5536867243a2a6bca04494f3ee1f7820d;"Merge pull request #1885 from smichr/3693

make sure all roots are obtained"
2013-01-25 02:01:27+05:27;1;fd5720ef633c881cdb801b8e3af8a4a164aa12b6;add fu to simplify
2013-03-09 18:20:37+05:27;1;7157ea0b4b91f86ec510bac4fa08faf5a23a432b;access old trigsimp by using keyword old=True
2013-03-15 02:46:05+05:27;2;7c21e224b8d1d34efc91ab2e7f45e27afa767bbe;"Merge branch 'master' into HEAD

Conflicts:
	sympy/solvers/solvers.py"
2013-03-16 14:51:13+01:00;1;543018622214bfeaef06548365021902d7dbbd2f;"Merge branch 'master' into integrals2

Conflicts:
	sympy/functions/elementary/piecewise.py"
2013-03-16 14:51:13+01:00;2;543018622214bfeaef06548365021902d7dbbd2f;"Merge branch 'master' into integrals2

Conflicts:
	sympy/functions/elementary/piecewise.py"
2013-03-16 19:13:48-07:00;2;b6104cba340291b25d43acb25d433b80fe6c173f;"Merge pull request #1737 from smichr/fu

Fu implemented"
2013-03-19 17:33:42+01:00;2;7e8bf9e2612f68c4034d44392a46a9cabf3c2ce5;Merge branch 'master' into metric_galgebra
2013-03-19 17:33:42+01:00;2;7e8bf9e2612f68c4034d44392a46a9cabf3c2ce5;Merge branch 'master' into metric_galgebra
2013-03-24 17:19:34+04:00;1;73a19789f04352153b3eea9c3507fab9cb925889;Correct nuse in e683d5b
2013-03-25 11:00:05-07:00;1;a58c2713e6a7f7692194dda83e197b25781e4177;Python 2.5 compatibility
2013-03-25 11:01:03-07:00;1;b081780de624072812e5ecc50a7c37924a7ac5a4;Add manualintegrate to Integral._eval_integral
2013-03-26 17:34:56-07:00;1;c1f0b88ec8c55033a178fe4355f7207c2f3a5505;Better integration with integrate()
2013-03-27 09:32:53-07:00;1;2329667f4f26c6b2b5f56a0ea50ffa9d313990d1;"Merge pull request #1863 from skirpichev/2969-Power-of-series

Fix for issue 2969"
2013-03-28 20:42:59+03:00;1;76457e35762247fec51f4f2596eb676bb2e7293b;Merge branch 'master' of git://github.com/sympy/sympy into issue694
2013-03-28 20:42:59+03:00;1;76457e35762247fec51f4f2596eb676bb2e7293b;Merge branch 'master' of git://github.com/sympy/sympy into issue694
2013-04-05 21:14:41-07:00;1;5314646b221ac1592dc4e7d99a646231dbea5a14;"Merge pull request #1927 from lidavidm/manual_integration

Manual integration"
2013-04-08 14:45:52+02:00;1;1a39eb4a459036c711317dca48cb0bc70b1169c6;Only try manualintegrate when other methods fail.
2013-04-08 14:47:15+02:00;1;9c0ffbbd3d3d169a910e1ca39a32b8d6c1b3e127;"Merge branch 'manualintegrate' into integrals

Conflicts:
	sympy/solvers/ode.py"
2013-04-08 14:47:15+02:00;1;9c0ffbbd3d3d169a910e1ca39a32b8d6c1b3e127;"Merge branch 'manualintegrate' into integrals

Conflicts:
	sympy/solvers/ode.py"
2013-04-08 14:47:15+02:00;1;9c0ffbbd3d3d169a910e1ca39a32b8d6c1b3e127;"Merge branch 'manualintegrate' into integrals

Conflicts:
	sympy/solvers/ode.py"
2013-04-06 04:52:35+05:27;2;007ec1993487f87d25aad039c13d158c326e0590;"modify equals and is_constant

** Inline notes describe why the minimal_polynomial is not being used
at present to prove an nsimplify result. solve, however, may be able
to prove that an expression is zero by getting a self-consistent solution
when solving for a surd of the expression. An test was added for this.

** In addition, cancel is used on the expression to try facilitate
simplification to zero (and an expression that motivated the change
has been included).

** don't use equals in sign and abs because it can be very slow

Thanks to Mario Pernici for finding good examples of when the
method used in equals is going to take a long time to solve.
The discussion that I had with him is on the PR 1925 page."
2013-04-09 13:26:55-07:00;2;73d90bf25bbf47a9c8d2654260c6f7847c463401;"Merge pull request #1990 from smichr/isnumber

is_number docstrings updated; equals and is_constant modified"
2013-04-10 12:08:59-07:00;1;34ba39f2f98cab81b8625f55e347a8768029e989;"Merge pull request #1697 from jrioux/concrete

KroneckerDelta in discrete summations and products"
2013-04-07 03:28:33+02:00;1;add022ffac65c110392f73fb75dc319dfbf64e73;"cleanup of the _find method in runtests.py

we don't need the regex stuff anymore. It is never executed!"
2013-04-12 00:09:47+05:27;1;57a8ca703375be3389430a4b73332770fa26816f;watch for TypeError from int
2013-04-12 08:05:45-07:00;1;885efaaaa182a18fba20f044ab8d3b8ac346c228;"Merge pull request #1997 from smichr/mod

Mod handles more simplification"
2013-04-13 13:59:41+04:00;1;de2e52d6fae39d4e9bdb7996da7775fe95551e0c;Merge branch 'master' of git://github.com/sympy/sympy into issue694
2013-04-13 13:59:41+04:00;2;de2e52d6fae39d4e9bdb7996da7775fe95551e0c;Merge branch 'master' of git://github.com/sympy/sympy into issue694
2013-04-13 13:59:41+04:00;1;de2e52d6fae39d4e9bdb7996da7775fe95551e0c;Merge branch 'master' of git://github.com/sympy/sympy into issue694
2013-04-13 13:59:41+04:00;1;de2e52d6fae39d4e9bdb7996da7775fe95551e0c;Merge branch 'master' of git://github.com/sympy/sympy into issue694
2013-04-13 12:13:15-07:00;1;ab94c3347561e9e6fdf1e76e0c7e6e9d33338dcc;"Merge pull request #1969 from thisch/doctest_cleanup

Doctest cleanup"
2013-04-14 12:39:21+04:00;1;78069d8c69355648b062df99e563c82e76b5890b;Merge branch 'master' of git://github.com/sympy/sympy into issue694
2013-04-15 01:28:26+05:18;1;60005ad70b8e5edeabdbec1c779d171fa2d54855;Implemented TODO's
2013-04-17 12:03:27-07:00;1;83311921fb1200aecbb2ec741f84cc152aefab4b;"Merge pull request #1970 from Manoj-Kumar-S/pde

Staging the infra of a basic PDE Solver"
2013-04-18 17:52:32+05:27;1;988468286b3ff15c2f6bcfe92b8e414538c67214;merge unrad with master
2013-04-19 17:46:55+05:27;1;246e3117ad4644da8ab8e07ce54702203ae4ae84;"use minpoly as fallback for radsimp; watch for Numbers

- also work with normal form of equation"
2013-04-20 15:21:46+02:00;1;45a4d079652f58f4bc36466771836bf3d7c7ff73;lxml instead of libxml2 for c2p, google app engine supports lxml and generally better supported
2013-04-26 23:13:15+05:18;1;03f5e91cb351cb8b2b240b98dded3830ce388f39;"Addition of hypertangent and exponential cases to parametric differntial equations

 added code exponential for to special denom

added code for tangent cases to special denom

added code for tangent cases to special denom

First attempt to solve the section 5.12

first attempt to solve section 5.12 and related problems

First Attempt to implement section 5.12 and related problems

added hypertangent test cases for param special

deleted binary file"
2013-05-01 00:31:57+02:00;1;8d05e1621192a6bd9355a503e1a61f637e3d03dc;"Merge branch 'master' into integrals

Conflicts:
	sympy/integrals/integrals.py"
2013-05-01 00:31:57+02:00;2;8d05e1621192a6bd9355a503e1a61f637e3d03dc;"Merge branch 'master' into integrals

Conflicts:
	sympy/integrals/integrals.py"
2013-05-01 00:31:57+02:00;1;8d05e1621192a6bd9355a503e1a61f637e3d03dc;"Merge branch 'master' into integrals

Conflicts:
	sympy/integrals/integrals.py"
2013-05-01 00:31:57+02:00;1;8d05e1621192a6bd9355a503e1a61f637e3d03dc;"Merge branch 'master' into integrals

Conflicts:
	sympy/integrals/integrals.py"
2013-05-01 00:31:57+02:00;1;8d05e1621192a6bd9355a503e1a61f637e3d03dc;"Merge branch 'master' into integrals

Conflicts:
	sympy/integrals/integrals.py"
2013-04-10 11:33:26+02:00;1;e44308f1ed71e60a0cd3d0105ca88bc0bfc8d270;polys: More accurate logic of Domain.convert()
2013-05-02 10:07:43+05:27;1;c5b32209c1a3d87e18e7bfb467aa20fbfe1ce39b;"define hashable content for Subs, Lambda, Integral, Sum and Product

The new definition allows expressions that would give identical
results (indepenedent of bound variables) to compare the same.

Issues 2440, 3775"
2013-05-03 17:16:43+02:00;1;d9f8473f34c59a6d22b21517c4d89b10bc3e99db;"Don't start ipython with init_session().

By default, don't start ipython with init_session() launched from
standard python. Launching ipython can still be requested explicitly
with init_session(ipython=True).

The logic to try to load ipython if available else falls back to
standard python is moved to bin/isympy.

Fixes issue 3292."
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;2;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;2;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-06 10:11:04+05:18;1;8edbbaa1814e36992a68ef180b62fece3cb064eb;"Merge branch 'master' into error

Conflicts:
	sympy/simplify/hyperexpand.py"
2013-05-07 05:36:51-07:00;1;5689563b1e5adb713ea38710c8fa1f624cb10a1e;"Merge pull request #2066 from smichr/fold

defining hashable content for objects with bound symbols"
2013-05-07 16:55:21+02:00;1;365e2c4534682c2b0fc68588f0a9eb00e64f9e1a;"Merge branch 'master' into integrals

Conflicts:
	sympy/solvers/ode.py"
2013-05-08 11:17:19+02:00;1;f60b50f71b33ab1d39158602a6c513a1c129b601;Use denoms(expr) instead of expr.as_numer_denom().
2013-05-09 12:42:42+05:18;1;2dcee5614b2e6fa0693eed48cb6bb72bdf517cf9;Merge conflicts fixed.
2013-05-09 12:42:42+05:18;1;2dcee5614b2e6fa0693eed48cb6bb72bdf517cf9;Merge conflicts fixed.
2013-05-09 12:42:42+05:18;1;2dcee5614b2e6fa0693eed48cb6bb72bdf517cf9;Merge conflicts fixed.
2013-05-09 12:42:42+05:18;1;2dcee5614b2e6fa0693eed48cb6bb72bdf517cf9;Merge conflicts fixed.
2013-05-09 12:42:42+05:18;1;2dcee5614b2e6fa0693eed48cb6bb72bdf517cf9;Merge conflicts fixed.
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;3;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;3;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;2;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-10 14:44:50-06:00;1;c3671d3ce8845fa9914dda1cdb2a86b4ff716164;Merge branch 'master' into deprecation_warning_tests
2013-05-12 16:31:54-07:00;1;72331ee2de33789539a3423b71b24a7f1ee7f431;"Merge pull request #1622 from jrioux/integrals

Identify undeterminate a/0 forms of indefinite integrals"
2013-05-12 16:31:54-07:00;1;72331ee2de33789539a3423b71b24a7f1ee7f431;"Merge pull request #1622 from jrioux/integrals

Identify undeterminate a/0 forms of indefinite integrals"
2013-05-13 14:01:22-07:00;1;9c2937beb8cac41bfa91b92b0c1451153ed17d98;"Merge pull request #2045 from jrioux/interactive

Interactive ipython printing."
2013-05-13 14:01:22-07:00;1;9c2937beb8cac41bfa91b92b0c1451153ed17d98;"Merge pull request #2045 from jrioux/interactive

Interactive ipython printing."
2013-05-16 11:21:14+02:00;1;56df93dede9727be1b4d41374e30c912877fbebb;"heurisch_wrapper: Leave the original poles alone.

When integrating with heurisch_wrapper, we identify poles in the
denominator and reevaluate the integral at those poles. This is
pointless if the same poles where already in the integrand to
start with, so we now leave these poles alone.

Fixes issue 3827:
`integrate(sqrt(x**2/((y - x)*(y + x))), x)` showing some infinities
https://code.google.com/p/sympy/issues/detail?id=3827"
2013-05-16 10:49:40-07:00;1;d8398e7f93382a30f47df51bf385e54e92648918;"Merge pull request #2112 from jrioux/integrals

heurisch_wrapper: Leave the original poles alone."
2013-05-17 12:31:31+05:27;2;7f47d4d8c3cc1f927a3ca84a3604e9e5529c2ff0;sympify replace input
2013-05-17 18:21:37-07:00;2;b5881b78d7e9a0b7bd8faad7b7d888db0eeb59d8;"Merge pull request #2122 from smichr/replace

sympify replace input"
2013-05-18 14:19:41-06:00;2;aa17ab0f0d29a42034b85cbcb2da6cbb502b2b2f;Merge branch 'master' into tutorial
2013-05-18 14:19:41-06:00;1;aa17ab0f0d29a42034b85cbcb2da6cbb502b2b2f;Merge branch 'master' into tutorial
2013-05-18 14:19:41-06:00;1;aa17ab0f0d29a42034b85cbcb2da6cbb502b2b2f;Merge branch 'master' into tutorial
2013-05-18 14:19:41-06:00;1;aa17ab0f0d29a42034b85cbcb2da6cbb502b2b2f;Merge branch 'master' into tutorial
2013-05-19 07:25:13+05:27;2;528dc2657ff67951614ad6950c0ccba47bb22207;Merge branch 'master' into trig
2013-05-19 21:18:10+02:00;1;891b6f53d247d722e9abf8067db1a882930e293c;"Merge branch 'master' into new-polys

Conflicts:
	sympy/integrals/tests/test_risch.py
	sympy/printing/pretty/tests/test_pretty.py"
2013-05-19 21:18:10+02:00;2;891b6f53d247d722e9abf8067db1a882930e293c;"Merge branch 'master' into new-polys

Conflicts:
	sympy/integrals/tests/test_risch.py
	sympy/printing/pretty/tests/test_pretty.py"
2013-05-19 21:18:10+02:00;2;891b6f53d247d722e9abf8067db1a882930e293c;"Merge branch 'master' into new-polys

Conflicts:
	sympy/integrals/tests/test_risch.py
	sympy/printing/pretty/tests/test_pretty.py"
2013-05-19 21:18:10+02:00;1;891b6f53d247d722e9abf8067db1a882930e293c;"Merge branch 'master' into new-polys

Conflicts:
	sympy/integrals/tests/test_risch.py
	sympy/printing/pretty/tests/test_pretty.py"
2013-05-19 21:18:10+02:00;1;891b6f53d247d722e9abf8067db1a882930e293c;"Merge branch 'master' into new-polys

Conflicts:
	sympy/integrals/tests/test_risch.py
	sympy/printing/pretty/tests/test_pretty.py"
2013-05-19 21:18:10+02:00;1;891b6f53d247d722e9abf8067db1a882930e293c;"Merge branch 'master' into new-polys

Conflicts:
	sympy/integrals/tests/test_risch.py
	sympy/printing/pretty/tests/test_pretty.py"
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;2;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;2;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;2;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;2;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-19 15:03:33-06:00;1;77a73856ebe919e60e3ac43d9fd839584a81649f;Merge branch 'master' into dot-printing
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;2;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;2;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;2;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;2;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 17:19:09-07:00;1;2bfa8681cfee86322f62325232674ee831a9e488;"Merge pull request #10 from asmeurer/dot-printing

Dot printing"
2013-05-31 00:53:08+05:18;4;dff28431fc2d7c05db73425cd2dfa3574e4e6429;"Implementation of the first heuristic

The first heuristic is a method to find the infinitesimals xi and eta, which
are solutions to the PDE eta.diff(x) + (eta.diff(y) - xi.diff(x))*h(x,y)
- xi.diff(y)*h**2 - xi*h.diff(x) - eta*h.diff(y) = 0.

There are four assumptions to eta and xi

1. eta = 0, xi = f(x)
2. eta = 0, xi = f(y)
3. eta = f(x), xi = 0
4. eta = f(y), xi = 0

After finding the infinitesimals, the next step would be to find the
necessary transformation for the simplified coordinates r,s by the following
PDE's

1.r.diff(x)*xi + r.diff(y)*eta = 0
2.s.diff(x)*xi + s.diff(y)*eta = 1"
2013-06-07 23:02:02-07:00;4;4d50f4fb83673276519e9ba717759ab8acc7c19f;"Merge pull request #2143 from Manoj-Kumar-S/heuristic1

First heuristic"
2013-06-09 02:19:49+02:00;1;42783f30bf4003a9671b5cbcc4ac89bf91ba0bd6;"Merge branch 'master' into error

Conflicts:
	sympy/integrals/heurisch.py"
2013-06-09 02:19:49+02:00;2;42783f30bf4003a9671b5cbcc4ac89bf91ba0bd6;"Merge branch 'master' into error

Conflicts:
	sympy/integrals/heurisch.py"
2013-06-09 02:19:49+02:00;2;42783f30bf4003a9671b5cbcc4ac89bf91ba0bd6;"Merge branch 'master' into error

Conflicts:
	sympy/integrals/heurisch.py"
2013-06-09 02:19:49+02:00;1;42783f30bf4003a9671b5cbcc4ac89bf91ba0bd6;"Merge branch 'master' into error

Conflicts:
	sympy/integrals/heurisch.py"
2013-06-09 02:19:49+02:00;1;42783f30bf4003a9671b5cbcc4ac89bf91ba0bd6;"Merge branch 'master' into error

Conflicts:
	sympy/integrals/heurisch.py"
2013-06-09 02:19:49+02:00;1;42783f30bf4003a9671b5cbcc4ac89bf91ba0bd6;"Merge branch 'master' into error

Conflicts:
	sympy/integrals/heurisch.py"
2013-06-09 02:19:49+02:00;4;42783f30bf4003a9671b5cbcc4ac89bf91ba0bd6;"Merge branch 'master' into error

Conflicts:
	sympy/integrals/heurisch.py"
2013-06-10 16:02:44-07:00;1;cff438c21473b8d93a516f8d31440871a284883d;"Merge pull request #11 from raoulb/error_merge

Error merge"
2013-06-10 16:02:44-07:00;2;cff438c21473b8d93a516f8d31440871a284883d;"Merge pull request #11 from raoulb/error_merge

Error merge"
2013-06-10 16:02:44-07:00;2;cff438c21473b8d93a516f8d31440871a284883d;"Merge pull request #11 from raoulb/error_merge

Error merge"
2013-06-10 16:02:44-07:00;1;cff438c21473b8d93a516f8d31440871a284883d;"Merge pull request #11 from raoulb/error_merge

Error merge"
2013-06-10 16:02:44-07:00;1;cff438c21473b8d93a516f8d31440871a284883d;"Merge pull request #11 from raoulb/error_merge

Error merge"
2013-06-10 16:02:44-07:00;1;cff438c21473b8d93a516f8d31440871a284883d;"Merge pull request #11 from raoulb/error_merge

Error merge"
2013-06-10 16:02:44-07:00;4;cff438c21473b8d93a516f8d31440871a284883d;"Merge pull request #11 from raoulb/error_merge

Error merge"
2013-06-13 21:45:51-05:00;4;0c89973181f1d5a0d4553d5f6790fc6c45ce4f61;Merge branch 'livehtml' into tutorial
2013-06-05 01:18:57+05:18;4;4f5bea4de1fb481f62d6058fd8debebca0e5b8b9;"Implementation of the second heuristic

The second heuristic is a method to find the infinitesimals xi and eta of
the PDE mentioned in the documentation under infinitesimals

There are four assumptions to xi and eta

1. eta = 0, xi = f(x)*g(y)
2. eta = 0, xi = g(x)*f(y)
3. xi = 0, eta = f(y)*g(x)
4. xi = 0, eta = f(x)*g(y)

g is a function got by extracting factors from the numerator and denominator
f is the function got by solving the auxilliary ODE obtained after
substituting g in the PDE. For now, it is assumed f can be obtained if
the auxilliary ode obtained is separable in f"
2013-06-18 11:14:31-07:00;4;a19b3030f7eae5beab6727d62911e7e84a07b2e5;"Merge pull request #2156 from Manoj-Kumar-S/heuristic2

Heuristic 2"
2013-06-18 20:16:31-05:00;2;74aed85ce74ae5dfacf8313253b89d1cefb167c0;"Merge branch 'master' into mprint

Conflicts:
	sympy/matrices/sparse.py"
2013-06-18 20:16:31-05:00;2;74aed85ce74ae5dfacf8313253b89d1cefb167c0;"Merge branch 'master' into mprint

Conflicts:
	sympy/matrices/sparse.py"
2013-06-18 20:16:31-05:00;1;74aed85ce74ae5dfacf8313253b89d1cefb167c0;"Merge branch 'master' into mprint

Conflicts:
	sympy/matrices/sparse.py"
2013-06-18 20:16:31-05:00;1;74aed85ce74ae5dfacf8313253b89d1cefb167c0;"Merge branch 'master' into mprint

Conflicts:
	sympy/matrices/sparse.py"
2013-06-18 20:16:31-05:00;1;74aed85ce74ae5dfacf8313253b89d1cefb167c0;"Merge branch 'master' into mprint

Conflicts:
	sympy/matrices/sparse.py"
2013-06-18 20:16:31-05:00;8;74aed85ce74ae5dfacf8313253b89d1cefb167c0;"Merge branch 'master' into mprint

Conflicts:
	sympy/matrices/sparse.py"
2013-06-22 14:47:30+02:00;4;3500223c7e5d01672d8592a959a5d45b05bdd99b;"Merge remote-tracking branch 'skirpichev/pr2164-test' into elliptic_print

Conflicts:
	sympy/printing/pretty/pretty.py"
2013-06-23 11:16:07+05:18;2;848a538197b6a68b168c19ffb71643fe9ee605fd;"Merge branch 'master' into 3128_Sum_Product_Simplification

Conflicts:
	sympy/concrete/tests/test_sums_products.py"
2013-06-23 11:16:07+05:18;2;848a538197b6a68b168c19ffb71643fe9ee605fd;"Merge branch 'master' into 3128_Sum_Product_Simplification

Conflicts:
	sympy/concrete/tests/test_sums_products.py"
2013-06-23 11:16:07+05:18;1;848a538197b6a68b168c19ffb71643fe9ee605fd;"Merge branch 'master' into 3128_Sum_Product_Simplification

Conflicts:
	sympy/concrete/tests/test_sums_products.py"
2013-06-23 11:16:07+05:18;1;848a538197b6a68b168c19ffb71643fe9ee605fd;"Merge branch 'master' into 3128_Sum_Product_Simplification

Conflicts:
	sympy/concrete/tests/test_sums_products.py"
2013-06-23 11:16:07+05:18;1;848a538197b6a68b168c19ffb71643fe9ee605fd;"Merge branch 'master' into 3128_Sum_Product_Simplification

Conflicts:
	sympy/concrete/tests/test_sums_products.py"
2013-06-23 11:16:07+05:18;8;848a538197b6a68b168c19ffb71643fe9ee605fd;"Merge branch 'master' into 3128_Sum_Product_Simplification

Conflicts:
	sympy/concrete/tests/test_sums_products.py"
2013-06-23 20:11:58+02:00;8;eb81b275edb01f4593653333466e1b4ba58ede0c;Merge branch 'master' into log_integral
2013-06-28 17:38:16+00:00;1;051bd2e1e8bec72f7eb46400543f89cdc82ec1e7;App engine compatibility: fail on subprocess import
2013-06-28 13:56:14-04:00;4;84fb1a2823f61cbba5fda1fd2070ac5a6dbe7002;Merge branch 'master' into 2695_pretty_print_fractions
2013-06-28 20:42:10+02:00;8;66d631a5b8463b4d6a6625fad4ab1f3534acad0b;"Merge branch 'master' into new-polys

Conflicts:
	sympy/polys/agca/modules.py
	sympy/printing/pretty/tests/test_pretty.py"
2013-06-28 12:49:20-07:00;1;76b133d856b2fa5a2a2fe1b6f59dc145b75496a7;"Merge pull request #2218 from lidavidm/app_engine

App engine compatibility: fail on subprocess import"
2013-06-28 19:10:51-04:00;1;a00639aa381f1b3bc58243b8355cc5872e696621;Merge branch 'master' into 2695_pretty_print_fractions
2013-06-29 12:53:49+05:18;1;5f28d7a525a4d83fdc663aee8794da0c7f19aadc;Merge branch 'master' into 3128_Sum_Product_Simplification
2013-05-01 18:31:08-07:00;1;5234455f23239b756d0e2dfc551b6f16dcc4e512;integrate: manual=True only uses manualintegrate
2013-06-29 07:53:58-07:00;1;28c30eb8977ae616b10f6bd9e64d06b4ad3f1728;"Merge pull request #2029 from rpuntaie/lxml_insteadof_libxml2

lxml instead of libxml2 for c2p"
2013-06-29 11:30:35-05:00;1;7f0573e5aaaf3eafcdd17183378742cf439255ba;"Merge branch 'master' into typos

Conflicts:
	sympy/functions/special/error_functions.py"
2013-06-29 11:30:35-05:00;4;7f0573e5aaaf3eafcdd17183378742cf439255ba;"Merge branch 'master' into typos

Conflicts:
	sympy/functions/special/error_functions.py"
2013-06-29 11:30:35-05:00;1;7f0573e5aaaf3eafcdd17183378742cf439255ba;"Merge branch 'master' into typos

Conflicts:
	sympy/functions/special/error_functions.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;2;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;2;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;2;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;8;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 11:51:27-05:00;1;85522d35858d4a24b1285bcae0762e7b6e089ae7;"Merge branch 'master' into pull1888

Conflicts:
	sympy/core/function.py"
2013-06-29 14:52:15-05:00;1;6680c0cff1428d5dd4e5dd5aebee95de0b7f86a0;"Merge branch 'master' into tutorial

Conflicts:
	doc/src/tutorial/tutorial.en.rst
	sympy/printing/latex.py"
2013-06-29 14:52:15-05:00;4;6680c0cff1428d5dd4e5dd5aebee95de0b7f86a0;"Merge branch 'master' into tutorial

Conflicts:
	doc/src/tutorial/tutorial.en.rst
	sympy/printing/latex.py"
2013-06-29 14:52:15-05:00;1;6680c0cff1428d5dd4e5dd5aebee95de0b7f86a0;"Merge branch 'master' into tutorial

Conflicts:
	doc/src/tutorial/tutorial.en.rst
	sympy/printing/latex.py"
2013-06-29 15:08:16-07:00;1;2585bd0b08aa84faab2a5149c5086823ce0c20e0;"Merge pull request #2065 from lidavidm/issue_3796

Issue 3796"
2013-06-29 21:50:51-05:00;1;092abd64e89c4f04adfc75ca066fc954dce58c7d;"Merge branch 'master' into tutorial

Conflicts:
	doc/src/tutorial/tutorial.en.rst"
2013-07-06 19:38:41-05:00;1;a8d59565fa7fc405dcf7277a591643a9b21e2001;"Enable colorized output from fabric

This requires my pull request https://github.com/fabric/fabric/pull/924."
2013-07-09 13:36:02+02:00;1;48d40172de8929288db93d11636e20975418b8d4;"Merge branch 'master' into new-polys

Conflicts:
	sympy/polys/galoistools.py
	sympy/polys/specialpolys.py
	sympy/polys/tests/test_polytools.py"
2013-07-09 13:36:02+02:00;1;48d40172de8929288db93d11636e20975418b8d4;"Merge branch 'master' into new-polys

Conflicts:
	sympy/polys/galoistools.py
	sympy/polys/specialpolys.py
	sympy/polys/tests/test_polytools.py"
2013-07-09 13:36:02+02:00;1;48d40172de8929288db93d11636e20975418b8d4;"Merge branch 'master' into new-polys

Conflicts:
	sympy/polys/galoistools.py
	sympy/polys/specialpolys.py
	sympy/polys/tests/test_polytools.py"
2013-07-10 01:34:40+02:00;1;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;2;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;1;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;2;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;2;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;1;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;1;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;1;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;8;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;1;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 01:34:40+02:00;1;55ea0579084a10df14cf2c50ca610a6dc251e1f1;"Merge branch 'master' into issue694

Conflicts:
	sympy/core/tests/test_wester.py"
2013-07-10 17:55:44-06:00;1;4f8ce72d3da0432f75fe493e54be53d097983a9c;Merge branch 'master' of https://github.com/sympy/sympy
2013-07-10 17:55:44-06:00;1;4f8ce72d3da0432f75fe493e54be53d097983a9c;Merge branch 'master' of https://github.com/sympy/sympy
2013-07-10 17:55:44-06:00;1;4f8ce72d3da0432f75fe493e54be53d097983a9c;Merge branch 'master' of https://github.com/sympy/sympy
2013-07-11 06:50:26-07:00;1;b4db1f3bcd6add6a24f71a77b40e067c8366f84e;"Merge pull request #2126 from mattpap/new-polys

WIP: Incremental progress on sparse polynomials"
2013-07-11 23:10:46+02:00;1;efbebefa51a4f6558f31ecb9b68dae362d537b57;Replace all except Exception, e with except Exception as e
2013-07-11 21:05:58-05:00;2;8d2d17deff5b32da183a1404783b276642afa0ed;"Fix cache to work with unhashable items

The input is checked to see if it is hashable, and if it is not, it is not
cached.

We should verify that this doesn't have a major performance penalty, though I
doubt it will."
2013-07-12 06:50:33-07:00;1;ede17114b8038cb8fe6620ec70df58f3386ad4b9;"Merge pull request #1847 from mattpap/enhanced-asserts

runtests: Show operands of failed tests' assert statements"
2013-07-12 18:34:40+02:00;1;d0b26db247b82be2c7678abdaacc47884cabf9bc;"Merge branch 'master' into drop-python-2.5

Conflicts:
	bin/test"
2013-07-12 11:12:10-07:00;1;c7fbd905302c64e4a3d6c82566faf00976d82d49;"Merge pull request #2273 from mattpap/drop-python-2.5

Remove Python 2.5 stuff (#3930)"
2013-07-12 20:00:51-06:00;1;b74e314a4c95efb0dd60c95759b5b8e8df3a2479;Merge branch 'master' of https://github.com/sympy/sympy
2013-07-12 20:00:51-06:00;1;b74e314a4c95efb0dd60c95759b5b8e8df3a2479;Merge branch 'master' of https://github.com/sympy/sympy
2013-07-12 20:00:51-06:00;1;b74e314a4c95efb0dd60c95759b5b8e8df3a2479;Merge branch 'master' of https://github.com/sympy/sympy
2013-07-13 16:55:51+02:00;1;88bcea8be1afea3805268900fc4ec66f7b1aacec;"Merge branch 'master' into modgcd

Conflicts:
	sympy/polys/polyerrors.py"
2013-07-13 16:55:51+02:00;1;88bcea8be1afea3805268900fc4ec66f7b1aacec;"Merge branch 'master' into modgcd

Conflicts:
	sympy/polys/polyerrors.py"
2013-07-13 16:40:44-06:00;1;2fd9f658f874d0b3ca8b0626536ebce77da8a54e;"Merge branch 'master' into travis

Conflicts:
	.travis.yml"
2013-07-13 16:40:44-06:00;1;2fd9f658f874d0b3ca8b0626536ebce77da8a54e;"Merge branch 'master' into travis

Conflicts:
	.travis.yml"
2013-07-14 15:22:26-05:00;1;5083cf31fe4bd110317d5a98d4db357e732afa05;"Merge branch 'master' into matrix_hash

Conflicts:
	sympy/matrices/tests/test_matrices.py"
2013-07-14 15:22:26-05:00;1;5083cf31fe4bd110317d5a98d4db357e732afa05;"Merge branch 'master' into matrix_hash

Conflicts:
	sympy/matrices/tests/test_matrices.py"
2013-07-14 15:22:26-05:00;1;5083cf31fe4bd110317d5a98d4db357e732afa05;"Merge branch 'master' into matrix_hash

Conflicts:
	sympy/matrices/tests/test_matrices.py"
2013-07-15 23:01:10+02:00;1;104c8a2689815b1ad395803b778c1e00ea07e9e5;"Merge branch 'master' into 0.7.3-merge

Conflicts:
	.mailmap
	sympy/__init__.py
	sympy/polys/domains/pythonrational.py"
2013-07-15 23:01:10+02:00;1;104c8a2689815b1ad395803b778c1e00ea07e9e5;"Merge branch 'master' into 0.7.3-merge

Conflicts:
	.mailmap
	sympy/__init__.py
	sympy/polys/domains/pythonrational.py"
2013-07-15 23:01:10+02:00;1;104c8a2689815b1ad395803b778c1e00ea07e9e5;"Merge branch 'master' into 0.7.3-merge

Conflicts:
	.mailmap
	sympy/__init__.py
	sympy/polys/domains/pythonrational.py"
2013-07-15 14:20:50-07:00;1;4703ea9fded14068f96e18aa3e24acab026f2cc2;"Merge pull request #2293 from mattpap/0.7.3-merge

0.7.3 merge"
2013-07-15 14:20:50-07:00;1;4703ea9fded14068f96e18aa3e24acab026f2cc2;"Merge pull request #2293 from mattpap/0.7.3-merge

0.7.3 merge"
2013-07-15 14:20:50-07:00;1;4703ea9fded14068f96e18aa3e24acab026f2cc2;"Merge pull request #2293 from mattpap/0.7.3-merge

0.7.3 merge"
2013-07-16 07:30:19-07:00;2;4a15675f6893438e303963eb13e5100447153e2c;"Merge pull request #2276 from asmeurer/matrix_hash

Make mutable matrices not hashable (issue 880)"
2013-07-19 19:41:38-05:00;1;e65cf9c2addfc9bfee8dd89bf5e6aab99443a2d0;"Re-enable matplotlib printing in init_printing

Re-enable matplotlib as a possible way to png render latex. This
addresses some problems with Windows where using external rendering is
slow and flashes up batch windows. This option is specified through
use_latex by passing 'matplotlib'."
2013-07-14 01:03:28+05:18;4;93b6e325b3f6c461efae0cf61d48305aa7ddb563;"Refactoring the code - First pass

1] Added helper functions for the various heuristics
2] Improved the documentation
3] Rewrote the second heuristic according to a new algo"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;2;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;2;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;2;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;2;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;2;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;2;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;8;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;1;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-21 22:09:11+02:00;2;5fe775e6342c9197b87b8613bb576f7c41bae90f;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/conf.py
	doc/src/modules/galgebra/GA/GAsympy.rst
	doc/src/modules/galgebra/index.rst
	sympy/galgebra/GA.py
	sympy/galgebra/latex_ex.py"
2013-07-23 19:43:54+01:00;2;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;1;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;1;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;1;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;1;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;1;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;4;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;1;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-23 19:43:54+01:00;1;d908eedbbacbd0c1b8fdb7a521f1de4299774a0c;Fixed the cartan_matrix doctest
2013-07-24 18:43:57+01:00;2;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;1;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;1;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;1;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;1;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;1;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;4;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;1;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 18:43:57+01:00;1;c85032f84ac7f3936b03aa679fdf4cbac543b603;Fixing type_b
2013-07-24 21:59:43-07:00;4;9348a9a589598e0ca0c238f83bb4d10ed427504b;"Merge pull request #2286 from Manoj-Kumar-S/refactor

Refactored the heuristic code and rewrote the second heuristic"
2013-07-25 01:21:26-05:00;4;354b6a96376a34f5d245acd1ea9f18e18e008632;"Merge branch 'master' into single_code_base

Conflicts:
	sympy/solvers/ode.py"
2013-07-25 19:20:10+01:00;2;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;1;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;1;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;1;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;1;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;1;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;4;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;1;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 19:20:10+01:00;1;865a1b7e953c6df5af8ee775ba33feffdbf8f868;Fixing things
2013-07-25 20:01:10-05:00;1;8519425f125592fb5e29876ae510f4e8ee10e7f6;Make setup/setupegg install isympy to isympy3
2013-07-26 18:55:30-04:00;2;6d24f9b26286d48cb539dc95732d2e22ab321dd5;Merge upstream commits.
2013-07-26 18:55:30-04:00;1;6d24f9b26286d48cb539dc95732d2e22ab321dd5;Merge upstream commits.
2013-07-26 18:55:30-04:00;4;6d24f9b26286d48cb539dc95732d2e22ab321dd5;Merge upstream commits.
2013-07-28 12:06:11-07:00;1;423d51c458c8cc14baa4adcf4e1598e46936e73e;"Merge pull request #2318 from flacjacket/single_code_base

Single Python 2 and 3 compatible codebase"
2013-07-28 21:14:34+02:00;1;71a8b4a8a75ca4602ea3533308a230146cfee245;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/modules/galgebra/GA/BasicGAtest.py
	doc/src/modules/galgebra/GA/Dirac.py
	doc/src/modules/galgebra/GA/Maxwell.py
	doc/src/modules/galgebra/GA/conformalgeometryGAtest.py
	doc/src/modules/galgebra/GA/coords.py
	doc/src/modules/galgebra/GA/hyperbolicGAtest.py
	doc/src/modules/galgebra/GA/reciprocalframeGAtest.py
	doc/src/modules/galgebra/latex_ex/Maxwell.py
	doc/src/modules/galgebra/latex_ex/latexdemo.py
	sympy/galgebra/GA.py
	sympy/galgebra/examples/Dirac.py
	sympy/galgebra/examples/Maxwell.py
	sympy/galgebra/examples/coords.py
	sympy/galgebra/latex_ex.py"
2013-07-28 21:14:34+02:00;4;71a8b4a8a75ca4602ea3533308a230146cfee245;"Merge branch 'master' into galgebra

Conflicts:
	doc/src/modules/galgebra/GA/BasicGAtest.py
	doc/src/modules/galgebra/GA/Dirac.py
	doc/src/modules/galgebra/GA/Maxwell.py
	doc/src/modules/galgebra/GA/conformalgeometryGAtest.py
	doc/src/modules/galgebra/GA/coords.py
	doc/src/modules/galgebra/GA/hyperbolicGAtest.py
	doc/src/modules/galgebra/GA/reciprocalframeGAtest.py
	doc/src/modules/galgebra/latex_ex/Maxwell.py
	doc/src/modules/galgebra/latex_ex/latexdemo.py
	sympy/galgebra/GA.py
	sympy/galgebra/examples/Dirac.py
	sympy/galgebra/examples/Maxwell.py
	sympy/galgebra/examples/coords.py
	sympy/galgebra/latex_ex.py"
2013-07-20 10:45:11+04:00;1;938c1ea60ae4190f0a7a8ffbff5667788d875511;A correction for Pow._eval_nseries: case 1/f(x)
2013-07-29 22:10:33+01:00;1;a39c530b059da377760d25b6609af11814e4f095;Fixing problems to merge with master
2013-07-30 10:56:46+02:00;1;0ed012b85c9d632121e544c9e68e006f465f31ec;Merge branch 'master' into modgcd
2013-07-30 10:56:46+02:00;2;0ed012b85c9d632121e544c9e68e006f465f31ec;Merge branch 'master' into modgcd
2013-07-30 10:56:46+02:00;1;0ed012b85c9d632121e544c9e68e006f465f31ec;Merge branch 'master' into modgcd
2013-07-30 10:56:46+02:00;4;0ed012b85c9d632121e544c9e68e006f465f31ec;Merge branch 'master' into modgcd
2013-07-30 21:46:35+01:00;1;ebeda11a64c3b76d891a838a7e9680130d6038e3;Fixing merge conflicts
2013-08-01 09:21:32+05:18;1;af48228b2dc1081c590f1a18193d51062712d99a;merging with master
2013-08-01 09:21:32+05:18;1;af48228b2dc1081c590f1a18193d51062712d99a;merging with master
2013-08-01 09:21:32+05:18;4;af48228b2dc1081c590f1a18193d51062712d99a;merging with master
2013-08-02 02:31:54-07:00;1;11c0bd394ce130463733190a0e32a0576081d4fb;"Merge pull request #2322 from skirpichev/1756-division-by-order

Issue 1756: don't do division by order term"
2013-08-04 23:04:36+05:18;7;e8ea4bc422075ef74dfcd8769f12fc958dc4f42e;"Made the following changes
1. Wrapped integrate with NotImplementedError
2. Used islice
3. Replaced nested if
4. Used continue"
2013-08-05 11:16:42-07:00;7;cca64e928b0b0d0f1fab7e61c9bfa717d272958f;"Merge pull request #2308 from Manoj-Kumar-S/heuristics

Heuristics, for assumptions on xi and eta"
2013-08-08 19:08:16+02:00;1;15bfd1ca97e53852107d2bc73c6c8917254cda9c;"Report test name in case of runtest failure; add missing print_function.

Make runtests.py report the name of a test if an exception is thrown
before it outputs the test name normally. This makes sure that the
name of a test is printed even in the face of runtest machinery failure.

Added a print_function import from __future__ to test_codegen, which
would make tests fail all over the place when --enhance-asserts was
active."
2013-08-09 10:19:29+05:18;1;c1ca7b259b8091efbad1034f2ece5e5f242fa274;Merge over master
2013-08-09 10:19:29+05:18;7;c1ca7b259b8091efbad1034f2ece5e5f242fa274;Merge over master
2013-08-10 00:22:39+04:00;7;b378753982cda231b6fb86f2ed3218ce6fa384c3;Merge branch 'master' into wester-nsimplify
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;2;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;9;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-11 18:58:47-06:00;1;db4b87d20ac6140f229ee006fadfb1ea141255c0;Merge branch 'master' into travis-slow-tests
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;11;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;1;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-13 09:43:17+02:00;2;444bdc77f56a561807174a367c6d9743cb2397d4;"Merge branch 'master' into crypto

Conflicts:
	sympy/__init__.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;2;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;9;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-18 17:01:50-07:00;1;04c5fac9dad42fac9f20df0affe5e77e8402a9a7;"Merge remote-tracking branch 'sympy/master' into derivsubs

Conflicts:
	sympy/core/function.py"
2013-08-21 14:12:59-06:00;1;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-21 14:12:59-06:00;2;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-21 14:12:59-06:00;1;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-21 14:12:59-06:00;1;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-21 14:12:59-06:00;1;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-21 14:12:59-06:00;1;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-21 14:12:59-06:00;9;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-21 14:12:59-06:00;1;cf2d1b409806232daaab5aaaeed4ec0a37954206;"Merge branch 'master' into xtothex

Conflicts:
	sympy/integrals/risch.py"
2013-08-26 15:20:46+02:00;1;dd3537722553c86ab04d198749f11aca807e5731;"Merge branch 'master' into modgcd_funcfield

Conflicts:
	doc/src/modules/polys/internals.rst
	sympy/polys/tests/test_modulargcd.py"
2013-08-26 15:20:46+02:00;7;dd3537722553c86ab04d198749f11aca807e5731;"Merge branch 'master' into modgcd_funcfield

Conflicts:
	doc/src/modules/polys/internals.rst
	sympy/polys/tests/test_modulargcd.py"
2013-08-26 20:00:55+02:00;1;5a2509d7673a290b3382dcb3dbd90b18e802faa9;added ``sqrt_mod_iter``
2013-08-26 22:40:27+02:00;1;e085c406a426a1f8bfefe525941a1846d6a72bec;``sqrt_mod(a, p)`` returns a root ``x <= p // 2``
2013-07-26 18:17:26+02:00;3;bbe730977fba28fbaeba5ed5071b7ee969fbb904;Kahane's algorithm to remove contracted gamma matrices from expressions in four dimensions.
2013-08-29 09:38:26-07:00;1;69e8a9a68173af7eb5ebcb2bdc4ff66ae3ccc60d;"Merge pull request #2307 from pernici/pr1

solving quadratic congruences"
2013-08-30 02:03:18+05:18;1;9e9971d811d6d14c23b3d30671b670c4f4a682ff;"Merge branch 'master' into Diophantine_Equation_Module_II to get Pernici's
work."
2013-08-29 17:41:36-06:00;1;2280187545bdc3a086564f5f291d639bc3230dd7;"Merge branch 'master' into preview_bytesio

Conflicts:
	sympy/interactive/printing.py"
2013-08-30 22:56:46+08:00;1;7db599ebe154401d3a40c7902d4bf078d931cd6e;Merge master
2013-09-01 11:52:12-07:00;1;911cb063b748990ee5d58921445ea7b471c6c730;"Fixed minor dummification issue.

Nothing too big, just looking at the namespaces used for eval rather than the
names of modules passed in."
2013-09-08 23:27:44+01:00;1;c6817142b52c6b707135c83c023b1b516bf8380d;Changing code to utilise Rational
2013-09-08 23:27:44+01:00;1;c6817142b52c6b707135c83c023b1b516bf8380d;Changing code to utilise Rational
2013-09-08 23:27:44+01:00;1;c6817142b52c6b707135c83c023b1b516bf8380d;Changing code to utilise Rational
2013-09-08 23:27:44+01:00;7;c6817142b52c6b707135c83c023b1b516bf8380d;Changing code to utilise Rational
2013-09-12 12:12:54+04:00;1;56d58dbe06d124e908fc595b154ce9f7844498c2;"Merge branch 'master' into 2073-tests

Conflicts:
	sympy/series/tests/test_gruntz.py"
2013-09-17 21:48:32+01:00;1;dbde10215bc56111afcd3a155a0034fd0fff5b13;Merging with master
2013-09-17 21:48:32+01:00;1;dbde10215bc56111afcd3a155a0034fd0fff5b13;Merging with master
2013-09-17 21:48:32+01:00;1;dbde10215bc56111afcd3a155a0034fd0fff5b13;Merging with master
2013-09-17 21:48:32+01:00;7;dbde10215bc56111afcd3a155a0034fd0fff5b13;Merging with master
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;2;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;11;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-09-23 19:34:20+02:00;1;03840a1d2fcd8856d8d49cf31fc971136ce01783;"Merge branch 'master' into AlgebraicDomain

Conflicts:
	sympy/polys/numberfields.py
	sympy/polys/tests/test_numberfields.py"
2013-10-02 10:04:34+02:00;1;79c0be4b5b172e40573a4ae78b6e4e2584d60ae9;Merge remote-tracking branch 'origin/master' into report-test-name-on-early-failure
2013-10-02 10:04:34+02:00;7;79c0be4b5b172e40573a4ae78b6e4e2584d60ae9;Merge remote-tracking branch 'origin/master' into report-test-name-on-early-failure
2013-10-07 20:09:55+08:00;1;506103bf305eac586481580273c6127a16835f0a;Merge master
2013-10-14 17:03:52+04:00;1;04d201fedb0f10d7915ebd605828bf42351e50ff;Merge branch 'master' into 3741-nargs-as-tuple
2013-10-20 13:46:07-07:00;1;36c31b952879b45f96d89cb83c0caf39ca3bd759;"Merge pull request #2497 from toolforger/report-test-name-on-early-failure

Report test name in case of runtest failure; add missing print_function."
2013-10-20 17:53:32-07:00;1;a7a0ca26588bb60095d2a2d7fab427e441f18c14;Merge branch 'traversal_argset' into newassump
2013-10-20 18:33:48-07:00;1;72884f84759b5c729fd836947a5453e2ce180c79;"Merge branch 'master' into satisfiable_expr

Conflicts:
	sympy/logic/tests/test_inference.py"
2013-10-25 12:39:59+04:00;1;f1573d1d61035a2b361ee33fc0c01b36a456f5e5;Merge branch 'master' into logx-for-lseries
2013-10-25 12:54:47+04:00;1;9cc727f41ce61a46fd1b99f34c0372c4b7d0b8f0;Merge branch 'master' into 3741-nargs-as-tuple
2013-10-25 17:07:01+04:00;1;049aff87ba6f73186f4d32c7f5dc7df403a31e65;Implement nargs canonicalization in the FunctionClass metaclass
2013-10-26 20:54:13+02:00;1;35d30c8da769ab6b27aa39d8fc352c96631e87e5;Merge branch 'master' into issu694_test_wester_pablo
2013-10-27 18:38:56+04:00;1;8d93dd0757f7759b7116986dedb0cff59490cc25;Merge branch 'master' into 3265-eval-lt-fix
2013-10-28 11:01:32+04:00;1;38e70780e34a7eb15ac021082cd51f33cfae38a2;Merge branch 'master' into 2555-residue
2013-11-05 20:49:35+01:00;1;cc8624486c95b98bfe7ceccf01c9565ee69426fe;Merge branch 'master' into tensor_numpy
2013-11-10 12:51:33+04:00;1;6000179e6f8979f441138cb7800bf43ae0b03c53;Merge branch 'master' into 2085-bounded-x-limit
2013-11-10 12:56:58+04:00;1;024afc558db0371353fc80a6bcf0728ce0750884;"Merge branch 'master' into pr343-fix

Conflicts:
	sympy/assumptions/tests/test_query.py"
2013-11-10 13:35:52+04:00;1;91bae57ab043a2292ea02901f6a1d445e01a3be5;"Merge branch 'master' into 2625-complex-comparison-meijerint

Conflicts:
	sympy/core/tests/test_sets.py
	sympy/integrals/meijerint.py"
2013-11-12 22:48:50+01:00;1;f99cd63857e9825aabac6b1bcdbc5960e752cfe6;merged master
2013-11-13 23:29:06-08:00;1;1a26af1de2624e7e2cd20e90d214c87f647176b0;"Merge branch 'master' of git://github.com/sympy/sympy into 3563_multiset

Just updating my tree to get latest code."
2013-11-13 23:29:06-08:00;1;1a26af1de2624e7e2cd20e90d214c87f647176b0;"Merge branch 'master' of git://github.com/sympy/sympy into 3563_multiset

Just updating my tree to get latest code."
2013-11-15 00:13:09+04:00;1;a06fffc097f24b53c0dd47a9a964fc2ba265b5e2;"Merge branch 'master' into logo

Conflicts:
	doc/Makefile"
2013-11-16 16:27:03-07:00;1;1a8f6ef1be24b3ef5d18971413eb1d26a524ea92;"Merge branch 'master' into release_update

Conflicts:
	.mailmap"
2013-11-16 16:27:03-07:00;1;1a8f6ef1be24b3ef5d18971413eb1d26a524ea92;"Merge branch 'master' into release_update

Conflicts:
	.mailmap"
2013-11-16 16:27:03-07:00;7;1a8f6ef1be24b3ef5d18971413eb1d26a524ea92;"Merge branch 'master' into release_update

Conflicts:
	.mailmap"
2013-11-16 16:27:03-07:00;1;1a8f6ef1be24b3ef5d18971413eb1d26a524ea92;"Merge branch 'master' into release_update

Conflicts:
	.mailmap"
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;7;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;4;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-27 10:18:56-07:00;1;7e3090f742021bd76df4963307f066be65b942fd;"Update mpmath to 0.18-a1

The paths haven't been adapted yet."
2013-12-30 15:38:44-05:00;1;1e1acdf28bd3dc4b331afc704a1c9d56aef9de6a;"Refactored sympy.core.relational.

Broke out logic from the Relational class into subclasses.  Simplified the
logic without modifying it.  Eliminated the helper functions, replacing with
aliases to the relevant classes.  Added docstrings for Relational, Equality,
and Unequality."
2014-01-16 21:18:47-06:00;1;e9a27ff469f556e382f7f3dce71c8296987dbcac;Fix whitespace issues in mpmath
2014-01-16 21:18:47-06:00;1;e9a27ff469f556e382f7f3dce71c8296987dbcac;Fix whitespace issues in mpmath
2014-01-16 21:18:47-06:00;1;e9a27ff469f556e382f7f3dce71c8296987dbcac;Fix whitespace issues in mpmath
2014-01-16 21:18:47-06:00;1;e9a27ff469f556e382f7f3dce71c8296987dbcac;Fix whitespace issues in mpmath
2014-01-16 21:18:47-06:00;7;e9a27ff469f556e382f7f3dce71c8296987dbcac;Fix whitespace issues in mpmath
2014-01-16 21:18:47-06:00;4;e9a27ff469f556e382f7f3dce71c8296987dbcac;Fix whitespace issues in mpmath
2014-01-16 21:18:47-06:00;1;e9a27ff469f556e382f7f3dce71c8296987dbcac;Fix whitespace issues in mpmath
2014-01-24 23:30:36-06:00;1;39bd0357bdb48abc0d7ad7f6724343df8d7fbef6;"give normal_lines a numerical option

Also, all solutions have to be checked since if None is
returned in checksol for a test of assumptions, e.g. that
a solution is real, then that solution will be returned.
We don't want that here so we check the numerical value
but keep the symbolic one (unless prec is given)."
2014-01-25 15:26:37-08:00;1;43053e196c4126f51852ef3f7e273c1bbc8d4ad7;"Merge pull request #2828 from smichr/ellipse

Ellipse"
2014-01-25 20:13:55-05:00;1;c95de512693e588ef769ca8bee3977cc010ee65a;Merge branch 'master' into issue-2769
2014-01-30 18:42:02+05:18;1;c322cbf3fde021ea1c16936c78200df1a8479593;Merge branch 'master' of https://github.com/sympy/sympy into vectormove
2014-02-01 10:43:57-05:00;1;bf1f578b9feff6c8155961afd9b293e383f75e7a;Fixed merge conflict.
2014-02-15 22:09:39-06:00;1;15cd7f14bfc803519c33c995531a737ed96f1f74;"Merge pull request #2784 from asmeurer/mpmath-0.18

Update mpmath to 0.18"
2014-02-15 22:09:39-06:00;1;15cd7f14bfc803519c33c995531a737ed96f1f74;"Merge pull request #2784 from asmeurer/mpmath-0.18

Update mpmath to 0.18"
2014-02-15 22:09:39-06:00;1;15cd7f14bfc803519c33c995531a737ed96f1f74;"Merge pull request #2784 from asmeurer/mpmath-0.18

Update mpmath to 0.18"
2014-02-15 22:09:39-06:00;1;15cd7f14bfc803519c33c995531a737ed96f1f74;"Merge pull request #2784 from asmeurer/mpmath-0.18

Update mpmath to 0.18"
2014-02-23 14:28:16-06:00;1;5406cfd91769e49d4b6b73618ae7f4580778da5f;Merge branch 'master' into xtothex
2014-02-23 14:28:16-06:00;1;5406cfd91769e49d4b6b73618ae7f4580778da5f;Merge branch 'master' into xtothex
2014-02-23 14:28:16-06:00;1;5406cfd91769e49d4b6b73618ae7f4580778da5f;Merge branch 'master' into xtothex
2014-02-23 14:28:16-06:00;1;5406cfd91769e49d4b6b73618ae7f4580778da5f;Merge branch 'master' into xtothex
2014-02-23 14:28:16-06:00;1;5406cfd91769e49d4b6b73618ae7f4580778da5f;Merge branch 'master' into xtothex
2014-02-23 14:28:16-06:00;1;5406cfd91769e49d4b6b73618ae7f4580778da5f;Merge branch 'master' into xtothex
2014-02-23 14:28:16-06:00;1;5406cfd91769e49d4b6b73618ae7f4580778da5f;Merge branch 'master' into xtothex
2014-03-27 15:18:57+01:00;1;c21bd3cf084f9da7817e1aee6e1815c1938e5acc;Merge branch 'master' into tensor_substitute_bug
2014-03-27 15:18:57+01:00;1;c21bd3cf084f9da7817e1aee6e1815c1938e5acc;Merge branch 'master' into tensor_substitute_bug
2014-03-27 15:18:57+01:00;1;c21bd3cf084f9da7817e1aee6e1815c1938e5acc;Merge branch 'master' into tensor_substitute_bug
2014-03-27 15:18:57+01:00;1;c21bd3cf084f9da7817e1aee6e1815c1938e5acc;Merge branch 'master' into tensor_substitute_bug
2014-03-27 15:18:57+01:00;1;c21bd3cf084f9da7817e1aee6e1815c1938e5acc;Merge branch 'master' into tensor_substitute_bug
2014-04-03 19:21:05-05:00;1;165f9e5bb1f30fc73897b2db768efd98ca241378;Merge branch 'master' into newassump
2014-04-03 19:21:05-05:00;1;165f9e5bb1f30fc73897b2db768efd98ca241378;Merge branch 'master' into newassump
2014-04-03 19:21:05-05:00;1;165f9e5bb1f30fc73897b2db768efd98ca241378;Merge branch 'master' into newassump
2014-04-03 19:21:05-05:00;1;165f9e5bb1f30fc73897b2db768efd98ca241378;Merge branch 'master' into newassump
2014-04-03 19:21:05-05:00;1;165f9e5bb1f30fc73897b2db768efd98ca241378;Merge branch 'master' into newassump
2014-04-13 18:13:04+02:00;1;bfa2b86591b128849645707fa07d064337918b67;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-04-13 18:13:04+02:00;1;bfa2b86591b128849645707fa07d064337918b67;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-04-13 18:13:04+02:00;1;bfa2b86591b128849645707fa07d064337918b67;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-04-13 18:13:04+02:00;1;bfa2b86591b128849645707fa07d064337918b67;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-04-13 18:13:04+02:00;1;bfa2b86591b128849645707fa07d064337918b67;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-05-03 15:20:52-04:00;1;30d804fc2719cbc96280060d2efff273f94fc5e4;Re-enable term sorting in odesimp()
2014-05-05 20:42:32+05:18;2;c432cabf0709cacbb217d6382067accff3648283;"Merge branch 'master' into Fix_issues_#7342_#7343

Rebase over 'master' after merging #7448.

Conflicts:
	sympy/solvers/diophantine.py
	sympy/solvers/tests/test_diophantine.py"
2014-05-20 15:36:09-05:00;2;dd6fc693fc0ad9684cf6dab3bb5b842906396654;merge with master
2014-06-08 06:53:45-04:00;2;79f3570b89af66116de721b06c69c3496ce3c184;"Replace ""except:"" with ""except Exception:""

Fixes #5669

Most changed, but not all; a few looked like they belonged being bare.
In particular, mpmath is not affected, nor tests."
2014-06-08 06:53:45-04:00;1;79f3570b89af66116de721b06c69c3496ce3c184;"Replace ""except:"" with ""except Exception:""

Fixes #5669

Most changed, but not all; a few looked like they belonged being bare.
In particular, mpmath is not affected, nor tests."
2014-06-08 06:53:45-04:00;2;79f3570b89af66116de721b06c69c3496ce3c184;"Replace ""except:"" with ""except Exception:""

Fixes #5669

Most changed, but not all; a few looked like they belonged being bare.
In particular, mpmath is not affected, nor tests."
2014-06-18 21:38:40+04:00;2;221d645e79efcc27eeac18ab77010b7754572cce;"Merge pull request #7576 from clsn/bare_except

Replace ""except:"" with ""except Exception:"""
2014-06-18 21:38:40+04:00;1;221d645e79efcc27eeac18ab77010b7754572cce;"Merge pull request #7576 from clsn/bare_except

Replace ""except:"" with ""except Exception:"""
2014-06-18 21:38:40+04:00;2;221d645e79efcc27eeac18ab77010b7754572cce;"Merge pull request #7576 from clsn/bare_except

Replace ""except:"" with ""except Exception:"""
2014-06-20 20:31:24+05:18;2;8c56d402e258fcdaa849a53773c3b7bde04a889b;Merge branch 'master' of https://github.com/sympy/sympy into basicvector
2014-06-20 20:31:24+05:18;1;8c56d402e258fcdaa849a53773c3b7bde04a889b;Merge branch 'master' of https://github.com/sympy/sympy into basicvector
2014-06-20 20:31:24+05:18;2;8c56d402e258fcdaa849a53773c3b7bde04a889b;Merge branch 'master' of https://github.com/sympy/sympy into basicvector
2014-06-24 08:59:21+05:18;2;ed0be80664d800d1d54d0c3eb0842001e82fca4b;Remove merge conflicts
2014-06-24 08:59:21+05:18;1;ed0be80664d800d1d54d0c3eb0842001e82fca4b;Remove merge conflicts
2014-06-24 08:59:21+05:18;2;ed0be80664d800d1d54d0c3eb0842001e82fca4b;Remove merge conflicts
2014-06-25 16:04:53-06:00;2;71624b8c25b40ab30eedd124ac7d9f6e94769581;Merge remote-tracking branch 'refs/remotes/upstream/master'
2014-06-25 16:04:53-06:00;1;71624b8c25b40ab30eedd124ac7d9f6e94769581;Merge remote-tracking branch 'refs/remotes/upstream/master'
2014-06-25 16:04:53-06:00;2;71624b8c25b40ab30eedd124ac7d9f6e94769581;Merge remote-tracking branch 'refs/remotes/upstream/master'
2014-06-25 16:17:40-06:00;2;22217eb2007e7e637c96ebedc243b9701de81f4e;Cleanup
2014-06-29 18:52:45+04:00;2;c1730ac6a2cbf2e3238774eb962f47f4fa84fdc6;Merge branch 'master' into raoulb-trig
2014-06-29 18:52:45+04:00;1;c1730ac6a2cbf2e3238774eb962f47f4fa84fdc6;Merge branch 'master' into raoulb-trig
2014-06-29 18:52:45+04:00;2;c1730ac6a2cbf2e3238774eb962f47f4fa84fdc6;Merge branch 'master' into raoulb-trig
2014-06-30 09:44:42+02:00;2;4ca7b2e797e27eb33fa2c59ce1a6c80b527c01ba;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	doc/src/modules/physics/index.rst"
2014-06-30 09:44:42+02:00;1;4ca7b2e797e27eb33fa2c59ce1a6c80b527c01ba;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	doc/src/modules/physics/index.rst"
2014-06-30 09:44:42+02:00;2;4ca7b2e797e27eb33fa2c59ce1a6c80b527c01ba;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	doc/src/modules/physics/index.rst"
2014-07-02 05:28:09+05:18;2;96496420fd4e86d3beec699d8da01ac135e0b08d;Merge https://github.com/sympy/sympy into plane
2014-07-02 05:28:09+05:18;1;96496420fd4e86d3beec699d8da01ac135e0b08d;Merge https://github.com/sympy/sympy into plane
2014-07-02 05:28:09+05:18;2;96496420fd4e86d3beec699d8da01ac135e0b08d;Merge https://github.com/sympy/sympy into plane
2014-07-01 20:32:53-05:00;2;71e77cdaadce8aae679fe2799f69733ab0f57056;Merge branch 'master' into LagrangeMerge
2014-07-01 20:32:53-05:00;1;71e77cdaadce8aae679fe2799f69733ab0f57056;Merge branch 'master' into LagrangeMerge
2014-07-01 20:32:53-05:00;2;71e77cdaadce8aae679fe2799f69733ab0f57056;Merge branch 'master' into LagrangeMerge
2014-07-08 21:40:41+05:18;1;d86f737d11b75165d1a050f4636be90b6e9222cd;Added new orientation methods to CoordSysCartesian
2014-07-08 21:40:41+05:18;1;d86f737d11b75165d1a050f4636be90b6e9222cd;Added new orientation methods to CoordSysCartesian
2014-07-11 12:25:41+05:18;1;86e6eeef2c22e1441ab4201e037b3118b3d084aa;Rectified simplify bug
2014-07-14 16:09:13-06:00;1;c8fe131fb034bd8326ed36b36d7ffd16029b285c;Add fastcache as an optional depency.  Use fastcache for travis tests
2014-07-19 09:05:49-07:00;1;cba01485059c200cb693db1e36ad4cebe10f6358;"Merge pull request #7566 from srjoglekar246/basicvector

Basic Vector framework"
2014-07-19 09:05:49-07:00;2;cba01485059c200cb693db1e36ad4cebe10f6358;"Merge pull request #7566 from srjoglekar246/basicvector

Basic Vector framework"
2014-07-20 19:43:59-05:00;1;bbf859a13a614c12aaa37c9ff0b96cc584464955;Merge remote-tracking branch 'upstream/master' into LinearizeLagrange
2014-07-20 19:43:59-05:00;2;bbf859a13a614c12aaa37c9ff0b96cc584464955;Merge remote-tracking branch 'upstream/master' into LinearizeLagrange
2014-07-24 09:48:57+05:18;1;35c4fb9bf2158666d665c044a4525bc016ad9071;Merge https://github.com/sympy/sympy into plane
2014-07-24 09:48:57+05:18;2;35c4fb9bf2158666d665c044a4525bc016ad9071;Merge https://github.com/sympy/sympy into plane
2014-07-25 13:44:44-05:00;1;ae3014b3215f2a010467498e1e90d79db80679d5;"Merge branch 'master' into MechanicsImprovements

Conflicts:
	sympy/physics/mechanics/functions.py
	sympy/physics/mechanics/kane.py
	sympy/physics/mechanics/lagrange.py"
2014-07-25 13:44:44-05:00;2;ae3014b3215f2a010467498e1e90d79db80679d5;"Merge branch 'master' into MechanicsImprovements

Conflicts:
	sympy/physics/mechanics/functions.py
	sympy/physics/mechanics/kane.py
	sympy/physics/mechanics/lagrange.py"
2014-07-27 15:00:52-04:00;1;44b9635e359ea37bc022824f0db2d36658c7123b;misc
2014-07-28 11:53:27+05:18;1;b815b0a668c5f122d9c1761268faf1c53149a423;"Merge pull request #3 from smichr/geom

misc changes"
2014-07-30 13:15:45-04:00;1;5162de4a7f2767744205856cc6627dba695e8919;"Merge pull request #7733 from akshayah3/plane

Added more Tests to the Plane class."
2014-07-31 01:21:50+05:18;1;e0d487727d83f00197406c74804f5202ae3104cc;Merge branch 'master' of https://github.com/sympy/sympy into orienters
2014-07-31 19:10:25+05:18;1;67335dc20ab3d3555ae04485c97bbd50c1baa264;Merge branch 'master' of https://github.com/sympy/sympy into dyadicvector
2014-07-08 11:51:42-05:00;1;a6f583765039dda2c9181773a1dd9318448fd7ba;enumerate cases more clearly in Pow._eval_power
2014-08-02 12:36:38-05:00;1;c62993daae60eb1d9b04a67b9781cccc31a60b68;"Merge branch 'master' into simplify-dispatch

Conflicts:
	sympy/simplify/simplify.py"
2014-08-02 12:36:38-05:00;1;c62993daae60eb1d9b04a67b9781cccc31a60b68;"Merge branch 'master' into simplify-dispatch

Conflicts:
	sympy/simplify/simplify.py"
2014-08-02 12:36:38-05:00;1;c62993daae60eb1d9b04a67b9781cccc31a60b68;"Merge branch 'master' into simplify-dispatch

Conflicts:
	sympy/simplify/simplify.py"
2014-08-02 16:02:25-06:00;1;fb1999d54dc98f2cfc154e1e9d84c3fab5fcf3b5;Merge branch 'sympy_up' into fastcache_pr
2014-08-02 16:02:25-06:00;1;fb1999d54dc98f2cfc154e1e9d84c3fab5fcf3b5;Merge branch 'sympy_up' into fastcache_pr
2014-08-02 16:02:25-06:00;2;fb1999d54dc98f2cfc154e1e9d84c3fab5fcf3b5;Merge branch 'sympy_up' into fastcache_pr
2014-08-05 07:05:01-05:00;1;f863b349f99d60fa6ab3c9ee53400145c1fc9eb7;"Merge pull request #7638 from smichr/pow2

consolidate exp._eval_power and Pow._eval_power"
2014-08-05 23:06:47+05:18;1;e8d1b3252f9883b3795dd106a0b53c8efa9bafc1;Merge branch 'master' of https://github.com/sympy/sympy into orienters
2014-08-09 18:47:23+02:00;1;8f2314f399f30f310cedb5668502dbe664b2cf4b;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-08-09 18:47:23+02:00;1;8f2314f399f30f310cedb5668502dbe664b2cf4b;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-08-09 18:47:23+02:00;1;8f2314f399f30f310cedb5668502dbe664b2cf4b;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-08-09 18:47:23+02:00;1;8f2314f399f30f310cedb5668502dbe664b2cf4b;"Merge branch 'master' of git://github.com/sympy/sympy into units

Conflicts:
	setup.py"
2014-08-14 12:00:51+04:00;1;719aeaa6708e02d9196bfbc87fc63029e93395bf;Merge branch 'master' into raoulb-trig
2014-08-14 12:00:51+04:00;1;719aeaa6708e02d9196bfbc87fc63029e93395bf;Merge branch 'master' into raoulb-trig
2014-08-14 12:00:51+04:00;1;719aeaa6708e02d9196bfbc87fc63029e93395bf;Merge branch 'master' into raoulb-trig
2014-08-14 12:00:51+04:00;1;719aeaa6708e02d9196bfbc87fc63029e93395bf;Merge branch 'master' into raoulb-trig
2014-08-16 20:55:30+04:00;1;a9efae9f179eb6675e8d2db0a63970d474b2857c;Typecast Poly to PurePoly in RoofOf._new, fixes #7876
2014-08-24 13:56:25-05:00;1;bee839304e3ede6ad2d949c417cc54881249a7b2;"Merge pull request #7879 from skirpichev/7876-fix

Typecast Poly to PurePoly in RoofOf._new"
2014-08-27 20:49:26-05:00;1;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-08-27 20:49:26-05:00;1;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-08-27 20:49:26-05:00;1;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-08-27 20:49:26-05:00;2;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-08-27 20:49:26-05:00;1;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-08-27 20:49:26-05:00;1;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-08-27 20:49:26-05:00;1;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-08-27 20:49:26-05:00;2;c861eff7b908e09ee81a100b017a8eb60c7b0339;Merge branch 'master' into newassump
2014-10-21 22:41:15-05:00;2;a6780510fc35e69970eb154f4765dca33429bd81;"8247: use minpoly in Expr._eval_is_zero

Only attempt this test if self is algebraic
with hopes that the test will then be successful and fast. There
are cases where something passed the is_algebraic test but still
raised the NotAlgebraic error in minpoly:

sympy/integrals/transforms.py"", line 1818, in
sympy.integrals.transforms.inverse_hankel_transform
Failed example:
    inverse_hankel_transform(ht, k, r, 0)
    Exception raised:
        Traceback (most recent call last):
        ...
    NotAlgebraic: exp_polar(0) doesn't seem to be an algebraic element"
2014-11-03 21:06:44-06:00;2;4c762db42751c966b7ac3704dbad0a949555730f;"move minpoly handling to is_negative and is_positive

Failures when trying to make this go in the is_zero routine were
catastrophic and random:

https://travis-ci.org/smichr/sympy/builds/39894250"
2014-11-06 06:12:45-06:00;3;29312686d60dfb4d61b87c2a60afdc82fc1f0319;"Merge pull request #8355 from smichr/8247

8247: use minpoly in Expr._eval_is_zero"
2014-11-06 23:54:38+00:00;3;e96f18544fad9e7f5b14dc3b183cface2d6ac35e;Merge remote-tracking branch 'origin/master' into nan_eq_ineq_raise_err
2014-11-16 14:17:27+05:18;1;7b208beabd00d4f3e617b0dc7e925e5a7e55e1d1;Added quick exit for floating int in as_int #8239
2014-11-18 15:02:29-06:00;1;427bc0d6931170461c65b70320674416f83a17e6;"Merge pull request #8459 from jugnu/22

fixes #8239"
2014-11-21 09:19:44-06:00;3;c7e7af1dbe32c61a0e8e0a43bc971589aa8cff31;merge with master
2014-11-21 09:19:44-06:00;1;c7e7af1dbe32c61a0e8e0a43bc971589aa8cff31;merge with master
2015-01-15 12:45:57+00:00;1;302497d960c0a9f692485827c6183d467ecda0ca;"Float: losslessly convert strings to high-precision Floats

Previously, the output of `sympify(<str>)` always gave precision
of 15, even if the string was much longer.  `N(<str>)` and Float
were similar.  For Float, a user could always to `Float(str, '')`
to auto select the precision.  This is good but perhaps not ideal
for `sympify(str)` (which ultimately calls `Float(str)` without
the nullstring.

The new behaviour is all of sympify, N, and Float will now default
to a minimum precision of 15 when converting from a string (thus
preserving previous behaviour).  But when given a long string
they can use additional precision automatically.

This is accomplished with a new choice of the `prec` kwarg in the
Float constructor: `prec='min15'` uses a minimum precision of 15
but can use higher for strings, where is behaves like the null
string.  This new choice is made the default.

Fixes #8821."
2015-01-18 09:42:05-05:00;1;d12404067b1ae75ac1b5af123c2bd0c4c8372d10;"Merge pull request #8826 from cbm755/highpre_str

  Float: losslessly convert strings to high-precision Floats"
2015-02-01 01:36:11+05:18;1;1be64700c1063eff2b2747ce63ca03eac797b4a4;"Fixed incompatiblity with latest version of pyglet (1.2alpha1)

In earlier version of pyglet, `c_float` was defined in `pyglet.gl`
but in the latest version of pyglet (1.2alpha1) it is defined in
`pyglet.gl.gl`. This commit addresses this issue by adding a
try-except block that imports `cfloat` from this module."
2015-02-01 01:36:11+05:18;1;1be64700c1063eff2b2747ce63ca03eac797b4a4;"Fixed incompatiblity with latest version of pyglet (1.2alpha1)

In earlier version of pyglet, `c_float` was defined in `pyglet.gl`
but in the latest version of pyglet (1.2alpha1) it is defined in
`pyglet.gl.gl`. This commit addresses this issue by adding a
try-except block that imports `cfloat` from this module."
2015-02-18 09:21:52-05:00;1;88ceb11653217c735e2c06a41f79fed978f6cebe;"Merge branch 'master' into digitslist

use as_int instead of sympify

fixed conflicts in
	doc/src/modules/ntheory.rst
	sympy/ntheory/factor_.py
	sympy/ntheory/tests/test_ntheory.py"
2015-02-25 14:26:13-06:00;1;3a45e0c3eaf1409a7b2b0d3290b08c2f3cb3dfc3;"Merge pull request #8921 from AadityaNair/c_float_Compatibility

Fixed incompatiblity with latest version of pyglet (1.2alpha1)"
2015-02-25 14:26:13-06:00;1;3a45e0c3eaf1409a7b2b0d3290b08c2f3cb3dfc3;"Merge pull request #8921 from AadityaNair/c_float_Compatibility

Fixed incompatiblity with latest version of pyglet (1.2alpha1)"
2015-03-02 19:20:51+05:18;3;92bb79ea83291831d3af123185a0bb65ee5cdf56;Merge branch 'master' of https://github.com/sympy/sympy into vectordoc
2015-03-02 19:20:51+05:18;1;92bb79ea83291831d3af123185a0bb65ee5cdf56;Merge branch 'master' of https://github.com/sympy/sympy into vectordoc
2015-03-02 19:20:51+05:18;1;92bb79ea83291831d3af123185a0bb65ee5cdf56;Merge branch 'master' of https://github.com/sympy/sympy into vectordoc
2015-03-02 19:20:51+05:18;1;92bb79ea83291831d3af123185a0bb65ee5cdf56;Merge branch 'master' of https://github.com/sympy/sympy into vectordoc
2015-03-02 19:20:51+05:18;1;92bb79ea83291831d3af123185a0bb65ee5cdf56;Merge branch 'master' of https://github.com/sympy/sympy into vectordoc
2015-03-02 19:20:51+05:18;1;92bb79ea83291831d3af123185a0bb65ee5cdf56;Merge branch 'master' of https://github.com/sympy/sympy into vectordoc
2015-03-19 03:38:42+05:18;3;ab0c2486bc7c24004b9aec05ad95c768414e1645;Fixed merge conflicts
2015-03-19 03:38:42+05:18;1;ab0c2486bc7c24004b9aec05ad95c768414e1645;Fixed merge conflicts
2015-03-19 03:38:42+05:18;1;ab0c2486bc7c24004b9aec05ad95c768414e1645;Fixed merge conflicts
2015-03-19 03:38:42+05:18;1;ab0c2486bc7c24004b9aec05ad95c768414e1645;Fixed merge conflicts
2015-03-19 03:38:42+05:18;1;ab0c2486bc7c24004b9aec05ad95c768414e1645;Fixed merge conflicts
2015-03-24 01:26:57+05:18;1;1f9ad8104e885caf989be4823f91951a1601d8bf;"Updated code based on suggestions.

Earlier:
```
>>> x = Symbol('x', positive=True, integer=True)
>>> y = Symbol('y', positive=True, integer=True)
>>> (x*y).is_prime
False
```

Now
```
>>> x = Symbol('x', positive=True, integer=True)
>>> y = Symbol('y', positive=True, integer=True)
>>> (x*y).is_prime
None
```"
2015-03-24 01:26:57+05:18;1;1f9ad8104e885caf989be4823f91951a1601d8bf;"Updated code based on suggestions.

Earlier:
```
>>> x = Symbol('x', positive=True, integer=True)
>>> y = Symbol('y', positive=True, integer=True)
>>> (x*y).is_prime
False
```

Now
```
>>> x = Symbol('x', positive=True, integer=True)
>>> y = Symbol('y', positive=True, integer=True)
>>> (x*y).is_prime
None
```"
2015-03-25 15:55:49-05:00;3;f13ed6d61273c30ee26be08b8505aa1bceef7991;"Merge pull request #68 from debugger22/aaron-assumptions

Update this branch with master, fix merge conflicts and replace deprecated is_bounded with is_finite"
2015-03-25 15:55:49-05:00;1;f13ed6d61273c30ee26be08b8505aa1bceef7991;"Merge pull request #68 from debugger22/aaron-assumptions

Update this branch with master, fix merge conflicts and replace deprecated is_bounded with is_finite"
2015-03-25 15:55:49-05:00;1;f13ed6d61273c30ee26be08b8505aa1bceef7991;"Merge pull request #68 from debugger22/aaron-assumptions

Update this branch with master, fix merge conflicts and replace deprecated is_bounded with is_finite"
2015-03-25 15:55:49-05:00;1;f13ed6d61273c30ee26be08b8505aa1bceef7991;"Merge pull request #68 from debugger22/aaron-assumptions

Update this branch with master, fix merge conflicts and replace deprecated is_bounded with is_finite"
2015-03-25 15:55:49-05:00;1;f13ed6d61273c30ee26be08b8505aa1bceef7991;"Merge pull request #68 from debugger22/aaron-assumptions

Update this branch with master, fix merge conflicts and replace deprecated is_bounded with is_finite"
2015-04-15 21:58:29-05:00;1;3d71c453547245bb903ef6ffd06e05af96e976d4;"Tested Point3D

Found a bug in the scale code, with the return statement, which is fixed
Found a bug in the transformation code, based on the Point code it should take a 4x4
transformation matrix. which is fixed"
2015-04-23 21:44:07-04:00;1;63aeeb38172fedba08db14332fb351ad27e56c1b;merged with latest master
2015-04-23 21:44:07-04:00;1;63aeeb38172fedba08db14332fb351ad27e56c1b;merged with latest master
2015-04-23 21:44:07-04:00;1;63aeeb38172fedba08db14332fb351ad27e56c1b;merged with latest master
2015-04-24 09:25:29-04:00;1;8b37e2067e09243304e87dc58c100dfbe08ee69f;Merge remote-tracking branch 'upstream/master' into fallingfactorial
2015-04-24 09:25:29-04:00;1;8b37e2067e09243304e87dc58c100dfbe08ee69f;Merge remote-tracking branch 'upstream/master' into fallingfactorial
2015-04-29 08:16:49+03:00;1;7bfeefbe80d0859ff3a99047d66bae86691c8ac1;Merge branch 'master' into algnum-print
2015-04-29 08:16:49+03:00;1;7bfeefbe80d0859ff3a99047d66bae86691c8ac1;Merge branch 'master' into algnum-print
2015-05-07 21:54:16-07:00;1;c82136305fda499f652d23df6d66ad7b25238181;"Merge pull request #9307 from mcdaniel67/testing

Tested Point3D"
2015-05-29 17:38:44+05:18;1;a708cd354192d519b5b25b1d82918a2768b9e04b;Merge branch 'master' of https://github.com/sympy/sympy into vectordoc
2015-05-30 15:41:18-07:00;1;c4ec6263b7a1ff589f58f39de8172e2e69de8880;"GeometricEntity now inherits from Set

Inheriting from Set allows GeometricEntity to
make use of sets.Union and sets.Intersection

Made `geometry` object compatable with `sets`

sympy.sets has Unions and Intersections, etc. This patch
adds a new class GeometrySet which is compatable with
sympy.sets and subclasses objects where appropriate.

This patch also starts a generalization to n-dimensions
with Point now arbitrary dimensional and automatic
subclassing to the new Point2D or Point3D where appropriate.

Added tests for `sets` interacting with `geometry`

Test Unions and Intersections of GeometrySets"
2015-06-05 21:53:52+05:18;1;b5abe2dddb7e1bb1ee517866dba244dca7856f45;Fix merge conflicts
2015-06-05 15:38:33-05:00;1;838b3bbd9683f9d895e88c61e36cf59a06736015;"Merge pull request #72 from debugger22/aaron-assumptions

Updated with master"
2015-06-07 23:26:10+02:00;1;e0b88416d099bef52dbd89862be04bb3ce530619;"Separate metaclass hierarchy from class hierarchy

ManagedProperties would use BasicMeta both as metaclass and superclass,
so __init__ and __new__ are called both for class and for object
creation. Such a situation confuses maintainers, libraries, and tools
alike.
FunctionClass had a similar condition, it used BasicMeta as metaclass
and ManagedProperties as superclass; it is now firmly a subclass of
ManagedProperties, i.e. a metaclass.

Also, BasicType served no real purpose anymore, so it was removed,
leaving BasicMeta as the root of the metaclass hierarchy.

The only non-metaclass code that needed a concomitant change was
`sympify()`: Metaclasses are not a ""standard sympifiable class""
anymore, which it was assuming in a test."
2015-06-08 12:10:11-05:00;1;918c1a16daaeb52fd3f901bd36035a56f4dba7b5;"Merge pull request #9484 from toolforger/metaclass-cleanup

[Needs Review] Separate metaclass hierarchy from class hierarchy"
2015-06-09 13:25:54-06:00;1;c964b359c0e9aedbd3625fcc707fa70528eb777e;"Merge pull request #9441 from siefkenj/master

GeometricEntities are now Sets"
2015-06-09 19:43:17-05:00;1;1ee9b293c26d494d9cfd717d849cdaeb725ad604;"Merge upstream with my fork

Conflicts:
	sympy/geometry/point.py
	sympy/geometry/point3d.py (removed)
I merged point.py by accepting all the changes made in the upstream master branch, then splicing in my changes to transform for Point2D/Point3D.
point3d.py was removed on master of sympy/sympy, so I removed mine to match as well. This /should/ resolve the conflicts."
2015-06-09 19:43:17-05:00;1;1ee9b293c26d494d9cfd717d849cdaeb725ad604;"Merge upstream with my fork

Conflicts:
	sympy/geometry/point.py
	sympy/geometry/point3d.py (removed)
I merged point.py by accepting all the changes made in the upstream master branch, then splicing in my changes to transform for Point2D/Point3D.
point3d.py was removed on master of sympy/sympy, so I removed mine to match as well. This /should/ resolve the conflicts."
2015-06-10 22:21:18+01:00;1;70be9cc131fa29e248399144b1d6c12754373576;Merge branch 'master' into tmp
2015-06-10 22:23:42+01:00;1;96156f530c8606c1a14b02fd66c1b540c30dd291;Merge remote-tracking branch 'origin/master' into dsolve_sys_fixes2
2015-06-10 22:23:42+01:00;1;96156f530c8606c1a14b02fd66c1b540c30dd291;Merge remote-tracking branch 'origin/master' into dsolve_sys_fixes2
2015-06-10 23:00:47+01:00;1;3588f2d19c9b01923266786d90f1aa43046c1ddd;Merge remote-tracking branch 'origin/master' into kevinvfix
2015-06-10 23:00:47+01:00;1;3588f2d19c9b01923266786d90f1aa43046c1ddd;Merge remote-tracking branch 'origin/master' into kevinvfix
2015-06-14 10:25:48+05:18;1;e8554a5c9f245b456cee76d09f517ab739cd48c1;Fix merge conflicts in ask.py
2015-06-14 16:36:23-07:00;1;1dd96b51f88267b2366de8bb4f3ed6f07b182cdb;Merge remote-tracking branch 'upstream/master'
2015-06-19 23:26:14+05:18;1;9eb3d551bc8b60061ce2fc42758fcdc810f5ec24;"splitting simplify.py

splitting simplify.py into smaller files"
2015-06-19 23:26:14+05:18;2;9eb3d551bc8b60061ce2fc42758fcdc810f5ec24;"splitting simplify.py

splitting simplify.py into smaller files"
2015-06-25 10:30:56+03:00;1;ef3e72e63439461746a8d4c2c04defde206ba059;"Merge pull request #9553 from gxyd/splitting

splitting simplify.py"
2015-06-25 10:30:56+03:00;2;ef3e72e63439461746a8d4c2c04defde206ba059;"Merge pull request #9553 from gxyd/splitting

splitting simplify.py"
2015-06-30 20:08:33+05:18;3;0b91578182ba3293ee8220093f8da38fb4c02814;"`invert_real` for sin and cos now operates correctly

invert_real(sin(x), y, x) returns imageset"
2015-07-07 20:48:02+03:00;1;d107a974f149244fae591c35eb77a3bb2c8852b6;"Merge branch 'master' into rootof

Conflicts:
	sympy/polys/tests/test_polytools.py"
2015-07-07 20:48:02+03:00;2;d107a974f149244fae591c35eb77a3bb2c8852b6;"Merge branch 'master' into rootof

Conflicts:
	sympy/polys/tests/test_polytools.py"
2015-07-11 10:56:09-05:00;1;c6ecbc13e13404fd0f9a3e017b7f06dd97aa404a;"autowrap: Don't fail if we can't delete the temporary directory

Fixes #8432."
2015-07-11 16:23:41-05:00;1;d29f329b38cf3722518b14c0e131b0b1f36b9e37;Merge branch 'master' into performance
2015-07-11 16:23:41-05:00;1;d29f329b38cf3722518b14c0e131b0b1f36b9e37;Merge branch 'master' into performance
2015-07-11 16:23:41-05:00;1;d29f329b38cf3722518b14c0e131b0b1f36b9e37;Merge branch 'master' into performance
2015-07-11 16:23:41-05:00;1;d29f329b38cf3722518b14c0e131b0b1f36b9e37;Merge branch 'master' into performance
2015-07-11 16:23:41-05:00;1;d29f329b38cf3722518b14c0e131b0b1f36b9e37;Merge branch 'master' into performance
2015-07-11 16:23:41-05:00;1;d29f329b38cf3722518b14c0e131b0b1f36b9e37;Merge branch 'master' into performance
2015-07-11 16:23:41-05:00;2;d29f329b38cf3722518b14c0e131b0b1f36b9e37;Merge branch 'master' into performance
2015-07-13 19:21:15-05:00;1;98e62970c731ee342fc66bd41aebe75ac6cf1432;"Merge pull request #9647 from asmeurer/autowrap-tempdir

autowrap: Don't fail if we can't delete the temporary directory"
2015-07-18 23:15:09+02:00;1;efd8b635297294a7f8f95ef1405f58cdd491d618;Allow preview to raise RuntimeError in test_preview.
2015-09-03 17:32:45-05:00;3;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;1;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;1;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;1;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;1;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;1;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;1;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;2;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-03 17:32:45-05:00;1;86f5829becc2dadfb3950f0e0dc7b866203f4a49;Merge branch 'master' into 0.7.6.1
2015-09-09 22:11:11+05:18;1;3cf8b057766ab24b78f61386ca0f43b87361cb47;"Build docs on Python3 : Update numpydoc

Signed-off-by: AMiT Kumar <dtu.amit@gmail.com>"
2015-10-02 10:06:11+05:18;1;7c4c82506ddea0b503823c0653a0cabf4201844d;"Merge pull request #9904 from aktech/numpydoc

Build docs on Python3 : Update numpydoc"
2015-09-10 17:04:32+05:18;2;c5957e8b839fe8fdd391012a79d695c1ad5532ae;"is_convergent function implementation

is_convergent added to `Sum` class

doctest fixes

tests more"
2015-09-11 15:52:37+05:18;1;1a114307eb5ac170163a64b19bcac3f778bf010d;Order function used
2015-10-02 11:27:56+05:18;2;e6025ff5872cd4d6dce042587109a16ce9794a9c;"Dirichlet test added

condition for Dirichlet test added"
2015-10-02 18:26:50+05:18;1;25020beed8843035d8c0ea6bd29fae8d1d46c4fc;"Piecewise functions convergence added

test case for Piecewise added and un-necessary test removed

changes to piecewise function

Infinity to NegativeInfinity convergence handling corrected

Docs corrected

dirichlet for swapped arguments"
2015-10-05 04:44:13+05:18;1;a9fb00aaa864fe1848cd42a526db198c505646a0;"NotImplementedError for more than one symbol convergence check

test @XFAILED for Dirichlet tests

SymPy logic used instead of Python logic

test removed from dirichlet test"
2015-10-07 22:07:59+03:00;3;6ef8db75733132eeae9cf7535971032165825134;"Merge pull request #9906 from gxyd/is_convergent_func

is_convergent method implementation for Sum"
2015-10-11 12:36:34+05:18;1;91cab49e0622e4913fe05d0028f6f528a2b2c566;"is_convergent() for Product

Also bug in error message of `is_convergent()` for Sum
fixed.

limit(abs(expr), sym, oo) may not exist in some cases
hence it can useful to have the limit(expr, sym, oo) value
checking. For example Sum(log(1/n), (n, 2, oo)) can not be
checked using lim(abs(expr)) but can be checked using the
lim(expr) value."
2015-10-21 09:19:43+03:00;1;42fccc47a96fdf8d71e6767104489d3c54845442;"Merge pull request #9982 from gxyd/product_convergence

is_convergent() for Product"
2015-10-27 22:03:01+05:18;1;495827284fb823d8f439a6afe2ffeee9e35de2eb;Merge branch 'master' into ring_series_puiseux
2015-10-27 22:03:01+05:18;4;495827284fb823d8f439a6afe2ffeee9e35de2eb;Merge branch 'master' into ring_series_puiseux
2015-11-28 22:42:07-06:00;1;a9bec3abe714caf8ed9237d440043a15a9beffb0;Merge remote-tracking branch 'upstream/master'
2015-11-28 22:42:07-06:00;4;a9bec3abe714caf8ed9237d440043a15a9beffb0;Merge remote-tracking branch 'upstream/master'
2015-11-28 22:42:07-06:00;1;a9bec3abe714caf8ed9237d440043a15a9beffb0;Merge remote-tracking branch 'upstream/master'
2015-12-19 15:42:50+02:00;1;83c728723978f459de2131608a220fa09ed5a9e6;"Merge branch 'master' into rootof

Conflicts:
	sympy/polys/tests/test_polytools.py
	sympy/sets/tests/test_sets.py"
2015-12-19 15:42:50+02:00;4;83c728723978f459de2131608a220fa09ed5a9e6;"Merge branch 'master' into rootof

Conflicts:
	sympy/polys/tests/test_polytools.py
	sympy/sets/tests/test_sets.py"
2015-12-19 15:42:50+02:00;1;83c728723978f459de2131608a220fa09ed5a9e6;"Merge branch 'master' into rootof

Conflicts:
	sympy/polys/tests/test_polytools.py
	sympy/sets/tests/test_sets.py"
2015-12-24 13:14:54+01:00;1;570a4c0a441e93834bcbf8fb8c7edb16d7b82a3c;"Merge branch 'master' into experiment_integrate_indexed

# Conflicts:
#	sympy/core/tests/test_args.py"
2015-12-24 13:14:54+01:00;4;570a4c0a441e93834bcbf8fb8c7edb16d7b82a3c;"Merge branch 'master' into experiment_integrate_indexed

# Conflicts:
#	sympy/core/tests/test_args.py"
2016-01-25 21:02:14-06:00;1;ed1d99f5904b90bab3f28cdc546c019c0e3b7ac0;watch for UnboundLocalError in CRootOf._eval_evalf
2016-01-27 15:11:47-06:00;1;961a75bd0adc40fc1d405ffdae9f49b52d96bed0;"Merge pull request #10476 from smichr/ss1

modify as_independent: quicker exit and preserve zero property of dependent part"
2016-01-31 23:10:32-08:00;2;772a2e46bcdfeb80bb4db7c369fc194471f71821;Simplified matmul defs and fixed tests for Py versions.
2016-01-31 23:10:32-08:00;1;772a2e46bcdfeb80bb4db7c369fc194471f71821;Simplified matmul defs and fixed tests for Py versions.
2016-02-02 21:13:03+05:18;1;7daa16fdeecaa509ca49c1c52c79cd39b85b9e30;Merge branch 'master' of https://github.com/sympy/sympy into point-dist
2016-02-03 16:57:58+05:18;1;72e29984132bfe920ac5d1d2ab260ea44282e136;Simplification of simple finite sets
2016-02-04 14:44:11-05:00;1;8afcc0968557f61232615b353ad1068f89f6bcfc;Merge branch 'master' into rm-galgebra
2016-02-04 14:44:11-05:00;1;8afcc0968557f61232615b353ad1068f89f6bcfc;Merge branch 'master' into rm-galgebra
2016-02-07 22:14:41+01:00;1;6072c3459ceae9c755a506dd537ce615c2de4f96;sympify objects with shape and flat attributes to Array
2016-02-09 16:26:28+05:18;1;4eccdc20fdad5a7e384b3d7d0f888cd0bc01f3ee;"Merge pull request #3 from sympy/master

updating my master branch"
2016-02-09 22:25:43+05:18;1;bd8fc71a38de89b08f38a4c971569bf4d0cb9c58;Changed according to #10518
2016-02-12 10:40:24-06:00;1;96ce006b62d0b14148434323b7626cc81d82881e;Merge branch 'master' into jit
2016-02-16 10:37:28-05:00;1;bf2cb0f8434808f624ea3824a551276e90ff617c;Merge branch 'master' into eval_refine
2016-02-16 10:10:26-08:00;1;0de8ee2e1e0cb5544ca4472073af44150218a8db;Merge remote-tracking branch 'upstream/master'
2016-02-16 15:00:48-05:00;2;6b07c2a991f698bbe4df5fdaf0bccdad34dd4f73;"Merge pull request #10504 from moorepants/matrix-operator

Added support for the Python 3.5 matrix multiplication operator."
2016-02-16 15:00:48-05:00;1;6b07c2a991f698bbe4df5fdaf0bccdad34dd4f73;"Merge pull request #10504 from moorepants/matrix-operator

Added support for the Python 3.5 matrix multiplication operator."
2016-02-17 08:37:45+01:00;2;d818db28da8f04d7f1b0c11a1b5536117f2fe1f5;"Merge branch 'master' into rm-unused-imports

* master:
  Revert ""Merge pull request #9765 from debugger22/rm-autosimp-abs""
  do not import from core/all
  Simplified matmul defs and fixed tests for Py versions.
  Added support for the Python 3.5 matrix multiplication operator."
2016-02-17 08:37:45+01:00;1;d818db28da8f04d7f1b0c11a1b5536117f2fe1f5;"Merge branch 'master' into rm-unused-imports

* master:
  Revert ""Merge pull request #9765 from debugger22/rm-autosimp-abs""
  do not import from core/all
  Simplified matmul defs and fixed tests for Py versions.
  Added support for the Python 3.5 matrix multiplication operator."
2016-02-19 16:45:47-06:00;2;cad4fa6bf96b9157f6306e0a1f7615de1e79aa4d;merged
2016-02-19 16:45:47-06:00;1;cad4fa6bf96b9157f6306e0a1f7615de1e79aa4d;merged
2016-02-20 10:23:55-06:00;2;6a410ceaf92372bad6bf5bad0f0fc075ea5557d2;Merge remote-tracking branch 'upstream/master' into callback
2016-02-20 10:23:55-06:00;1;6a410ceaf92372bad6bf5bad0f0fc075ea5557d2;Merge remote-tracking branch 'upstream/master' into callback
2016-02-25 23:31:52-06:00;2;80bd60661f997e5b2137cbfbd1f7699c858db9b2;"JIT - raise exception in multiple expressions case

The cse module supports returning multiple expressions, but the JIT
code only supports one.  Raise an exception in this case.
Also add an exception when unknown symbols are encountered in expressions
(most likely they were forgotten in the argument list)."
2016-02-26 12:04:25-06:00;1;0d37005607ce25a49e47551ed841bad6b59bec2b;JIT - raise exception with unknown callback type
2016-03-07 16:14:41-05:00;1;131aab40385c38c2f9bc8ce32a4123fb49266294;"Merge pull request #10640 from markdewing/callback

Accelerated callbacks for integration routines"
2016-03-09 15:04:20-05:00;1;92ca9bce72d0a4dc58d548872b61bd95ae8b15f6;Merge branch 'master' into 1.0
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;4;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;3;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;2;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;2;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;2;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-16 14:47:07+01:00;1;8b69ba57b223c53079036aeedec8fd9c812ffff4;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-03-18 14:51:08-05:00;2;f52d735e9ed2874ecd4e7eed334f1a4d65b07dde;"Merge branch 'master' into wip

Conflicts:
	sympy/printing/pretty/tests/test_pretty.py"
2016-03-18 14:51:08-05:00;1;f52d735e9ed2874ecd4e7eed334f1a4d65b07dde;"Merge branch 'master' into wip

Conflicts:
	sympy/printing/pretty/tests/test_pretty.py"
2016-03-18 14:51:08-05:00;1;f52d735e9ed2874ecd4e7eed334f1a4d65b07dde;"Merge branch 'master' into wip

Conflicts:
	sympy/printing/pretty/tests/test_pretty.py"
2016-03-27 09:10:23+05:18;1;2c288450ae48e8c6d15913ec6c158861c8b482ae;"Merge pull request #1 from sympy/master

dfd"
2016-03-29 13:14:03-04:00;1;ebbd200499522e8a6fd651c3afab399527364dde;Merge branch 'master' into set-iter
2016-03-29 13:14:57-04:00;1;3a2bbf2baf7ad15453ee7d240929c67d5a9fae5e;Merge branch 'master' into diff-subs
2016-03-29 13:14:57-04:00;2;3a2bbf2baf7ad15453ee7d240929c67d5a9fae5e;Merge branch 'master' into diff-subs
2016-03-29 13:14:57-04:00;1;3a2bbf2baf7ad15453ee7d240929c67d5a9fae5e;Merge branch 'master' into diff-subs
2016-03-29 13:14:57-04:00;1;3a2bbf2baf7ad15453ee7d240929c67d5a9fae5e;Merge branch 'master' into diff-subs
2016-03-29 13:14:57-04:00;1;3a2bbf2baf7ad15453ee7d240929c67d5a9fae5e;Merge branch 'master' into diff-subs
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;4;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;3;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;2;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;2;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;2;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;2;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;2;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;13;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-03-31 00:33:44-05:00;1;acc62669534a9fc804762db29308a1737cc9c8a2;"Merge branch 'master' into HEAD

- used as_int in a few routines where it wasn't used before
- made is_square function public
- add quick for 0 and 1 (this is only necessary for use outside
  of this module since such values are already screened out
  before this function is called.

Conflicts:
	sympy/ntheory/primetest.py
	sympy/ntheory/residue_ntheory.py
	sympy/ntheory/tests/test_factor_.py"
2016-04-04 21:27:02+02:00;2;866ebdf75c4cdb5fe4331872b1fcc4661b95fde9;Merge branch 'master' into variance_covariance_symbolic
2016-04-04 21:27:02+02:00;1;866ebdf75c4cdb5fe4331872b1fcc4661b95fde9;Merge branch 'master' into variance_covariance_symbolic
2016-04-04 21:27:02+02:00;1;866ebdf75c4cdb5fe4331872b1fcc4661b95fde9;Merge branch 'master' into variance_covariance_symbolic
2016-04-04 21:27:02+02:00;1;866ebdf75c4cdb5fe4331872b1fcc4661b95fde9;Merge branch 'master' into variance_covariance_symbolic
2016-04-11 19:54:38-05:00;1;2151798cf917db42687e6cb7ea9c847fbb647cd2;diop: imports and helpers
2016-04-29 13:30:51-05:00;2;3deef8890de62637e97eb56c4d2b9f3f2ed0b6e1;"Merge pull request #10997 from smichr/dioph

Diophantine update"
2016-05-01 22:45:45-04:00;1;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;4;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;1;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;1;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;2;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;1;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;1;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;2;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;2;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;2;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-01 22:45:45-04:00;1;8457598bcb2ad3832b1dd99953d7b6d2501b0109;Merge remote-tracking branch 'refs/remotes/sympy/master'
2016-05-05 15:32:28+05:18;2;642d2b08f7f55eed31947ec987989a32c69b2ca3;Merge branch 'master' into implementation_FreeGroup
2016-05-05 15:32:28+05:18;1;642d2b08f7f55eed31947ec987989a32c69b2ca3;Merge branch 'master' into implementation_FreeGroup
2016-05-05 15:32:28+05:18;1;642d2b08f7f55eed31947ec987989a32c69b2ca3;Merge branch 'master' into implementation_FreeGroup
2016-05-05 15:32:28+05:18;2;642d2b08f7f55eed31947ec987989a32c69b2ca3;Merge branch 'master' into implementation_FreeGroup
2016-05-06 02:20:01+05:18;2;14ca756dbbf68c4db25b13b2f9ec12d07274c1ed;Resolved the merged confilts
2016-05-06 15:33:28+05:18;2;41bfc4377a301f9150292c6a8c6eb6fef82a2f37;Merge remote-tracking branch 'sympy/master' into patch-for-#11062
2016-05-10 04:48:56-05:00;1;5685c115e0f5fc004c4d5cd1c3964cd15cdfb01b;"use Fraction for Rational handling; gcd for igcd"
2016-05-13 23:16:14-04:00;2;f74946da4fbc7e756c2934308ef7c212564603e7;"Merge remote-tracking branch 'refs/remotes/origin/master' into reduced_totient

merged latest master and fixed merge conflicts"
2016-05-15 11:18:54-04:00;1;08e43b41eed0f5f1b9daaaa5a243ccc7f2239e31;ufuncify: Multiple output argument support
2016-05-15 16:09:04-05:00;1;d9eb2cc0fc1e1efc524693db1ceaaa6386b05a38;"Merge pull request #11093 from smichr/fractions

use builtin Fractions to help with Rational and igcd"
2016-05-17 11:02:16+05:18;1;8f5df0a620a68ffbba6e559b6026f92495f01f47;Merge branch 'master' into rewrite_piecewise
2016-05-17 11:58:21-04:00;1;e2cd2e819c0a23aea459a01b8830fd72e2ebb721;Merge branch 'master' into errorprop
2016-05-17 11:58:21-04:00;2;e2cd2e819c0a23aea459a01b8830fd72e2ebb721;Merge branch 'master' into errorprop
2016-05-26 10:55:58+05:18;1;a76f4715d6e6ff689ca3a0476ffa3524bcf50639;resolve conflicts
2016-05-28 23:00:50+03:00;1;da1973f66a3e1b7f9b112d96ac702073b1b57e8f;Merge remote-tracking branch 'origin_sympy/master' into 8257
2016-05-28 23:00:50+03:00;2;da1973f66a3e1b7f9b112d96ac702073b1b57e8f;Merge remote-tracking branch 'origin_sympy/master' into 8257
2016-06-04 21:27:37-04:00;1;35fb94aa80c3019f5f5b21563d869bcf28cd5894;Merge remote-tracking branch 'refs/remotes/sympy/master' into find_linear_recurrence
2016-06-05 21:37:56-04:00;1;ac7f8acb43e46d232a0e09be251366353cbaa123;Merge branch 'master' of github.com:sympy/sympy
2016-06-07 12:25:43-04:00;1;f9eb3b326bc38bf7fcd84334e1825dc4424bc0e6;Merge branch 'master' into set-print
2016-06-08 13:27:40-05:00;1;05308bdda7baffbab9fcedfdbc684b41e90ab18d;"Merge pull request #11112 from richardotis/master

ufuncify: Multiple output argument support"
2016-06-09 21:23:16-05:00;1;28273e24cebf7aa1fd10dbc0ec787c2ec05d34a4;Merge remote-tracking branch 'upstream/master'
2016-06-09 21:23:16-05:00;2;28273e24cebf7aa1fd10dbc0ec787c2ec05d34a4;Merge remote-tracking branch 'upstream/master'
2016-06-09 21:23:16-05:00;1;28273e24cebf7aa1fd10dbc0ec787c2ec05d34a4;Merge remote-tracking branch 'upstream/master'
2016-06-09 21:23:16-05:00;1;28273e24cebf7aa1fd10dbc0ec787c2ec05d34a4;Merge remote-tracking branch 'upstream/master'
2016-06-09 21:23:16-05:00;2;28273e24cebf7aa1fd10dbc0ec787c2ec05d34a4;Merge remote-tracking branch 'upstream/master'
2016-06-09 21:23:16-05:00;1;28273e24cebf7aa1fd10dbc0ec787c2ec05d34a4;Merge remote-tracking branch 'upstream/master'
2016-06-13 12:37:34+05:18;1;6e9e9e6f3b3faaf2c84dc70320a92a983537b605;resolve merge conflicts
2016-06-14 01:39:27-04:00;1;c9e0f0d897999edeb702ee3ddf5d8b239f06f14f;Merge branch 'master' into dotproduct
2016-06-14 01:39:27-04:00;2;c9e0f0d897999edeb702ee3ddf5d8b239f06f14f;Merge branch 'master' into dotproduct
2016-06-14 01:39:27-04:00;1;c9e0f0d897999edeb702ee3ddf5d8b239f06f14f;Merge branch 'master' into dotproduct
2016-06-15 15:06:40+02:00;1;bc5a037e8bfabb6ce918aaafeaf24163dc248e3e;Merge branch 'master' into rewrite_as_probability
2016-07-01 19:16:16+05:18;1;396a9d0542161cac05ad9741962212c535ec1eaf;Merge branch 'master' of github.com:sympy/sympy into pydy
2016-07-01 19:16:16+05:18;1;396a9d0542161cac05ad9741962212c535ec1eaf;Merge branch 'master' of github.com:sympy/sympy into pydy
2016-07-03 13:05:19+05:18;1;ad54f8ae1d4f1c55d31372c494cd5796c019a545;added a preliminary support for additional symbols
2016-07-08 08:41:51+03:00;1;b0ad7adff30b2d5531e40922a17657f13314def1;"Merge pull request #11330 from shubhamtibra/bugs_functionality

Making the module holonomic usable"
2016-07-09 20:59:57+05:18;1;6d73c535748c95f80ef05bd00d24576247bec82c;"Merge branch 'master' into implement_SingularityFunc

Conflicts:
	sympy/printing/tests/test_latex.py"
2016-07-09 20:59:57+05:18;1;6d73c535748c95f80ef05bd00d24576247bec82c;"Merge branch 'master' into implement_SingularityFunc

Conflicts:
	sympy/printing/tests/test_latex.py"
2016-07-09 23:56:26+05:18;1;70b60dd96a1b27c2662b508b9486aa89f5653a22;"Merge branch 'master' into SF_integration

Conflicts:
	sympy/printing/tests/test_latex.py"
2016-07-09 23:56:26+05:18;1;70b60dd96a1b27c2662b508b9486aa89f5653a22;"Merge branch 'master' into SF_integration

Conflicts:
	sympy/printing/tests/test_latex.py"
2016-07-10 11:37:57+05:18;1;5de788747f40361efa29e7eee7cf2131f173c7e0;"Merge branch 'master' into patch1

Conflicts:
	sympy/combinatorics/fp_groups.py"
2016-07-10 14:06:18+05:18;1;684d1b310bcd38a9652f52f2adf3ea15bc155311;"Merge pull request #7 from gxyd/patch1

Patch1 Merge master"
2016-07-11 00:12:04+05:18;1;4d7e4c121b37467a48ba43a46f5635fb0309b231;Merge branch 'SF_integration' into loading
2016-07-16 18:38:11+03:00;1;fc8352c435556fb6a545f1b4f0428b3b8367a7de;Merge branch 'master' of github.com:sympy/sympy into 9983
2016-07-16 18:38:11+03:00;1;fc8352c435556fb6a545f1b4f0428b3b8367a7de;Merge branch 'master' of github.com:sympy/sympy into 9983
2016-07-16 18:38:11+03:00;1;fc8352c435556fb6a545f1b4f0428b3b8367a7de;Merge branch 'master' of github.com:sympy/sympy into 9983
2016-07-17 22:12:46+02:00;1;a8d6e6b216e0eb57b37d68522b02cd8dad37720f;Merge branch 'master' into subs_series
2016-07-21 12:45:04+03:00;1;f9d420223b7c0504cdbd1057aa1cd964ec09cf9b;"Merge pull request #11277 from kshitij10496/periodicity

Implementing method to determine the period of some trigonometric functions"
2016-07-22 11:28:07+05:18;1;a8162ac6d1c8eed6dd6a35987dfd0002e410f5ca;resolve conflicts
2016-07-23 13:01:23+05:18;1;8787d84336249dccdd8a51d1c8e086b72d3897cd;Merge branch 'master' into pydy
2016-07-23 13:01:23+05:18;1;8787d84336249dccdd8a51d1c8e086b72d3897cd;Merge branch 'master' into pydy
2016-07-28 11:39:25-04:00;1;5ebb197fe2affd63cc8e11f30a361b1f76ccce1a;Merge branch 'master' into euler
2016-07-28 11:39:25-04:00;1;5ebb197fe2affd63cc8e11f30a361b1f76ccce1a;Merge branch 'master' into euler
2016-07-28 11:39:25-04:00;1;5ebb197fe2affd63cc8e11f30a361b1f76ccce1a;Merge branch 'master' into euler
2016-07-28 11:39:25-04:00;2;5ebb197fe2affd63cc8e11f30a361b1f76ccce1a;Merge branch 'master' into euler
2016-07-28 11:39:25-04:00;1;5ebb197fe2affd63cc8e11f30a361b1f76ccce1a;Merge branch 'master' into euler
2016-08-02 14:23:24-04:00;1;338e7f740abbd8802a9a7ef16afe08df12d46f85;test ability to add simplifying sum
2016-05-19 20:15:01+05:18;1;5d13951219ee1f642bb4b011a25a23a5c984e913;else part
2016-05-22 18:03:34+05:18;1;cf6e3ad32021d60f00a324e0678106e91c2edd29;"substitution function added.

substitution method modified"
2016-06-20 19:32:28+05:18;2;9b22b9b52d71cdf446edd0babbf5e4953ada09ca;more testcases added.
2016-06-27 17:54:29+05:18;1;a80ad3929465dad43ff3c1c9a3bedc830e10cc92;using unrad to remove radicals mostly sqrt
2016-08-20 18:24:19+05:18;1;9032a4ae1182d3b919a61e40dc85988f4d328a09;added support for inequalties based on their range
2016-08-20 21:21:38+05:18;1;5d7ae3693791fa0c46673db97580c9319ad17d21;Merge branch 'master' into doc_example
2016-09-04 10:29:20+05:18;1;e69958f19a8f5c928d6c30cb54bace6e26530271;using permute=True, few changes for consistent soln for even powers
2016-09-07 19:37:49+02:00;1;332776d92150934ad339ccb7477dca32bcdb9678;Merge branch 'master' into as-finite-diff-method
2016-09-07 19:37:49+02:00;1;332776d92150934ad339ccb7477dca32bcdb9678;Merge branch 'master' into as-finite-diff-method
2016-09-07 12:43:26-05:00;1;5748590f101886ee05fc1c1d8dc91434edc5630d;Merge remote-tracking branch 'upstream/master' into generalize
2016-09-07 12:43:26-05:00;1;5748590f101886ee05fc1c1d8dc91434edc5630d;Merge remote-tracking branch 'upstream/master' into generalize
2016-10-14 12:08:50-04:00;1;ba056ded4de312a99411ee203eb31a8ef9bfe644;Merge branch 'master' into dsolve-ics
2016-10-14 12:08:50-04:00;1;ba056ded4de312a99411ee203eb31a8ef9bfe644;Merge branch 'master' into dsolve-ics
2016-11-10 15:17:21+01:00;1;c99670db3335f3676b846faa8dbaec414015c6b6;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-11-10 15:17:21+01:00;1;c99670db3335f3676b846faa8dbaec414015c6b6;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-11-10 15:17:21+01:00;1;c99670db3335f3676b846faa8dbaec414015c6b6;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-11-10 15:17:21+01:00;2;c99670db3335f3676b846faa8dbaec414015c6b6;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-11-10 15:17:21+01:00;1;c99670db3335f3676b846faa8dbaec414015c6b6;Merge remote-tracking branch 'origin/master' into fix_all_uppercase_latex_symbols
2016-12-12 18:38:08-07:00;1;f217fbc9f3ae1bac240df2dc2fee2fb3d00182e2;Merge branch 'master' into set-print
2016-12-12 18:38:08-07:00;1;f217fbc9f3ae1bac240df2dc2fee2fb3d00182e2;Merge branch 'master' into set-print
2016-12-12 18:38:08-07:00;1;f217fbc9f3ae1bac240df2dc2fee2fb3d00182e2;Merge branch 'master' into set-print
2016-12-16 18:04:58+03:00;1;342ac1114f9859c303a006203b684930bd10f409;Merge remote-tracking branch 'origin_sympy/master' into 9983
2016-12-16 11:29:34-06:00;1;dfa73872baf8f80487e56cb469ac3db04cc2a718;"Merge pull request #11334 from Shekharrajak/gsoc_diophantine_even_powers

diophantine: permute signs to get missing solutions"
2016-12-16 21:34:37+01:00;1;a514babb267c331f418b4a114938e342b7ed0bd5;Merge master
2016-12-17 17:43:44+05:18;1;c05eb9ec0a72e7f2089e28e10456bccc58c61421;Tests rechecked
2016-12-17 23:29:39-06:00;2;851828ec1a155be0bd6a581b338d63668115fafb;"Split up BaseMatrix

	Separated many method from BaseMatrix into categories
	and implemented classes for those categories which can
	function idependently."
2016-12-18 14:29:44+05:18;1;0f655a30e44d46cc345a630a783a9f7a4ef6f6ef;Q.prime recorrected
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;4;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;3;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;1;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;3;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-20 11:35:44+01:00;2;98e377bbd37f8d2d1bc6277709d08c72b76e1b3a;"Merge branch 'master' into Rcode
tried to resolve conflicts, have to wait for the tests"
2016-12-23 16:41:22+05:18;2;ef189f9025a4227f5dcaffa56dd9cd5d2105ea57;"Make corrections and rewrite tests

Prvent mixup due to another unrelated commit

Use sympy.external.import_module to import numpy

Revert deleted space

Make corrections and rewrite tests."
2016-12-25 09:06:20-08:00;2;86f076b5eb6c1d202fd5c3eb3a3e2a0786be52a0;"Merge pull request #11954 from siefkenj/commonmatrix

Matrix Cleanup Phase 1"
2016-12-28 01:46:10-06:00;2;302f8ebd737767afbb2c701d1054671ec8a74381;Merge branch 'master' into hyperexpand-place
2016-12-28 01:46:10-06:00;1;302f8ebd737767afbb2c701d1054671ec8a74381;Merge branch 'master' into hyperexpand-place
2016-12-28 01:00:04-07:00;2;f5872fb6d3ea60b68cda07dd63a67a9370461304;Merge branch 'master' into set-print
2016-12-28 01:00:04-07:00;1;f5872fb6d3ea60b68cda07dd63a67a9370461304;Merge branch 'master' into set-print
2016-12-30 21:02:02+05:18;2;2d5543284ee3da9412fd23203b183ba6a4644761;changes
2016-12-30 21:10:02+05:18;2;8c1de45cd73d9c6708f6f05e2c92e21e4d3d1350;synced
2016-12-30 21:10:02+05:18;1;8c1de45cd73d9c6708f6f05e2c92e21e4d3d1350;synced
2017-01-02 11:10:47+05:18;2;3f75c1e49a763339eb3d11e8858d4f4d334d13de;Merge remote-tracking branch 'upstream/master'
2017-01-02 11:10:47+05:18;1;3f75c1e49a763339eb3d11e8858d4f4d334d13de;Merge remote-tracking branch 'upstream/master'
2017-01-02 11:26:17+05:18;2;d3f1c3becdce23d231b0b2c9f06344d0e9e885f4;Merge remote-tracking branch 'upstream/master' into typos
2017-01-02 11:26:17+05:18;1;d3f1c3becdce23d231b0b2c9f06344d0e9e885f4;Merge remote-tracking branch 'upstream/master' into typos
2017-01-09 22:10:38+05:18;2;58114bebbfb095ce84fe036e3232066a49f1603c;Merge branch 'master' into update_gsoc_info
2017-01-13 00:18:41-06:00;3;9c60ca463b8dba0220609a773cc5af6c32492b0a;Separate matrix arithmetic
2017-01-13 00:18:41-06:00;2;9c60ca463b8dba0220609a773cc5af6c32492b0a;Separate matrix arithmetic
2017-01-19 17:10:01-05:00;2;8a955c8523c18523d8d88404c133b77dd3f64e14;Merge branch 'master' into nsolve
2017-01-21 00:58:13+05:18;2;6bf000901aca626e1d68de31e0f4ab766d91d5b7;Implement requested changes.
2017-01-21 09:55:30-08:00;2;84fb2b91636093ff48bce771633dc2b49df0c495;"Repalced exceptions in printing module and modified bare exceptions in
matrices module

Replaced exception in _print_RandomDomain() function of the printing
module with if-else logic. Also modified bare except in classof() function
of matrices module"
2017-01-31 21:47:02+05:18;1;1672e580dea03ac9e6dfc3b49de41796e21c4958;changes done
2017-01-31 21:49:36+02:00;1;bf9a9639c87c893dbad9dba656042287fc044a81;"Merge pull request #12099 from Abdullahjavednesar/matrices

Improve singular matrix power performance"
2017-02-08 13:35:08+05:18;1;ab8fc56fa717a5a74261691c8e6e7d5880521db6;Merge branch 'master'into func
2017-02-08 14:04:07+05:18;3;2058299b855f90a10d4096a0c63e8950014594d0;Merge branch 'master' into Cquality
2017-02-13 21:13:42-05:00;1;e3f07aa86db81daed421aea3eceef01c85d638df;Merge branch 'master' into Float-prec-fix
2017-02-18 21:33:10-05:00;3;1150fdc2b141ef21977e8a7d47dd890803a37bbb;Merge branch 'master' into dsolve-ics
2017-02-27 12:29:30+01:00;3;1d6cef2080f06cc6d30efb1fe506ae3782c86df0;Merge branch 'master' into expm1-log1p
2017-02-27 12:29:30+01:00;1;1d6cef2080f06cc6d30efb1fe506ae3782c86df0;Merge branch 'master' into expm1-log1p
2017-03-05 13:15:12+05:18;1;95e5ab9eab75109bfff6ed63bef6c99f04c60280;Fix Merge conflicts
2017-03-11 11:37:33+05:18;3;543ca34f8878af236ef98ef88ed35e340d424272;Merge branch 'master' into core
2017-03-11 11:37:33+05:18;1;543ca34f8878af236ef98ef88ed35e340d424272;Merge branch 'master' into core
2017-03-17 12:27:40-04:00;3;e287b317ff34a48f0d42aa9a7d2fac7902c60cc4;"Merge pull request #12042 from siefkenj/commonmatrix

Matrix Cleanup Step 2"
2017-03-17 12:27:40-04:00;2;e287b317ff34a48f0d42aa9a7d2fac7902c60cc4;"Merge pull request #12042 from siefkenj/commonmatrix

Matrix Cleanup Step 2"
2017-03-21 12:35:42+05:18;3;966e791d56f92bc2c8408ad3a6298fe6859b95b9;Merge branch 'master' of https://github.com/sympy/sympy into bareiss
2017-03-21 12:35:42+05:18;2;966e791d56f92bc2c8408ad3a6298fe6859b95b9;Merge branch 'master' of https://github.com/sympy/sympy into bareiss
2017-03-23 22:49:51-04:00;2;7a34d3b5ad1a72856b2b85ba7cf4ba310a183294;"Merge pull request #11666 from ArifAhmed1995/core

sympify : Added support for translating basic numpy datatypes"
2017-03-24 10:45:19-05:00;2;dc28d5e33f6615176023c26eea6262aa08440918;Merge remote-tracking branch 'upstream/master' into commonmatrix2
2017-03-24 10:45:48-05:00;2;df7f8ad95d40fb27d4c3369940fb36236485f03c;Merge branch 'commonmatrix2' into commonmatrix5
2017-03-24 22:57:48+05:18;2;0943a7deefc9c2d92b9e45c784d8142303a3e344;Merge remote-tracking branch 'upstream/master'
2017-03-29 19:37:13-05:00;2;11776a1edffcf8babff28064a628ca4ddc197bc1;merged
2017-03-29 19:37:13-05:00;5;11776a1edffcf8babff28064a628ca4ddc197bc1;merged
2017-03-29 19:37:13-05:00;2;11776a1edffcf8babff28064a628ca4ddc197bc1;merged
2017-03-30 12:03:13+02:00;2;8140c574e99ec263d0742a6c264a1cf5504d4301;Merge branch 'master' into fix_unitsystems
2017-03-30 12:03:13+02:00;3;8140c574e99ec263d0742a6c264a1cf5504d4301;Merge branch 'master' into fix_unitsystems
2017-03-30 12:03:13+02:00;2;8140c574e99ec263d0742a6c264a1cf5504d4301;Merge branch 'master' into fix_unitsystems
2017-04-02 00:59:32+05:18;2;e96785c57a3329e2d47c150e14e389cffbd4fe09;Merged with master and resolved conflict
2017-04-02 00:59:32+05:18;3;e96785c57a3329e2d47c150e14e389cffbd4fe09;Merged with master and resolved conflict
2017-04-02 00:59:32+05:18;2;e96785c57a3329e2d47c150e14e389cffbd4fe09;Merged with master and resolved conflict
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;4;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;2;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;5;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;2;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;2;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;1;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;2;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;2;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-03 16:50:03+02:00;2;5ac46a313381147b21afbbdd1ad139238b86a61a;merged from master
2017-04-04 09:31:05+02:00;1;ed73500adfd231d958d40b5218d515f588b60523;"combinatorics.Permutation: Proper classmethods to allow inheritance

The Permutation class lacked of a proper use of Python classmethods.
This made it nearly impossible to create subclasses as several
methods (including the constructor) explicitly returned new Permutation
instances (instead instances of the actual subclass).
Furthermore, tests are extended to check proper subclassing.

Beware: The Permutation._af_new classmethod (staticmethod previously) is
still used in some other modules to create Permutation instances.
This probably should also be changed!"
2017-04-04 19:39:17-05:00;1;0c308620a70b33b928eaa1049aa2fa0024955e04;"concrete/summations.py

concrete/tests/test_sums_products.py

	- modified imports
    - make integral test for convergent Sum more robust: we basically
      want to know if the expression approaches (eventually) 0 as
      infinity is approached. From the first part of the function we
      know that the upper limit is oo, so if we can find the maxima
      then we can see if the expression decreases after the last maxima.
    - move test out of XFAIL"
2017-04-05 07:07:19-05:00;1;c981457281f8ac5fed44d4dd3f8b5619f56b6f51;"Merge pull request #12471 from smichr/10671

use domain when solving inequalities"
2017-04-06 12:14:27+03:00;1;a0f997ad56eafa99925153d673074a3116c3a230;"Merge pull request #12489 from FabianBall/12465_permutation_subclassing

combinatorics.Permutation: Proper use of classmethods to allow inheritance"
2017-04-07 22:35:14+02:00;1;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;1;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;1;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;1;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;2;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;1;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;5;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;2;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;2;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;1;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;2;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-07 22:35:14+02:00;1;456549fc7484f01b8acf05512105d538fa71bd70;merged master
2017-04-09 11:11:06-05:00;1;683e2c1b57e13e2971dd074e9578989082bbcd53;"Matrix Cleanup Stage 5

	Added a `MatrixReductions` class which houses row/column
	operations and row reduction.  The new default algorithm
	waits to normalize pivot rows until the end of the reduction.
	This gives a tremendous speed improvement."
2017-04-09 11:14:18-05:00;1;b82993a18ecfc7f8234c141110913c48b7599f40;Merge remote-tracking branch 'upstream/master' into commonmatrix6
2017-04-09 11:14:18-05:00;1;b82993a18ecfc7f8234c141110913c48b7599f40;Merge remote-tracking branch 'upstream/master' into commonmatrix6
2017-04-09 17:23:51-07:00;1;51eaa9369dba163a9f765509578fe40c8564b0a9;Merge branch 'master' into lu_decomp_extend
2017-04-09 17:23:51-07:00;1;51eaa9369dba163a9f765509578fe40c8564b0a9;Merge branch 'master' into lu_decomp_extend
2017-04-09 17:23:51-07:00;2;51eaa9369dba163a9f765509578fe40c8564b0a9;Merge branch 'master' into lu_decomp_extend
2017-04-09 17:23:51-07:00;3;51eaa9369dba163a9f765509578fe40c8564b0a9;Merge branch 'master' into lu_decomp_extend
2017-04-09 17:23:51-07:00;2;51eaa9369dba163a9f765509578fe40c8564b0a9;Merge branch 'master' into lu_decomp_extend
2017-04-10 11:03:19+02:00;1;07ec06355234f5475da260f387fad8da282a2c87;"Merge pull request #12507 from Upabjojr/fix-10295

Fix 10295"
2017-04-12 20:39:31+05:18;1;15884edbb8976d70998a6a7bbd37e4c54467f025;Merge branch 'master' of https://github.com/sympy/sympy into typo
2017-04-12 20:39:31+05:18;1;15884edbb8976d70998a6a7bbd37e4c54467f025;Merge branch 'master' of https://github.com/sympy/sympy into typo
2017-04-12 20:39:31+05:18;1;15884edbb8976d70998a6a7bbd37e4c54467f025;Merge branch 'master' of https://github.com/sympy/sympy into typo
2017-04-12 20:39:31+05:18;2;15884edbb8976d70998a6a7bbd37e4c54467f025;Merge branch 'master' of https://github.com/sympy/sympy into typo
2017-04-12 20:39:31+05:18;3;15884edbb8976d70998a6a7bbd37e4c54467f025;Merge branch 'master' of https://github.com/sympy/sympy into typo
2017-04-12 20:39:31+05:18;2;15884edbb8976d70998a6a7bbd37e4c54467f025;Merge branch 'master' of https://github.com/sympy/sympy into typo
2017-04-20 16:56:31+02:00;1;ec782e95a6253a1f497b06d945e805e8615705fb;Merge branch 'master' into repair_is_tangent_ellipse
2017-05-11 19:51:07+03:00;1;5ea9e0239ae3c347374dde1351dee008079b4210;"Merge pull request #12521 from siefkenj/commonmatrix6

Matrix cleanup stage 5"
2017-05-17 11:25:00-07:00;1;fcc359d866bc1f35e3875caa7452e21dd2dfc800;Merge branch 'master' of https://github.com/sympy/sympy
2017-05-17 11:25:00-07:00;1;fcc359d866bc1f35e3875caa7452e21dd2dfc800;Merge branch 'master' of https://github.com/sympy/sympy
2017-05-17 11:25:00-07:00;1;fcc359d866bc1f35e3875caa7452e21dd2dfc800;Merge branch 'master' of https://github.com/sympy/sympy
2017-05-17 11:25:00-07:00;2;fcc359d866bc1f35e3875caa7452e21dd2dfc800;Merge branch 'master' of https://github.com/sympy/sympy
2017-05-17 11:25:00-07:00;4;fcc359d866bc1f35e3875caa7452e21dd2dfc800;Merge branch 'master' of https://github.com/sympy/sympy
2017-05-17 11:25:00-07:00;2;fcc359d866bc1f35e3875caa7452e21dd2dfc800;Merge branch 'master' of https://github.com/sympy/sympy
2017-05-17 11:29:18-07:00;1;85d174ab51cac1f88d1994cc75ea1ac6fbbf7198;Merge branch 'master' into lu_decomp_extend
2017-05-17 11:29:18-07:00;1;85d174ab51cac1f88d1994cc75ea1ac6fbbf7198;Merge branch 'master' into lu_decomp_extend
2017-05-19 16:10:21-04:00;1;a734dcbee184ecfc9c7e1c2f5d4bd7391f988cf5;Merge branch 'master' into issue#12649
2017-05-19 16:10:21-04:00;1;a734dcbee184ecfc9c7e1c2f5d4bd7391f988cf5;Merge branch 'master' into issue#12649
2017-05-19 16:10:21-04:00;1;a734dcbee184ecfc9c7e1c2f5d4bd7391f988cf5;Merge branch 'master' into issue#12649
2017-05-19 16:10:21-04:00;2;a734dcbee184ecfc9c7e1c2f5d4bd7391f988cf5;Merge branch 'master' into issue#12649
2017-05-19 16:10:21-04:00;6;a734dcbee184ecfc9c7e1c2f5d4bd7391f988cf5;Merge branch 'master' into issue#12649
2017-05-19 16:10:21-04:00;2;a734dcbee184ecfc9c7e1c2f5d4bd7391f988cf5;Merge branch 'master' into issue#12649
2017-06-05 14:15:01-05:00;8;2d91a29cf4498d7b675b2d3e0b9eeb49be3c8e1a;Split `matrices.py` into `matrices.py` and `common.py`
2017-06-08 21:29:04+03:00;1;5896d13933556d46d062df782842c3b7f2f96811;"Merge pull request #12708 from siefkenj/commonmatrix75

Matrix cleanup 6.5"
2017-06-09 11:16:27-05:00;8;4b6a7f5fbc8085dde6481078fd6ad007c5fb45a1;Added `common.py`
2017-06-09 20:48:54+02:00;1;b33b0a0a7039b0e446b5d7298b550ed8dddc1e3f;Merge branch 'master' into lame_coefficient
2017-06-09 20:46:48+01:00;1;1f2111bf1fd4444ad06ac1173bafaf089afba7ac;conflict resolution
2017-06-10 20:45:31+03:00;8;234823d404fa40cc7d1fa599b3932b099b3285bf;"Merge pull request #12725 from siefkenj/master

Split `matrices.py`"
2017-06-12 17:33:30+01:00;8;2d565fe1b7842ae71aafd44a2c0b3c47524e8d7b;conflict resolution
2017-06-13 21:04:31+02:00;8;09f4c7135a260c46368e9abd11244dc55b4640a6;Merge branch 'master' of git://github.com/sympy/sympy into codegen-ast-type
2017-06-14 22:11:49+01:00;8;51724b4413ed2009e4e026cb9bf281b6dacb4d5d;resolving conflicts
2017-06-19 14:09:27+01:00;8;eba80ce419c2adb2ceb4a57f7be7caa578fc78f0;resolve conflicts
2017-06-21 00:33:59-05:00;1;96bf633b2e709a93d5abc3c45fc11b7f7096dc4b;12775: simplify sqrt(2*r**2*I) as (r + I*r)
2017-06-22 16:49:10-04:00;1;4df4578054639a2a7732189add415c9f78dff195;"Merge branch 'master' into Expr_flatten_postprocessors

# Conflicts:
#	sympy/physics/units/quantities.py"
2017-06-22 16:49:10-04:00;8;4df4578054639a2a7732189add415c9f78dff195;"Merge branch 'master' into Expr_flatten_postprocessors

# Conflicts:
#	sympy/physics/units/quantities.py"
2017-06-23 01:30:39-04:00;1;90dad6d9b2428eac62d501e1afee430398c9b1cd;Try around dictionary access
2017-06-24 16:16:44-04:00;1;7efbee85cf49d767a11de8344b2b99b2b2460769;"Merge pull request #12508 from Upabjojr/Expr_flatten_postprocessors

Initial proposal for Expr construction postprocessors"
2017-06-26 16:34:45+05:18;1;1a8be1e807ea8f4e19c7abafcc9a71beeacd6f7c;implemented AlgebraicFunctionQ and ExpandCleanup
2017-06-26 18:54:25-05:00;1;bce119ace1b8a1357a727be19f6017018a473e44;Merge branch 'master' into invalid-escapes
2017-06-26 18:54:25-05:00;1;bce119ace1b8a1357a727be19f6017018a473e44;Merge branch 'master' into invalid-escapes
2017-06-26 18:54:25-05:00;1;bce119ace1b8a1357a727be19f6017018a473e44;Merge branch 'master' into invalid-escapes
2017-06-26 18:54:25-05:00;1;bce119ace1b8a1357a727be19f6017018a473e44;Merge branch 'master' into invalid-escapes
2017-06-26 18:54:25-05:00;2;bce119ace1b8a1357a727be19f6017018a473e44;Merge branch 'master' into invalid-escapes
2017-06-26 18:54:25-05:00;8;bce119ace1b8a1357a727be19f6017018a473e44;Merge branch 'master' into invalid-escapes
2017-06-26 18:54:25-05:00;2;bce119ace1b8a1357a727be19f6017018a473e44;Merge branch 'master' into invalid-escapes
2017-06-27 13:09:20+05:18;1;d2632dc69a14bd1c97a42c15d0cc52ddf2b022b3;resolved conflicts
2017-06-27 16:48:29+02:00;1;f55c90318bc062448d59da7c96fe3426b484d624;Merge branch 'master' into codegen-ast-type
2017-06-28 00:01:34+05:18;2;0dc60b79d7dbfa6cca4dac168dd7fa7b7e26367a;removed FreeQ() from cons()
2017-06-27 16:40:25-04:00;1;a83de079bd0eb7df4864adff197109f9c4a05198;Merge branch 'master' into Float-prec-fix
2017-06-27 16:40:25-04:00;1;a83de079bd0eb7df4864adff197109f9c4a05198;Merge branch 'master' into Float-prec-fix
2017-06-27 16:40:25-04:00;1;a83de079bd0eb7df4864adff197109f9c4a05198;Merge branch 'master' into Float-prec-fix
2017-06-27 16:40:25-04:00;1;a83de079bd0eb7df4864adff197109f9c4a05198;Merge branch 'master' into Float-prec-fix
2017-06-27 16:40:25-04:00;2;a83de079bd0eb7df4864adff197109f9c4a05198;Merge branch 'master' into Float-prec-fix
2017-06-27 16:40:25-04:00;8;a83de079bd0eb7df4864adff197109f9c4a05198;Merge branch 'master' into Float-prec-fix
2017-06-27 16:40:25-04:00;2;a83de079bd0eb7df4864adff197109f9c4a05198;Merge branch 'master' into Float-prec-fix
2017-06-27 17:21:43-04:00;1;e81f01ecfa19f64137246bf46f5494964746e95f;Merge branch 'master' into python-rational-optimizations
2017-06-27 17:21:43-04:00;8;e81f01ecfa19f64137246bf46f5494964746e95f;Merge branch 'master' into python-rational-optimizations
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;4;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;8;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;1;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-06-28 12:27:20-07:00;2;a5217fc665e9a996c193f0e1c8e481d81523384f;Fixed the merge conflict and updated tests.
2017-07-01 19:43:08-04:00;2;2089b469cf0e0bf77cfdb028f99a19f16575c769;"Revert ""Merge pull request #12711 from siefkenj/commonmatrix7""

This reverts commit 8bb2931b1b60845215a0263dcc1fd745238b89b5, reversing
changes made to 019e47b94dfe0f822913dcc6e193b26ac59fd1f0.

See discussion at https://github.com/sympy/sympy/issues/12389."
2017-07-02 01:16:38-05:00;2;9865348b70a18c2a0efa77c4a8773a0b42c4d067;"Merge pull request #12854 from asmeurer/matrix-deprecate-revert

Revert ""Merge pull request #12711 from siefkenj/commonmatrix7"""
2017-07-02 03:31:43-04:00;2;1d285056a6c1c5ecf44186bbc5221a6396609ba2;Merge branch '1.1' of github.com:sympy/sympy into 1.1
2017-07-03 10:09:16+02:00;2;7c9f4de328ef9c1b692e5a76315d2baa7c8c1a1f;Merge branch '1.1' into update_docs
2017-07-06 21:48:55-04:00;2;9ab4041226f8f472d278f393b92469cd4926ecee;"Merge pull request #12840 from sympy/1.1

SymPy 1.1 release"
2017-07-07 21:02:57-04:00;1;0426a2f6467eb11f27275d859c42859b53633f4d;"Fix a test failure on 32-bit systems

See #12902. Doesn't fix the other failure reported there."
2017-07-11 10:54:25+05:18;1;8b5d11e562ac8ef750add5759d98c2a216755d1b;modified MemberQ and completed PiecewiseLinearQ
2017-07-11 16:25:11+05:18;1;bfe6974de5baa8d6afc99d539f1b3461acc7dbda;resolved
2017-07-11 16:06:09-05:00;1;3b80516ed159cbda8109ad4169d37948cb52fa59;"Merge pull request #1 from sympy/master

pull upstream changes"
2017-07-11 16:06:09-05:00;8;3b80516ed159cbda8109ad4169d37948cb52fa59;"Merge pull request #1 from sympy/master

pull upstream changes"
2017-07-12 18:39:29+05:18;1;daf40712eac1a6265fb385293c24db312cae65f2;added TryPureTanSubst, TryTanhSubst, TryPureTanhSubst
2017-07-12 17:36:59-05:00;1;cf2505dfba14aba9d28a6891448f685120372dd6;Fix for #12950
2017-07-13 14:38:04+05:18;1;6e7155ba1d9b8b60407560471e64bcaa822f4832;resolved
2017-07-13 20:42:06+03:00;2;cf8f167b73e8c3515661208034f5dc342c0ad51a;merge master
2017-07-13 15:31:13-05:00;1;95a8714db64dc7494f0bf2584c082546e0c8b389;Merge branch 'master' of https://github.com/micahscopes/sympy
2017-07-13 15:31:13-05:00;8;95a8714db64dc7494f0bf2584c082546e0c8b389;Merge branch 'master' of https://github.com/micahscopes/sympy
2017-07-16 01:09:38+02:00;2;b8bc6d6ff1fffb111ebcd562f71075388caff42a;Merge branch 'master' into pythonprinter
2017-07-16 21:38:53+03:00;2;8480f800c8c040879193923af2e38d4a1fdbd235;resolve conflicts
2017-07-19 12:46:46-04:00;1;90039458a1bdd8861bca2f43995d264ba37c1f5e;"Merge pull request #12957 from siefkenj/fixes1.1.1

Fix Matrix Regressions"
2017-07-19 12:51:30-04:00;1;05c8e4533cdb23f919924df8693975c562b494fd;"Merge pull request #12909 from asmeurer/32-bit

Fix a test failure on 32-bit systems"
2017-07-20 22:34:58+02:00;1;8e025f15f132a54198d89533dd3a8754464cc3f5;"Make Pow.subs to not use fractional powers for noncommutative objects

Manipulations involving fractional powers of noncommutative objects are
incorrect for many use cases, and sympy should not do them by itself.
Change Pow.subs code to limit substitutions to integer powers when
substituting noncommutative symbols."
2017-07-21 17:59:56+02:00;2;44bcac1830c001721822b1815edd9496b61e23ab;Merge branch 'master' into codegen-ast-type
2017-07-21 17:20:51-04:00;1;15a9455fb396373fad551023870fe32260a0ee2f;Merge branch 'master' into dsolve-ics
2017-07-21 17:20:51-04:00;1;15a9455fb396373fad551023870fe32260a0ee2f;Merge branch 'master' into dsolve-ics
2017-07-21 17:20:51-04:00;1;15a9455fb396373fad551023870fe32260a0ee2f;Merge branch 'master' into dsolve-ics
2017-07-21 17:20:51-04:00;1;15a9455fb396373fad551023870fe32260a0ee2f;Merge branch 'master' into dsolve-ics
2017-07-21 17:20:51-04:00;2;15a9455fb396373fad551023870fe32260a0ee2f;Merge branch 'master' into dsolve-ics
2017-07-21 17:20:51-04:00;8;15a9455fb396373fad551023870fe32260a0ee2f;Merge branch 'master' into dsolve-ics
2017-07-21 17:20:51-04:00;2;15a9455fb396373fad551023870fe32260a0ee2f;Merge branch 'master' into dsolve-ics
2017-07-21 18:30:24-04:00;1;de92f7a4c2d82a5ee0e0d8d8b6a050198f7f98b2;"Merge pull request #13018 from pv/pow-subst-nc-fix

Make Pow.subs to not use fractional powers for noncommutative objects"
2017-07-23 14:29:17+05:18;1;742a2fd8c19160a75d09381820f6a0cefbe807b3;added more utility functions and operations to Rubi
2017-07-23 10:47:28-05:00;1;93f506de0b1a0becfedcbfde71a1457d34262fda;Merge remote-tracking branch 'upstream/1.1.1' into fixes1.1.1
2017-07-24 15:36:23+02:00;1;d4c792c4fe0db61c037e261e68f46112ccf45a7e;Merge branch 'master' into codegen-ast-type
2017-07-26 08:35:52+02:00;1;9dc7a7b0cad1dc8339d60c0f582fc989c97b615e;Merge branch 'master' into trans_equations_translation
2017-07-26 22:16:10-04:00;1;5046929c2ec3625de21563455c21c67a35cd4bce;Merge branch 'master' into 1.1.1
2017-07-27 18:09:27+02:00;1;bc1649055c3ce7e61eb3654ddebf0979d14f365b;Merge branch 'master' into reconstruction_constructor
2017-07-29 05:17:41-05:00;1;3e8028612eadd92db65b0e756061bdc036a6141f;"Merge pull request #12911 from sympy/1.1.1

1.1.1 bugfix release"
2017-07-29 05:17:41-05:00;1;3e8028612eadd92db65b0e756061bdc036a6141f;"Merge pull request #12911 from sympy/1.1.1

1.1.1 bugfix release"
2017-08-01 15:25:22+02:00;1;4f03d6737da63619a736e109fc60238299264f7d;Merge branch 'master' into pythonprinter2
2017-08-01 15:25:22+02:00;1;4f03d6737da63619a736e109fc60238299264f7d;Merge branch 'master' into pythonprinter2
2017-08-01 23:50:56+03:00;1;b9a9293560a46f3bcdbdb8f7a7968e4eeb38cfa3;add other homomorphism cases
2017-08-01 23:50:56+03:00;1;b9a9293560a46f3bcdbdb8f7a7968e4eeb38cfa3;add other homomorphism cases
2017-08-01 23:50:56+03:00;1;b9a9293560a46f3bcdbdb8f7a7968e4eeb38cfa3;add other homomorphism cases
2017-08-09 17:53:54+02:00;1;3664f1ab61d22517a9d5d7d569fc6b758cd76c2d;Merge branch 'master' into codegen-ast-type
2017-08-09 17:53:54+02:00;1;3664f1ab61d22517a9d5d7d569fc6b758cd76c2d;Merge branch 'master' into codegen-ast-type
2017-08-10 02:31:33+03:00;1;19285f5a077468b824ac71834bd70628c74f9543;sylow_subgroup
2017-08-10 02:31:33+03:00;1;19285f5a077468b824ac71834bd70628c74f9543;sylow_subgroup
2017-08-10 02:31:33+03:00;1;19285f5a077468b824ac71834bd70628c74f9543;sylow_subgroup
2017-08-09 22:10:59-05:00;1;7d9c6777ffe5c867413ae601f6e84ab59d2e561f;Merge branch 'master' into solve-ineq
2017-08-09 22:10:59-05:00;1;7d9c6777ffe5c867413ae601f6e84ab59d2e561f;Merge branch 'master' into solve-ineq
2017-08-10 10:21:37+02:00;1;8aef7e4f0aa26847f219c2f6e5439548fa91feda;Merge branch 'master' into reconstruction_constructor
2017-08-10 10:21:37+02:00;1;8aef7e4f0aa26847f219c2f6e5439548fa91feda;Merge branch 'master' into reconstruction_constructor
2017-08-10 10:21:37+02:00;1;78e9bd4bc8a68a6853ed24af8df4cdad88ac7915;Merge branch 'master' into reconstruction_constructor
2017-08-10 10:21:37+02:00;1;78e9bd4bc8a68a6853ed24af8df4cdad88ac7915;Merge branch 'master' into reconstruction_constructor
2017-08-10 13:39:14+02:00;1;aa93b11fd2ae785b0b2a6f4402d92862b772a4cf;Merge branch 'master' into codegen-ast-more-nodes
2017-08-10 13:39:14+02:00;1;aa93b11fd2ae785b0b2a6f4402d92862b772a4cf;Merge branch 'master' into codegen-ast-more-nodes
2017-08-11 22:00:42+03:00;1;eae12768d7173ff83dfe5ffb44467433fb9bffd3;merge master
2017-08-11 22:00:42+03:00;1;eae12768d7173ff83dfe5ffb44467433fb9bffd3;merge master
2017-08-11 22:00:42+03:00;1;eae12768d7173ff83dfe5ffb44467433fb9bffd3;merge master
2017-08-19 21:15:16+05:18;1;97c1886da3536f59db3e2a03e647d7ee98bdcd10;Added parsetools
2017-08-20 10:19:19+05:18;1;f763f1835a433d1d25f0949074bee57a42de9d99;Merge branch 'rubi4' of https://github.com/parsoyaarihant/sympy into ajn_rubi11
2017-08-28 22:42:45+03:00;1;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-08-28 22:42:45+03:00;1;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-08-28 22:42:45+03:00;1;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-08-28 22:42:45+03:00;1;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-08-28 22:42:45+03:00;1;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-08-28 22:42:45+03:00;3;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-08-28 22:42:45+03:00;8;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-08-28 22:42:45+03:00;1;97b9c34b41d0b8372113c20cda970ac7d061cd38;"Merge pull request #2 from sympy/master

Update from original"
2017-09-01 20:28:13-04:00;1;96074807d8d003dbd83198d82ee0d5b16390709d;"Merge pull request #12978 from parsoyaarihant/rubi4

Rubi ruleset using MatchPy (Python 3.6 only)"
2017-09-01 20:28:13-04:00;3;96074807d8d003dbd83198d82ee0d5b16390709d;"Merge pull request #12978 from parsoyaarihant/rubi4

Rubi ruleset using MatchPy (Python 3.6 only)"
2017-09-04 13:09:26+05:18;1;3f0fcc1ae24992a4d707583fbe4b4160750c83f8;Merge branch 'master' of https://github.com/sympy/sympy into Mod_periodicity
2017-09-04 13:09:26+05:18;3;3f0fcc1ae24992a4d707583fbe4b4160750c83f8;Merge branch 'master' of https://github.com/sympy/sympy into Mod_periodicity
2017-09-04 17:50:45+05:18;1;b6191ce69bb0d7045b9b6745edf3d9a21917864b;Merge branch 'master' of https://github.com/sympy/sympy into 13129_degree_Multivariate
2017-09-04 17:50:45+05:18;3;b6191ce69bb0d7045b9b6745edf3d9a21917864b;Merge branch 'master' of https://github.com/sympy/sympy into 13129_degree_Multivariate
2017-09-04 23:44:17+02:00;1;c0516b1e3334d4e8ec4bb839ad111c0762596854;Merge branch 'master' into codegen-ast-more-nodes
2017-09-04 23:44:17+02:00;3;c0516b1e3334d4e8ec4bb839ad111c0762596854;Merge branch 'master' into codegen-ast-more-nodes
2017-09-11 19:50:49-05:00;1;f0836177865ac25e1acf6798fda6571b77b36c7e;Made some minor changes and added some tests
2017-09-15 18:47:20-05:00;1;0fc357cd1742a8ad1514ecd7024342998bba7e6a;Fixed to_rotation_matrix and changed doctests and tests
2017-09-20 22:20:25-04:00;2;8850d4eb343002601ba3c8fb37cb20dcf4a551cb;"Merge pull request #13285 from NikhilPappu/quaternion

Implemented a class Quaternion"
2017-09-27 11:16:40+05:18;2;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;1;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;1;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;1;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;1;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;1;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;3;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;1;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;3;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;8;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;1;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;2;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-27 11:16:40+05:18;2;9537b11ad8652f909b97d092d4838b55b77bd0ce;Merge branch 'master' into double_angle_formula_issue#12641
2017-09-30 18:28:43+03:00;2;ee13fa2b5af8c3be57f8f6913312dd1375e10880;"Merge pull request #3 from sympy/master

update from original"
2017-09-30 18:28:43+03:00;1;ee13fa2b5af8c3be57f8f6913312dd1375e10880;"Merge pull request #3 from sympy/master

update from original"
2017-09-30 18:28:43+03:00;3;ee13fa2b5af8c3be57f8f6913312dd1375e10880;"Merge pull request #3 from sympy/master

update from original"
2015-03-04 14:53:13+03:00;1;260475edee8501e3e73c359603de60f502da25ed;Set zoo.is_complex to True and zoo.is_real to False
2017-10-02 20:30:02-04:00;1;85a8f56a2ecb37a99861192b6c3db751a961ab2b;"Merge pull request #13386 from Upabjojr/diofant_gruntz

gruntz: Porting changes back from diofant"
2017-10-07 01:10:20+05:18;2;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;3;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;3;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;8;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;1;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;2;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-07 01:10:20+05:18;2;1ddb0e97fde83683c61cc5aba94a6552b429df63;"Merge branch 'master' into codegen_rst_spellcheck

Conflicts:
	doc/src/modules/codegen.rst"
2017-10-08 11:26:24+05:18;2;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;3;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;3;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;8;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;1;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;2;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-08 11:26:24+05:18;2;1847840647ec2c53c37cb6e2a296e12a73ef96ab;Merge branch 'master' into trig_integrals
2017-10-12 01:43:54+05:18;2;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;3;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;3;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;8;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;1;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-12 01:43:54+05:18;2;1dbd9fec6c78abc6fb4bb189eb8303eec84e7595;"Merge branch 'master' into vector_1

Conflicts:
	sympy/vector/__init__.py
	sympy/vector/tests/test_field_functions.py"
2017-10-14 09:59:53+05:18;2;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;3;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;3;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;8;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;1;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;2;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-10-14 09:59:53+05:18;2;f0b0a1986d540fcfb308612c19a75b31677fff96;"Merge branch 'master' into 5090_asserts

Conflicts:
	sympy/solvers/tests/test_pde.py"
2017-09-23 17:42:31-05:00;1;15bbcab13e81f43b1bafd118be168bd062806f7e;"no interval solutions from solve; more care with Eq/Ne"
2017-10-17 00:59:04+05:18;2;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;3;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;3;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;8;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;2;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-10-17 00:59:04+05:18;1;91d30a2c221053a89d751440cf041a09ff4b221d;Merge branch 'master' into 11668_bare_excepts
2017-09-27 05:11:55-05:00;1;a9119391e531e1aff8c11a94a0f9c84d36293b4a;ITE/Boolean/Piecewise modifications
2017-09-27 05:11:55-05:00;1;a9119391e531e1aff8c11a94a0f9c84d36293b4a;ITE/Boolean/Piecewise modifications
2017-10-17 09:15:55-05:00;1;f6d511b3661b2ad29a6db8dd2dd17855efebce0e;"Merge pull request #13204 from smichr/pwargs

Piecewise expr must be Basic"
2017-10-17 09:15:55-05:00;1;f6d511b3661b2ad29a6db8dd2dd17855efebce0e;"Merge pull request #13204 from smichr/pwargs

Piecewise expr must be Basic"
2017-10-17 09:15:55-05:00;1;f6d511b3661b2ad29a6db8dd2dd17855efebce0e;"Merge pull request #13204 from smichr/pwargs

Piecewise expr must be Basic"
2017-10-18 23:35:31+05:18;1;c77f6a0093d0f391ce97afdb84872533f3f50aa0;Merge branch 'master' into frange
2017-10-18 23:35:31+05:18;1;c77f6a0093d0f391ce97afdb84872533f3f50aa0;Merge branch 'master' into frange
2017-10-18 23:35:31+05:18;1;c77f6a0093d0f391ce97afdb84872533f3f50aa0;Merge branch 'master' into frange
2017-10-18 14:37:11-07:00;1;8ad2dea7bb5a9ba10696e9119b5fe68aee5e07ba;Merge branch 'master' into binomial_heuristics
2017-10-18 14:37:11-07:00;1;8ad2dea7bb5a9ba10696e9119b5fe68aee5e07ba;Merge branch 'master' into binomial_heuristics
2017-10-18 14:37:11-07:00;1;8ad2dea7bb5a9ba10696e9119b5fe68aee5e07ba;Merge branch 'master' into binomial_heuristics
2017-10-18 14:37:11-07:00;1;8ad2dea7bb5a9ba10696e9119b5fe68aee5e07ba;Merge branch 'master' into binomial_heuristics
2017-10-18 15:46:58-07:00;1;bfc54e6978e850bd40081aeaed95493d9cbbe2cc;Merge remote-tracking branch 'origin/binomial_heuristics' into binomial_heuristics
2017-10-18 15:46:58-07:00;1;bfc54e6978e850bd40081aeaed95493d9cbbe2cc;Merge remote-tracking branch 'origin/binomial_heuristics' into binomial_heuristics
2017-10-18 15:46:58-07:00;1;bfc54e6978e850bd40081aeaed95493d9cbbe2cc;Merge remote-tracking branch 'origin/binomial_heuristics' into binomial_heuristics
2017-10-18 15:46:58-07:00;1;bfc54e6978e850bd40081aeaed95493d9cbbe2cc;Merge remote-tracking branch 'origin/binomial_heuristics' into binomial_heuristics
2017-10-19 22:47:01-05:00;1;503cb1ef95beee1a42d29f6c2ba61c91d0299aec;Merge branch 'master' into n
2017-10-19 22:47:01-05:00;1;503cb1ef95beee1a42d29f6c2ba61c91d0299aec;Merge branch 'master' into n
2017-10-19 22:47:01-05:00;1;503cb1ef95beee1a42d29f6c2ba61c91d0299aec;Merge branch 'master' into n
2017-10-20 11:45:45+05:18;1;185bb23a1cfaa4930b7ee8c08cfa82aa7d96aa73;raise 'ImportError' in case of not installed NumPy
2017-10-20 13:08:46+05:18;2;fd4b40e63698ae4ad4437ecc5db91bb17aa597a6;"Merge pull request #12000 from ayodejiige/11668_bare_excepts

Getting rid of bare excepts where possible"
2017-10-22 02:57:05+05:18;2;f5c654c9f3c0e466a06ea66092be8c574d93864b;Merge branch 'master' of https://github.com/sympy/sympy into frange
2017-10-23 10:04:47+05:18;2;b1a7c1a619ded0f2ee2095281830e5a85a575a23;Merge branch 'master' into disambiguate
2017-10-23 10:04:47+05:18;1;b1a7c1a619ded0f2ee2095281830e5a85a575a23;Merge branch 'master' into disambiguate
2017-10-23 10:04:47+05:18;1;b1a7c1a619ded0f2ee2095281830e5a85a575a23;Merge branch 'master' into disambiguate
2017-10-23 10:04:47+05:18;1;b1a7c1a619ded0f2ee2095281830e5a85a575a23;Merge branch 'master' into disambiguate
2017-10-23 10:04:47+05:18;2;b1a7c1a619ded0f2ee2095281830e5a85a575a23;Merge branch 'master' into disambiguate
2017-10-23 10:04:47+05:18;1;b1a7c1a619ded0f2ee2095281830e5a85a575a23;Merge branch 'master' into disambiguate
2017-10-26 05:28:09-05:00;1;1c658e00ffa5cec777dd2d9f9453135ab55e75d0;overhaul
2017-11-03 05:10:02-05:00;1;7d4a53768444dd511e3d7ece218d71a3a3ea8173;"Merge pull request #12587 from smichr/lts

Piecewise: _eval_interval and _eval_integral overhaul"
2017-11-04 00:56:54-04:00;1;2bbcdab97630dfb5b409e3a08d1e69e43d6f7e01;merged master
2017-11-05 03:48:29-03:00;1;e18a4b0566dd63feff95b490c356b6dcd5a85e0a;Merge remote-tracking branch 'upstream/master'
2017-11-06 22:51:31+05:18;2;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;3;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;2;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;3;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;8;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;4;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;2;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-06 22:51:31+05:18;1;0453afe745e50a167a13269410832680771f004e;merge-master
2017-11-09 09:45:47+00:00;1;66e6069045f3529e8118fab99273a69b5e425b42;"Now can also calculate wigner9j symbol for half integer input.

This fixes #13468, a doctest with a sample input has been added.
The summation now runs over half-integers and a (-1)**(2*j_sum)
has been added for converstion between racah and wigner6j."
2017-11-09 19:59:22+00:00;1;fd2799a31cfc51adb1660945837514e3b4ae9540;Corrected exception handing, removed whitespace
2017-11-10 13:17:27+02:00;1;99912b7d48e03ec23d035e06b217dfca2e791187;"Merge pull request #13580 from Trave11er/13468_wigner

Now can also calculate wigner9j symbol for half integer input."
2017-12-09 13:09:57-05:00;1;909470122055e4b35d467c05eef69e00030a4358;rename grammer to LaTeX.g4 for clarity
2017-12-19 13:45:17-05:00;1;83597ce37431c8d00d13990a1ff39a5f3ee4ddb7;put all generated code together
2017-12-20 08:03:31+05:18;2;9e7865002b6b88b6eca37e2fa9f4cb0263f55058;Fix issue of test for python version <3.5
2017-12-20 12:44:08+05:18;2;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;3;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;2;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;3;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;8;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;2;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-20 12:44:08+05:18;1;20e64060508829491d798fbb4302413e8a145b2c;Merge branch 'master' into brewster_angle
2017-12-21 09:53:10+05:18;1;c2d684fb723620fca990ade80d5df63bff9df3e6;ValueError changed to return NotImplemented
2017-12-23 10:06:35+05:18;2;9af61577a0b7183373792a1c5587aed18a81fcec;fix Matrix*list
2017-12-24 09:56:55+05:18;2;efd8c9c521d1519271a56438107c5e0a57e5b83a;Add test for __rmatmul__
2017-12-25 21:04:05+09:00;2;7d0231704a21c5dbe4740e1f354f736b5a313acc;"Merge pull request #13776 from vishalg2235/matrixmul

fix Matrix*list"
2017-12-27 11:57:00+09:00;4;7d5d74e3dee72ba720d985271473a8aa33652622;"Merge pull request #13773 from abhigyank/13772_matmul

@/__matmul__ now only performs matrix multiplication"
2017-12-28 12:10:20+05:18;2;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;3;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;2;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;3;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;8;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;2;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;6;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2017-12-28 12:10:20+05:18;1;8d926a73ebff0082c4a8486f53f6ee1b5f6d4ff3;Merge branch 'master' of https://github.com/sympy/sympy into check_assumption
2018-01-04 09:39:36-05:00;2;9d42f7d896359510b050222065e4d3442b3a10ac;Merge remote-tracking branch 'upstream/master' into feat/parse_latex
2018-01-04 09:39:36-05:00;4;9d42f7d896359510b050222065e4d3442b3a10ac;Merge remote-tracking branch 'upstream/master' into feat/parse_latex
2018-01-13 21:21:31+09:00;2;5384bf0bbbdcd2ac15fac9cdb90401ff0ff692e5;Merge branch 'master' into floor-term
2018-01-13 21:21:31+09:00;4;5384bf0bbbdcd2ac15fac9cdb90401ff0ff692e5;Merge branch 'master' into floor-term
2018-01-14 21:21:47+01:00;1;44001838ed614bbfe38f7aca5eb775d53fcf8dcd;"correct sympify for numpy arrays of size 1

Fixes issue #13924."
2018-01-15 12:41:49-06:00;1;0f42e1775d47f8fe36afc46e02e1c05987ae38fe;"Merge pull request #13926 from nschloe/sympify-array-size-1-bug-13924

correct sympify for numpy arrays of size 1"
2018-01-15 15:57:17-05:00;1;45dcf98d1a274a3e555e343f095530afe14376f8;Merge remote-tracking branch 'upstream/master' into feat/parse_latex
2018-01-16 15:17:33+01:00;2;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;1;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;2;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;1;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;1;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;2;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;2;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;4;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-16 15:17:33+01:00;1;bb340fe1191919069a584d5c2d8fa968c70472b8;Merge branch 'master' into codegen-ast-more-nodes
2018-01-17 00:05:30+05:18;1;768afd830327f16f8a633da6c2a7921312aad16b;Merge branch 'master' of https://github.com/sympy/sympy into drv_sampling
2018-01-17 04:21:51+05:18;1;d604ef4353bbad7057004e2f707bbf8af89645e3;Merge branch 'master' into precompute_cdf
2018-01-22 19:11:54-07:00;1;fa88838377160d8f8d014a88cbb2fc48b256cab2;Merge branch 'master' into master
2018-01-24 18:33:11-07:00;1;f519c74a28f540c2cd9eed835280d40e26e94459;"Merge remote-tracking branch 'origin/master'

# Conflicts:
#	sympy/stats/crv_types.py"
2018-01-25 20:13:53-06:00;1;1e8b5da3edbdbfe23cb664e1fe4982d88133c9b9;"Merge pull request #13706 from bollwyvl/feat/parse_latex

Add Experimental LaTeX parsing"
2018-01-25 20:45:23-08:00;1;96597e76a169f3ecd195b7614a5a4f1e467e3973;Merge remote-tracking branch 'origin/master' into authors_update
2018-01-27 18:41:02+09:00;1;700d5aaf022ac6489f5b2b2c02aa0b5e0473a950;Merge branch 'master' into error_prefixes
2018-02-04 15:59:38+05:18;1;90d9d903dffba9e6ed0d5ea99c4cbfe6819a5e4c;Merge branch 'master' into heurisch
2018-02-04 15:59:38+05:18;2;90d9d903dffba9e6ed0d5ea99c4cbfe6819a5e4c;Merge branch 'master' into heurisch
2018-02-04 15:59:38+05:18;4;90d9d903dffba9e6ed0d5ea99c4cbfe6819a5e4c;Merge branch 'master' into heurisch
2018-02-04 15:59:38+05:18;1;90d9d903dffba9e6ed0d5ea99c4cbfe6819a5e4c;Merge branch 'master' into heurisch
2018-02-05 17:06:28+05:18;1;165d489ffeb5e1378eadfe49422b670f424e5a04;Merge branch 'master' into floor-term
2018-02-05 17:06:28+05:18;1;165d489ffeb5e1378eadfe49422b670f424e5a04;Merge branch 'master' into floor-term
2018-02-05 20:40:24+01:00;1;dd735b353689d1685e466b382309b540567062e5;Merge branch 'master' into codegen-ast-more-nodes
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;4;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;3;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;3;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;3;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;8;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;6;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;1;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;4;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-07 08:03:56+01:00;2;dbfba394a5f83897d037250366b257c0c672c71a;merge master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;4;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;3;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;3;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;3;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;8;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;6;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;1;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;3;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-11 18:22:35+01:00;2;19246e985424271c02b277e2aece79667cfe53a1;merged master
2018-02-12 04:19:43+05:18;1;419697ffde96c49e18eb83781734b681c6c37009;solved merge conflicts
2018-02-16 17:10:40-06:00;1;54aab55a28f1736967b739ea8c590c20d3b38ccd;use rewrite(Piecewise) in solveset
2018-02-25 18:49:00-06:00;1;6a427258050f7bf0ee0bb9a9ee1f3c5bd56a4375;"Merge pull request #14253 from smichr/pw

solveset modifications for use of Piecewise"
2018-02-27 16:13:27+05:18;1;3264a1c6c49dc6349a27a126dcf9cebd96354b39;Merge branch 'master' into 14283_issue
2018-02-28 16:40:03+05:18;1;6fabd8eb7051224861af6945684532294d5719f7;Merge branch 'master' into patch-3
2018-03-09 07:25:43+05:18;1;fe59056124364f59b0e186fc231e32d0c40cac0c;Try except block added
2018-03-10 11:43:40+01:00;1;904ee48ab0f9e6743506c8fe1bca2e6d54a5d208;"Sum(sin(n) / n**3, (n, 1, oo)).is_convergent() raises NotImplementedError

Fix issue 14463.

A test for convergence in is_convergent() method is added. Such a test aims to treat the series
whose general term is a product between a bounded term a_n and a term b_n, such
that the sum of b_n is absolutely convergent.

Files changed:
   sympy/concrete/summations.py
   sympy/concrete/tests/test_sums_products.py

A test is also added."
2018-03-12 21:05:01+02:00;1;f091a3cd813623284886ca2e382443cc50402ce5;"Merge pull request #14401 from ArighnaIITG/14111_issue

Limit comparison test introduced"
2018-03-14 14:35:41+01:00;1;c6e7db7e33070a1bcd69f355e51cbffb745a60ac;"Merge remote-tracking branch 'upstream/master' into series_dirichlet

The conflit for
	sympy/concrete/tests/test_sums_products.py
was resolved.

Also a TODO was added in the code for explaining the heuristics of
the test for convergence."
2018-03-14 17:55:22-04:00;1;d685f5d8255832ba44db98db46df217af8bd16a1;"Merge pull request #14464 from maurogaravello/series_dirichlet

Test for convergence in Sum"
2018-03-15 01:03:39-04:00;2;ae5e622da7518f2bb5a32b352734d434c92e2bd5;"More general comparison test for convergence

The current comparison tests match the order of the expression against
four patterns:

- `1/log(n)**p`
- `1/(n*log(n)**p)`
- `1/(n*log(n)*log(log(n))*p`
- `1/(n**p*log(n))`

This missed many series that could be handled here, such as
`1/(n**2*log(n)**3)`, `1/log(log(n))`, etc. All these are replaced by
one pattern

- `1/(n**p*log(n)**q*log(log(n))**r)`

with the logic: if p>1 or (p=1 and q>1) or (p=q=1 and r>1) then
converges, otherwise diverges. This allows the method to handle series
such as `log(log(n))/(n*log(n)**2)` or `1/(n*sqrt(log(n))*log(log(n)))`
which previously raised exceptions.

Incidental corrections:

- Ratio and root tests computed a limit without a try-except block,
risking NotImplementedError
- Integral test failed on `Sum(log(n)/n**2, (n, 5, oo))` because an
if-block was incorrectly indented."
2018-03-15 08:43:45+02:00;2;18fe2e1e5b07e3f8c7315a897c559b5911d143c3;"Merge pull request #14509 from normalhuman/comparison_integral_tests

More general comparison test for convergence"
2018-03-18 21:29:40+01:00;4;0e473c2784d14dac47a189c98be5920d116fa820;Merge branch 'master' into codegen-ast-more-nodes
2018-03-18 21:29:40+01:00;1;0e473c2784d14dac47a189c98be5920d116fa820;Merge branch 'master' into codegen-ast-more-nodes
2018-03-19 11:55:31-07:00;4;8b02c94f1448b12901926b0f3fbb12d0727342a4;"merging
Merge branch 'master' of https://github.com/ethankward/sympy"
2018-03-20 18:01:45+05:18;4;9b84d68b88b587b98f614646edf843c7d359b09c;_solve_trig2 handles argument properly
2018-03-26 21:12:34-05:00;4;3ba637f0e48b8f620959f1516edeb018bef2e4c2;Merge branch 'master' into matdot
2018-03-26 21:12:34-05:00;1;3ba637f0e48b8f620959f1516edeb018bef2e4c2;Merge branch 'master' into matdot
2018-03-26 21:12:34-05:00;2;3ba637f0e48b8f620959f1516edeb018bef2e4c2;Merge branch 'master' into matdot
2018-03-26 21:12:34-05:00;4;3ba637f0e48b8f620959f1516edeb018bef2e4c2;Merge branch 'master' into matdot
2018-03-26 21:12:34-05:00;1;3ba637f0e48b8f620959f1516edeb018bef2e4c2;Merge branch 'master' into matdot
2018-03-26 21:12:34-05:00;2;3ba637f0e48b8f620959f1516edeb018bef2e4c2;Merge branch 'master' into matdot
2018-03-22 22:37:29-05:00;1;cc37e8cd1181e58978e803c7597b24b92d855402;hybrid approach
2018-03-26 12:00:09-05:00;2;1edecf7a64b2675fb3396e632c2efa1cf68ae5b5;"Rational sympifies non-Basic p

An mpq converter was added to sympy converters and Rational
now attempts sympification of non-string arguments. This allows
PythonRational and mpmath.mpq, for example, to be converted to
Rational without special testing in other places of the codebase."
2018-04-15 00:33:53-05:00;2;677c9b7bac53afd4bb73718bf5a47ed11711cf93;"Merge pull request #14348 from smichr/cr

improve identification of imaginary roots for CRootOf instances"
2018-05-12 19:06:25+05:18;4;1d8d2e16c134da5ba54c6292ec2c3d3768532590;Merge branch 'master' of https://github.com/sympy/sympy into drv_classes
2018-05-12 19:06:25+05:18;2;1d8d2e16c134da5ba54c6292ec2c3d3768532590;Merge branch 'master' of https://github.com/sympy/sympy into drv_classes
2018-05-12 19:06:25+05:18;1;1d8d2e16c134da5ba54c6292ec2c3d3768532590;Merge branch 'master' of https://github.com/sympy/sympy into drv_classes
2018-05-30 21:13:49+05:18;4;a5dc6ca8d69a3075a23e0217990d4f1bd201f105;Merge branch 'master' into contra_flex
2018-05-30 21:13:49+05:18;2;a5dc6ca8d69a3075a23e0217990d4f1bd201f105;Merge branch 'master' into contra_flex
2018-06-05 18:31:33-05:00;4;6ea23565c0a8178cf881650a1c36b9bbc302e5bc;Merge branch 'master' into mybranch1
2018-06-05 18:31:33-05:00;2;6ea23565c0a8178cf881650a1c36b9bbc302e5bc;Merge branch 'master' into mybranch1
2018-06-05 18:31:33-05:00;1;6ea23565c0a8178cf881650a1c36b9bbc302e5bc;Merge branch 'master' into mybranch1
2018-06-05 18:31:33-05:00;2;6ea23565c0a8178cf881650a1c36b9bbc302e5bc;Merge branch 'master' into mybranch1
2018-06-06 15:51:15+02:00;2;561dceb816f8d543ef60639b9f581a69a90e4035;Merge branch 'master' into codegen-ast-more-nodes
2018-06-12 12:45:43-07:00;2;025a857897fc24dbf0d74773f47443b5b6d20992;Merge branch 'master' into master
2018-06-22 13:08:15-06:00;1;e8a4f6f52232e6c79ba7f2fe67fdc58dd63ebc1a;Handle the file not existing in the plot test cleanup
2018-06-27 00:16:44-06:00;1;ac1749ffbf36182d695e0bc984aff0394626f2b1;"Merge pull request #14747 from asmeurer/test-cruft

Clean up some cruft in the tests"
2018-06-27 12:37:51-06:00;2;b40803e089551d672b36406827502e141c98e041;Merge branch '1.2' into core-py2-performance
2018-06-27 12:37:51-06:00;1;b40803e089551d672b36406827502e141c98e041;Merge branch '1.2' into core-py2-performance
2018-06-29 00:10:30+02:00;1;75b090119be1b2fab0b403f3c0f5651c6a55c0d6;Merge branch '1.2' into codegen-ast-more-nodes
2018-07-11 12:41:17-06:00;1;03268800330a27da9e43ebba9eb58c0b00683261;"Merge pull request #14838 from sympy/1.2

SymPy 1.2 release"
